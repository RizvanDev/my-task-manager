{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Pages\\\\main-page\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\TasksContainer.jsx\";\nimport { createRef } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle';\nimport Task from '../Task/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksContainer = _ref => {\n  let {\n    darkMode,\n    tabTitle,\n    tasksData,\n    tasksMethods,\n    timeLine,\n    type\n  } = _ref;\n  const typeCondition = type === 'Active';\n  const blockTitleStyles = {\n    fontSize: '18px',\n    lineHeight: '25px',\n    letterSpacing: '0.02em'\n  };\n\n  if (window.matchMedia('(max-width: 1400px)').matches) {\n    blockTitleStyles.fontSize = '16px';\n    blockTitleStyles.lineHeight = '20px';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeCondition ? 'activeTasks__block' : 'completedTasks__block',\n    children: [/*#__PURE__*/_jsxDEV(MyTitle, { ...blockTitleStyles,\n      children: [type, \" tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      className: typeCondition ? 'activeTasks__container' : 'completedTasks__container',\n      children: tasksData.filter(task => typeCondition ? !task.completed : task.completed).map(task => {\n        //            const nodeRef = createRef(null)\n        return /*#__PURE__*/_jsxDEV(CSSTransition, {\n          /* nodeRef={nodeRef} */\n          timeout: 500,\n          classNames: \"task\",\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            time: task.time,\n            currentTask: task,\n            tabTitle: tabTitle,\n            completed: task.completed,\n            deleteTask: tasksMethods.deleteTask,\n            checkTask: tasksMethods.checkTask,\n            editTask: tasksMethods.editTask,\n            timeLine: timeLine,\n            darkMode: darkMode,\n            ref: nodeRef,\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, task.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TasksContainer;\nexport default TasksContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksContainer\");","map":{"version":3,"names":["createRef","TransitionGroup","CSSTransition","MyTitle","Task","TasksContainer","darkMode","tabTitle","tasksData","tasksMethods","timeLine","type","typeCondition","blockTitleStyles","fontSize","lineHeight","letterSpacing","window","matchMedia","matches","filter","task","completed","map","time","deleteTask","checkTask","editTask","nodeRef"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Pages/main-page/MainContent/Tasks/CategoriesTab/TasksContainer.jsx"],"sourcesContent":["import { createRef } from 'react'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle'\r\nimport Task from '../Task/Task'\r\n\r\nconst TasksContainer = ({ darkMode, tabTitle, tasksData, tasksMethods, timeLine, type }) => {\r\n  const typeCondition = type === 'Active'\r\n\r\n  const blockTitleStyles = {\r\n    fontSize: '18px',\r\n    lineHeight: '25px',\r\n    letterSpacing: '0.02em',\r\n  }\r\n\r\n  if (window.matchMedia('(max-width: 1400px)').matches) {\r\n    blockTitleStyles.fontSize = '16px'\r\n    blockTitleStyles.lineHeight = '20px'\r\n  }\r\n\r\n  return (\r\n    <div className={typeCondition ? 'activeTasks__block' : 'completedTasks__block'}>\r\n      <MyTitle {...blockTitleStyles}>{type} tasks</MyTitle>\r\n\r\n      <TransitionGroup\r\n        className={typeCondition ? 'activeTasks__container' : 'completedTasks__container'}>\r\n        {tasksData\r\n          .filter(task => (typeCondition ? !task.completed : task.completed))\r\n          .map(task => {\r\n            //            const nodeRef = createRef(null)\r\n\r\n            return (\r\n              <CSSTransition\r\n                key={task.time}\r\n                /* nodeRef={nodeRef} */ timeout={500}\r\n                classNames='task'>\r\n                <Task\r\n                  time={task.time}\r\n                  currentTask={task}\r\n                  tabTitle={tabTitle}\r\n                  completed={task.completed}\r\n                  deleteTask={tasksMethods.deleteTask}\r\n                  checkTask={tasksMethods.checkTask}\r\n                  editTask={tasksMethods.editTask}\r\n                  timeLine={timeLine}\r\n                  darkMode={darkMode}\r\n                  ref={nodeRef}>\r\n                  {task.task}\r\n                </Task>\r\n              </CSSTransition>\r\n            )\r\n          })}\r\n      </TransitionGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TasksContainer\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,cAAc,GAAG,QAAqE;EAAA,IAApE;IAAEC,QAAF;IAAYC,QAAZ;IAAsBC,SAAtB;IAAiCC,YAAjC;IAA+CC,QAA/C;IAAyDC;EAAzD,CAAoE;EAC1F,MAAMC,aAAa,GAAGD,IAAI,KAAK,QAA/B;EAEA,MAAME,gBAAgB,GAAG;IACvBC,QAAQ,EAAE,MADa;IAEvBC,UAAU,EAAE,MAFW;IAGvBC,aAAa,EAAE;EAHQ,CAAzB;;EAMA,IAAIC,MAAM,CAACC,UAAP,CAAkB,qBAAlB,EAAyCC,OAA7C,EAAsD;IACpDN,gBAAgB,CAACC,QAAjB,GAA4B,MAA5B;IACAD,gBAAgB,CAACE,UAAjB,GAA8B,MAA9B;EACD;;EAED,oBACE;IAAK,SAAS,EAAEH,aAAa,GAAG,oBAAH,GAA0B,uBAAvD;IAAA,wBACE,QAAC,OAAD,OAAaC,gBAAb;MAAA,WAAgCF,IAAhC;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,eAAD;MACE,SAAS,EAAEC,aAAa,GAAG,wBAAH,GAA8B,2BADxD;MAAA,UAEGJ,SAAS,CACPY,MADF,CACSC,IAAI,IAAKT,aAAa,GAAG,CAACS,IAAI,CAACC,SAAT,GAAqBD,IAAI,CAACC,SADzD,EAEEC,GAFF,CAEMF,IAAI,IAAI;QACX;QAEA,oBACE,QAAC,aAAD;UAEE;UAAwB,OAAO,EAAE,GAFnC;UAGE,UAAU,EAAC,MAHb;UAAA,uBAIE,QAAC,IAAD;YACE,IAAI,EAAEA,IAAI,CAACG,IADb;YAEE,WAAW,EAAEH,IAFf;YAGE,QAAQ,EAAEd,QAHZ;YAIE,SAAS,EAAEc,IAAI,CAACC,SAJlB;YAKE,UAAU,EAAEb,YAAY,CAACgB,UAL3B;YAME,SAAS,EAAEhB,YAAY,CAACiB,SAN1B;YAOE,QAAQ,EAAEjB,YAAY,CAACkB,QAPzB;YAQE,QAAQ,EAAEjB,QARZ;YASE,QAAQ,EAAEJ,QATZ;YAUE,GAAG,EAAEsB,OAVP;YAAA,UAWGP,IAAI,CAACA;UAXR;YAAA;YAAA;YAAA;UAAA;QAJF,GACOA,IAAI,CAACG,IADZ;UAAA;UAAA;UAAA;QAAA,QADF;MAoBD,CAzBF;IAFH;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CAjDD;;KAAMnB,c;AAmDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}