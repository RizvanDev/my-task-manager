{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Components\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\CategoriesTab.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createRef } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './categoriesTab.scss';\nimport MyTitle from '../../../MyTitle/MyTitle';\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig';\nimport Task from '../Task/Task';\nimport useValue from '../../../../hooks/useValue';\nimport useLocaleStorage from '../../../../hooks/useLocaleStorage';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoriesTab = props => {\n  _s();\n\n  const [modal, setModal] = useValue(false);\n  const [sortType, setSortType] = useLocaleStorage('newest first');\n  useEffect(() => {\n    setStorage(sortType);\n  }, [sortType]);\n\n  const sortTasks = e => {\n    setSortType(e.target.value);\n    return props.sortingTasks(e.target.value, props.category.title);\n  };\n\n  const removeCategory = () => {\n    const checkingTabs = props.tabItems[props.idx - 1] || props.tabItems[1];\n    props.setTab(props.tabItems.length > 1 && checkingTabs.title);\n    props.setCategory(props.tabItems.length > 1 && checkingTabs.title);\n    return props.setTabItem(props.tabItems.filter(e => e.title !== props.category.title));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.tab === props.category.title ? 'category__container active' : 'category__container',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__title\",\n      children: props.category.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__activeTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n        fontSize: \"18px\",\n        lineHeight: \"25px\",\n        letterSpacing: \"0.02em\",\n        children: \"Active tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        className: props.darkMode ? 'activeTasksContainer darkMode' : 'activeTasksContainer',\n        children: props.category.data.filter(task => !task.completed).map(uncompletedTask => {\n          const nodeRef = /*#__PURE__*/createRef(null);\n          return /*#__PURE__*/_jsxDEV(CSSTransition, {\n            nodeRef: nodeRef,\n            timeout: 500,\n            classNames: \"task\",\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              date: uncompletedTask.date,\n              currentTask: uncompletedTask,\n              tabTitle: props.category.title,\n              deleteTask: props.deleteTask,\n              completed: uncompletedTask.completed,\n              checkTask: props.checkTask,\n              editTask: props.editTask,\n              ref: nodeRef,\n              children: uncompletedTask.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, uncompletedTask.date.time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__completedTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n        fontSize: \"18px\",\n        lineHeight: \"25px\",\n        letterSpacing: \"0.02em\",\n        children: \"Completed tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        className: props.darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer',\n        children: props.category.data.filter(task => task.completed).map(completedTask => {\n          const nodeRef = /*#__PURE__*/createRef(null);\n          return /*#__PURE__*/_jsxDEV(CSSTransition, {\n            nodeRef: nodeRef,\n            timeout: 500,\n            classNames: \"task\",\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              date: completedTask.date,\n              currentTask: completedTask,\n              tabTitle: props.category.title,\n              deleteTask: props.deleteTask,\n              completed: completedTask.completed,\n              checkTask: props.checkTask,\n              ref: nodeRef,\n              children: completedTask.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)\n          }, completedTask.date.time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"category__configBtn\",\n      title: \"configuration\",\n      onClick: () => setModal(!modal),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoriesConfig, {\n      modal: modal,\n      sortType: sortType,\n      sortingTasks: sortTasks,\n      removeCategory: removeCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoriesTab, \"IMSSobpHc+bQ7brK8wS7OsVDAho=\", false, function () {\n  return [useValue, useLocaleStorage];\n});\n\n_c = CategoriesTab;\nexport default CategoriesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesTab\");","map":{"version":3,"names":["React","createRef","CSSTransition","TransitionGroup","MyTitle","CategoriesConfig","Task","useValue","useLocaleStorage","useEffect","CategoriesTab","props","modal","setModal","sortType","setSortType","setStorage","sortTasks","e","target","value","sortingTasks","category","title","removeCategory","checkingTabs","tabItems","idx","setTab","length","setCategory","setTabItem","filter","tab","darkMode","data","task","completed","map","uncompletedTask","nodeRef","date","deleteTask","checkTask","editTask","time","completedTask"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Components/MainContent/Tasks/CategoriesTab/CategoriesTab.jsx"],"sourcesContent":["import React, { createRef } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport './categoriesTab.scss'\r\nimport MyTitle from '../../../MyTitle/MyTitle'\r\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig'\r\nimport Task from '../Task/Task'\r\nimport useValue from '../../../../hooks/useValue'\r\nimport useLocaleStorage from '../../../../hooks/useLocaleStorage'\r\nimport { useEffect } from 'react'\r\n\r\nconst CategoriesTab = props => {\r\n  const [modal, setModal] = useValue(false)\r\n  const [sortType, setSortType] = useLocaleStorage('newest first')\r\n\r\n  useEffect(() => {\r\n    setStorage(sortType)\r\n  }, [sortType])\r\n\r\n  const sortTasks = e => {\r\n    setSortType(e.target.value)\r\n    return props.sortingTasks(e.target.value, props.category.title)\r\n  }\r\n\r\n  const removeCategory = () => {\r\n    const checkingTabs = props.tabItems[props.idx - 1] || props.tabItems[1]\r\n\r\n    props.setTab(props.tabItems.length > 1 && checkingTabs.title)\r\n    props.setCategory(props.tabItems.length > 1 && checkingTabs.title)\r\n\r\n    return props.setTabItem(props.tabItems.filter(e => e.title !== props.category.title))\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.tab === props.category.title\r\n          ? 'category__container active'\r\n          : 'category__container'\r\n      }>\r\n      <div className='category__title'>{props.category.title}</div>\r\n      <div className='category__activeTasks'>\r\n        <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em'>\r\n          Active tasks\r\n        </MyTitle>\r\n        <TransitionGroup\r\n          className={\r\n            props.darkMode ? 'activeTasksContainer darkMode' : 'activeTasksContainer'\r\n          }>\r\n          {props.category.data\r\n            .filter(task => !task.completed)\r\n            .map(uncompletedTask => {\r\n              const nodeRef = createRef(null)\r\n              return (\r\n                <CSSTransition\r\n                  key={uncompletedTask.date.time}\r\n                  nodeRef={nodeRef}\r\n                  timeout={500}\r\n                  classNames='task'>\r\n                  <Task\r\n                    date={uncompletedTask.date}\r\n                    currentTask={uncompletedTask}\r\n                    tabTitle={props.category.title}\r\n                    deleteTask={props.deleteTask}\r\n                    completed={uncompletedTask.completed}\r\n                    checkTask={props.checkTask}\r\n                    editTask={props.editTask}\r\n                    ref={nodeRef}>\r\n                    {uncompletedTask.task}\r\n                  </Task>\r\n                </CSSTransition>\r\n              )\r\n            })}\r\n        </TransitionGroup>\r\n      </div>\r\n      <div className='category__completedTasks'>\r\n        <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em'>\r\n          Completed tasks\r\n        </MyTitle>\r\n        <TransitionGroup\r\n          className={\r\n            props.darkMode\r\n              ? 'completedTasksContainer darkMode'\r\n              : 'completedTasksContainer'\r\n          }>\r\n          {props.category.data\r\n            .filter(task => task.completed)\r\n            .map(completedTask => {\r\n              const nodeRef = createRef(null)\r\n              return (\r\n                <CSSTransition\r\n                  key={completedTask.date.time}\r\n                  nodeRef={nodeRef}\r\n                  timeout={500}\r\n                  classNames='task'>\r\n                  <Task\r\n                    date={completedTask.date}\r\n                    currentTask={completedTask}\r\n                    tabTitle={props.category.title}\r\n                    deleteTask={props.deleteTask}\r\n                    completed={completedTask.completed}\r\n                    checkTask={props.checkTask}\r\n                    ref={nodeRef}>\r\n                    {completedTask.task}\r\n                  </Task>\r\n                </CSSTransition>\r\n              )\r\n            })}\r\n        </TransitionGroup>\r\n      </div>\r\n      <button\r\n        type='button'\r\n        className='category__configBtn'\r\n        title='configuration'\r\n        onClick={() => setModal(!modal)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n      <CategoriesConfig\r\n        modal={modal}\r\n        sortType={sortType}\r\n        sortingTasks={sortTasks}\r\n        removeCategory={removeCategory}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesTab\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}