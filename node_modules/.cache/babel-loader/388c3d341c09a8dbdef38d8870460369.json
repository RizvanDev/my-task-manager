{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Components\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\CategoriesTab.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './categoriesTab.scss';\nimport MyTitle from '../../../MyTitle/MyTitle';\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig';\nimport Task from '../Task/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoriesTab = props => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n\n  const removeCategory = () => {\n    const checkingTabs = (props.tabItems[props.idx - 1] || props.tabItems[1]).title;\n    console.log(checkingTabs);\n    props.setTab(props.tabItems.length > 1 ? (props.tabItems[props.idx - 1] || props.tabItems[1]).title : '');\n    return props.setTabItem(props.tabItems.filter(e => e.title !== props.category.title));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.tab === props.category.title ? 'category__container active' : 'category__container',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__title\",\n      children: props.category.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__activeTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n        fontSize: \"18px\",\n        lineHeight: \"25px\",\n        letterSpacing: \"0.02em\",\n        children: \"Active tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: props.darkMode ? 'activeTasksContainer darkMode' : 'activeTasksContainer',\n        children: props.category.data.filter(task => !task.completed).map(uncompletedTask => /*#__PURE__*/_jsxDEV(Task, {\n          date: uncompletedTask.date,\n          currentTask: uncompletedTask,\n          tabTitle: props.category.title,\n          deleteTask: props.deleteTask,\n          completed: uncompletedTask.completed,\n          checkTask: props.checkTask,\n          editTask: props.editTask,\n          children: uncompletedTask.task\n        }, uncompletedTask.date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__completedTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n        fontSize: \"18px\",\n        lineHeight: \"25px\",\n        letterSpacing: \"0.02em\",\n        children: \"Completed tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: props.darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer',\n        children: props.category.data.filter(task => task.completed).map(completedTask => /*#__PURE__*/_jsxDEV(Task, {\n          date: completedTask.date,\n          currentTask: completedTask,\n          tabTitle: props.category.title,\n          deleteTask: props.deleteTask,\n          completed: completedTask.completed,\n          checkTask: props.checkTask,\n          children: completedTask.task\n        }, completedTask.date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"category__configBtn\",\n      title: \"configuration\",\n      onClick: () => setModal(!modal),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoriesConfig, {\n      modal: modal,\n      removeCategory: removeCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoriesTab, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n\n_c = CategoriesTab;\nexport default CategoriesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesTab\");","map":{"version":3,"names":["React","useState","MyTitle","CategoriesConfig","Task","CategoriesTab","props","modal","setModal","removeCategory","checkingTabs","tabItems","idx","title","console","log","setTab","length","setTabItem","filter","e","category","tab","darkMode","data","task","completed","map","uncompletedTask","date","deleteTask","checkTask","editTask","completedTask"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Components/MainContent/Tasks/CategoriesTab/CategoriesTab.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './categoriesTab.scss'\r\nimport MyTitle from '../../../MyTitle/MyTitle'\r\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig'\r\nimport Task from '../Task/Task'\r\n\r\nconst CategoriesTab = props => {\r\n  const [modal, setModal] = useState(false)\r\n\r\n  const removeCategory = () => {\r\n    const checkingTabs = (props.tabItems[props.idx - 1] || props.tabItems[1]).title\r\n\r\n    console.log(checkingTabs)\r\n    props.setTab(\r\n      props.tabItems.length > 1 ? (props.tabItems[props.idx - 1] || props.tabItems[1]).title : '',\r\n    )\r\n    return props.setTabItem(props.tabItems.filter(e => e.title !== props.category.title))\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.tab === props.category.title ? 'category__container active' : 'category__container'\r\n      }>\r\n      <div className='category__title'>{props.category.title}</div>\r\n      <div className='category__activeTasks'>\r\n        <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em'>\r\n          Active tasks\r\n        </MyTitle>\r\n        <div className={props.darkMode ? 'activeTasksContainer darkMode' : 'activeTasksContainer'}>\r\n          {props.category.data\r\n            .filter(task => !task.completed)\r\n            .map(uncompletedTask => (\r\n              <Task\r\n                key={uncompletedTask.date}\r\n                date={uncompletedTask.date}\r\n                currentTask={uncompletedTask}\r\n                tabTitle={props.category.title}\r\n                deleteTask={props.deleteTask}\r\n                completed={uncompletedTask.completed}\r\n                checkTask={props.checkTask}\r\n                editTask={props.editTask}>\r\n                {uncompletedTask.task}\r\n              </Task>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div className='category__completedTasks'>\r\n        <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em'>\r\n          Completed tasks\r\n        </MyTitle>\r\n        <div\r\n          className={\r\n            props.darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer'\r\n          }>\r\n          {props.category.data\r\n            .filter(task => task.completed)\r\n            .map(completedTask => (\r\n              <Task\r\n                key={completedTask.date}\r\n                date={completedTask.date}\r\n                currentTask={completedTask}\r\n                tabTitle={props.category.title}\r\n                deleteTask={props.deleteTask}\r\n                completed={completedTask.completed}\r\n                checkTask={props.checkTask}>\r\n                {completedTask.task}\r\n              </Task>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <button\r\n        type='button'\r\n        className='category__configBtn'\r\n        title='configuration'\r\n        onClick={() => setModal(!modal)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n      <CategoriesConfig modal={modal} removeCategory={removeCategory} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesTab\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}