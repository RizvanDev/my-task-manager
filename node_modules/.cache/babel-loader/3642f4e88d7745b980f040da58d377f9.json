{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getDatabase, ref, set, get } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getDatabase(app);\n\nconst addEmptyArrays = data => {\n  return Array.isArray(data) ? data.map(obj => obj.hasOwnProperty('data') ? obj : { ...obj,\n    data: []\n  }) : data;\n}; // Helper function for writing data in the database\n\n\nconst writeToDataBase = (path, data) => set(ref(db, path), data); // Helper function for reading data from the database\n\n\nconst readFromDatabase = path => get(ref(db, path)); // database\n\n\nconst database = {\n  // send user information (email,avatar,nickname,id)\n  writeUserInfoData: async userInfo => {\n    const path = `users/${userInfo.uid}/user_info`;\n    const data = {\n      uid: userInfo.uid,\n      username: userInfo.nick,\n      email: userInfo.email,\n      avatar: userInfo.photo\n    };\n    return userInfo.uid && (await writeToDataBase(path, data));\n  },\n  // send user tasks Data\n  writeUserTasksData: async (userId, date, tabItems) => {\n    const path = `users/${userId}/user_tasks/${date}`;\n    return userId && (await writeToDataBase(path, { ...tabItems.tasks\n    }));\n  },\n  // create/read new day\n  writeNewDayData: async (userId, date, setTabItems, setCategory, setTab) => {\n    const path = `users/${userId}/user_tasks/${date}`;\n    const snapshot = await readFromDatabase(path);\n    const dataTabItems = {\n      date: new Date().toLocaleDateString().split('.').reverse().join(''),\n      tasks: addEmptyArrays(tasks)\n    };\n\n    if (snapshot.exists()) {\n      const tasks = snapshot.val();\n      setCategory(tasks[0].title);\n      setTab(tasks[0].title);\n      setTabItems({\n        date: new Date().toLocaleDateString().split('.').reverse().join(''),\n        tasks: addEmptyArrays(tasks)\n      });\n    } else {\n      setTabItems({\n        date: new Date().toLocaleDateString().split('.').reverse().join(''),\n        tasks: []\n      });\n    }\n  },\n  // create Data for new user\n  createUserData: async (userId, userInfo, tabItems) => {\n    const path = `users/${userId}`;\n    const day = new Date().toLocaleDateString().split('.').join('');\n    const data = {\n      user_info: {\n        uid: userInfo.uid,\n        username: userInfo.nick,\n        email: userInfo.email,\n        avatar: userInfo.photo\n      },\n      user_tasks: {\n        [day]: tabItems.tasks\n      }\n    };\n    return userId && (await writeToDataBase(path, data));\n  },\n  // reade user Data\n  readUserData: async (userId, setUserInfo, tabItems, setTabItems, setTab, setCategory) => {\n    const path = `users/${userId}/`;\n    const date = new Date().toLocaleDateString().split('.').join('');\n    const snapshot = await readFromDatabase(path);\n\n    if (snapshot.exists()) {\n      const data = snapshot.val();\n      const condition = data.user_tasks && data.user_tasks[date];\n      const userData = {\n        info: {\n          photo: data.user_info.avatar,\n          nick: data.user_info.username,\n          email: data.user_info.email,\n          uid: data.user_info.uid\n        },\n        tasks: { ...tabItems,\n          tasks: addEmptyArrays(condition ? data.user_tasks[date] : [])\n        }\n      };\n      setUserInfo(userData.info);\n      setTabItems(userData.tasks);\n      setCategory(condition ? data.user_tasks[date][0].title : '');\n      setTab(condition ? data.user_tasks[date][0].title : '');\n    }\n  },\n  // reading the data of the selected day\n  readPastData: _ref => {\n    let { ...params\n    } = _ref;\n    const date = params.date.toLocaleDateString().split('.').join('');\n    const distanceRef = ref(db, `users/${params.userInfo.uid}/user_tasks/${date}`);\n    return get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const tasks = snapshot.val();\n        params.setCalendarDate(params.date);\n        setTimeout(() => {\n          params.setTabItems({ ...params.tabItems,\n            tasks: [...addEmptyArrays(tasks)]\n          });\n          params.setCategory(tasks[0].title);\n          params.setTab(tasks[0].title);\n          params.openModals({ ...params.modals,\n            calendarModal: false\n          });\n        }, 500);\n        return;\n      }\n\n      return params.createAuthInfoModal({\n        show: true,\n        type: 'Error',\n        text: `You don't have any tasks for this day`\n      });\n    });\n  },\n  // Statistics\n  createStatistics: (userId, period, setStatistics) => {\n    const distanceRef = ref(db, `users/${userId}/user_tasks/`);\n    const date = new Date().toLocaleDateString().split('.').join('');\n    let categories = 0;\n    let createdTasks = 0;\n    let completedTasks = 0;\n\n    const calculateTasks = data => {\n      return data.forEach(category => {\n        if (category.hasOwnProperty('data')) {\n          createdTasks += category.data.length;\n          category.data.forEach(task => task.completed && completedTasks++);\n        }\n      });\n    };\n\n    const periods = {\n      Day: () => {\n        const distanceRefDay = ref(db, `users/${userId}/user_tasks/${date}`);\n        return get(distanceRefDay).then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            categories += data.length;\n            calculateTasks(data);\n            setStatistics({\n              Categories: categories,\n              Created: createdTasks,\n              Completed: completedTasks\n            });\n          }\n        });\n      },\n      Month: () => {\n        const currentMonth = date.split('').splice(2, 2).join('');\n        return get(distanceRef).then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n\n            for (const day in data) {\n              const condition = day.split('').splice(2, 2).join('') === currentMonth;\n\n              if (condition) {\n                categories += data[day].length;\n                calculateTasks(data[day]);\n              }\n            }\n\n            setStatistics({\n              Categories: categories,\n              Created: createdTasks,\n              Completed: completedTasks\n            });\n          }\n        });\n      },\n      Year: () => {\n        const currentYear = date.split('').splice(4).join('');\n        return get(distanceRef).then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n\n            for (const day in data) {\n              const condition = day.split('').splice(4).join('') === currentYear;\n\n              if (condition) {\n                categories += data[day].length;\n                calculateTasks(data[day]);\n              }\n            }\n\n            setStatistics({\n              Categories: categories,\n              Created: createdTasks,\n              Completed: completedTasks\n            });\n          }\n        });\n      }\n    };\n    return periods[period]();\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n\n        if (userCredential) {\n          params.setLogin({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            show: true,\n            type: 'Success',\n            text: 'Authorization successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            uid: userCredential.user.uid\n          });\n          database.readUserData(userCredential.user.uid, params.setUserInfo, params.tabItems, params.setTabItems, params.setTab, params.setCategory);\n          setTimeout(() => {\n            params.openModals({ ...params.modals,\n              authModal: false\n            });\n          }, 1500);\n        }\n      } catch (Error) {\n        params.createAuthInfoModal({\n          show: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref3 => {\n    let { ...params\n    } = _ref3;\n\n    if (params.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n\n        if (userCredential) {\n          params.setRegistration({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            show: true,\n            type: 'Success',\n            text: 'Registration successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            email: userCredential.user.email,\n            uid: userCredential.user.uid\n          });\n          database.createUserData(userCredential.user.uid, params.userInfo, params.tabItems);\n          setTimeout(() => {\n            params.openModals({ ...params.modals,\n              authModal: false\n            });\n            params.navigate('Profile.jsx');\n          }, 1000);\n        }\n      } catch (Error) {\n        params.createAuthInfoModal({\n          show: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Logout\n  logOut: _ref4 => {\n    let { ...params\n    } = _ref4;\n    return signOut(auth).then(() => {\n      params.setUserInfo({\n        photo: params.defaultPhoto,\n        nick: 'username',\n        email: '',\n        uid: ''\n      });\n      params.setCalendarDate(new Date());\n      params.setTimeLine({\n        past: false,\n        future: false\n      });\n      params.setTabItems({ ...params.tabItems,\n        tasks: []\n      });\n    });\n  }\n};\nexport { authentication, database };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","getDatabase","ref","set","get","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","addEmptyArrays","data","Array","isArray","map","obj","hasOwnProperty","writeToDataBase","path","readFromDatabase","database","writeUserInfoData","userInfo","uid","username","nick","email","avatar","photo","writeUserTasksData","userId","date","tabItems","tasks","writeNewDayData","setTabItems","setCategory","setTab","snapshot","dataTabItems","Date","toLocaleDateString","split","reverse","join","exists","val","title","createUserData","day","user_info","user_tasks","readUserData","setUserInfo","condition","userData","info","readPastData","params","distanceRef","then","setCalendarDate","setTimeout","openModals","modals","calendarModal","createAuthInfoModal","show","type","text","createStatistics","period","setStatistics","categories","createdTasks","completedTasks","calculateTasks","forEach","category","length","task","completed","periods","Day","distanceRefDay","Categories","Created","Completed","Month","currentMonth","splice","Year","currentYear","authentication","loginEmailPassword","login","Password","userCredential","Email","setLogin","user","authModal","Error","code","registrationEmailPassword","registration","setRegistration","navigate","logOut","defaultPhoto","setTimeLine","past","future"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, ref, set, get } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getDatabase(app)\r\n\r\nconst addEmptyArrays = data => {\r\n  return Array.isArray(data)\r\n    ? data.map(obj => (obj.hasOwnProperty('data') ? obj : { ...obj, data: [] }))\r\n    : data\r\n}\r\n\r\n// Helper function for writing data in the database\r\nconst writeToDataBase = (path, data) => set(ref(db, path), data)\r\n// Helper function for reading data from the database\r\nconst readFromDatabase = path => get(ref(db, path))\r\n\r\n// database\r\nconst database = {\r\n  // send user information (email,avatar,nickname,id)\r\n  writeUserInfoData: async userInfo => {\r\n    const path = `users/${userInfo.uid}/user_info`\r\n\r\n    const data = {\r\n      uid: userInfo.uid,\r\n      username: userInfo.nick,\r\n      email: userInfo.email,\r\n      avatar: userInfo.photo,\r\n    }\r\n\r\n    return userInfo.uid && (await writeToDataBase(path, data))\r\n  },\r\n  // send user tasks Data\r\n  writeUserTasksData: async (userId, date, tabItems) => {\r\n    const path = `users/${userId}/user_tasks/${date}`\r\n    return userId && (await writeToDataBase(path, { ...tabItems.tasks }))\r\n  },\r\n  // create/read new day\r\n  writeNewDayData: async (userId, date, setTabItems, setCategory, setTab) => {\r\n    const path = `users/${userId}/user_tasks/${date}`\r\n    const snapshot = await readFromDatabase(path)\r\n\r\n    const dataTabItems = {\r\n      date: new Date().toLocaleDateString().split('.').reverse().join(''),\r\n      tasks: addEmptyArrays(tasks),\r\n    }\r\n\r\n    if (snapshot.exists()) {\r\n      const tasks = snapshot.val()\r\n\r\n      setCategory(tasks[0].title)\r\n      setTab(tasks[0].title)\r\n\r\n      setTabItems({\r\n        date: new Date().toLocaleDateString().split('.').reverse().join(''),\r\n        tasks: addEmptyArrays(tasks),\r\n      })\r\n    } else {\r\n      setTabItems({\r\n        date: new Date().toLocaleDateString().split('.').reverse().join(''),\r\n        tasks: [],\r\n      })\r\n    }\r\n  },\r\n  // create Data for new user\r\n  createUserData: async (userId, userInfo, tabItems) => {\r\n    const path = `users/${userId}`\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    const data = {\r\n      user_info: {\r\n        uid: userInfo.uid,\r\n        username: userInfo.nick,\r\n        email: userInfo.email,\r\n        avatar: userInfo.photo,\r\n      },\r\n      user_tasks: { [day]: tabItems.tasks },\r\n    }\r\n\r\n    return userId && (await writeToDataBase(path, data))\r\n  },\r\n  // reade user Data\r\n  readUserData: async (userId, setUserInfo, tabItems, setTabItems, setTab, setCategory) => {\r\n    const path = `users/${userId}/`\r\n    const date = new Date().toLocaleDateString().split('.').join('')\r\n    const snapshot = await readFromDatabase(path)\r\n\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.val()\r\n\r\n      const condition = data.user_tasks && data.user_tasks[date]\r\n\r\n      const userData = {\r\n        info: {\r\n          photo: data.user_info.avatar,\r\n          nick: data.user_info.username,\r\n          email: data.user_info.email,\r\n          uid: data.user_info.uid,\r\n        },\r\n        tasks: {\r\n          ...tabItems,\r\n          tasks: addEmptyArrays(condition ? data.user_tasks[date] : []),\r\n        },\r\n      }\r\n\r\n      setUserInfo(userData.info)\r\n      setTabItems(userData.tasks)\r\n      setCategory(condition ? data.user_tasks[date][0].title : '')\r\n      setTab(condition ? data.user_tasks[date][0].title : '')\r\n    }\r\n  },\r\n  // reading the data of the selected day\r\n  readPastData: ({ ...params }) => {\r\n    const date = params.date.toLocaleDateString().split('.').join('')\r\n    const distanceRef = ref(db, `users/${params.userInfo.uid}/user_tasks/${date}`)\r\n\r\n    return get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const tasks = snapshot.val()\r\n        params.setCalendarDate(params.date)\r\n        setTimeout(() => {\r\n          params.setTabItems({ ...params.tabItems, tasks: [...addEmptyArrays(tasks)] })\r\n          params.setCategory(tasks[0].title)\r\n          params.setTab(tasks[0].title)\r\n          params.openModals({ ...params.modals, calendarModal: false })\r\n        }, 500)\r\n        return\r\n      }\r\n\r\n      return params.createAuthInfoModal({\r\n        show: true,\r\n        type: 'Error',\r\n        text: `You don't have any tasks for this day`,\r\n      })\r\n    })\r\n  },\r\n  // Statistics\r\n  createStatistics: (userId, period, setStatistics) => {\r\n    const distanceRef = ref(db, `users/${userId}/user_tasks/`)\r\n    const date = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    let categories = 0\r\n    let createdTasks = 0\r\n    let completedTasks = 0\r\n\r\n    const calculateTasks = data => {\r\n      return data.forEach(category => {\r\n        if (category.hasOwnProperty('data')) {\r\n          createdTasks += category.data.length\r\n\r\n          category.data.forEach(task => task.completed && completedTasks++)\r\n        }\r\n      })\r\n    }\r\n\r\n    const periods = {\r\n      Day: () => {\r\n        const distanceRefDay = ref(db, `users/${userId}/user_tasks/${date}`)\r\n\r\n        return get(distanceRefDay).then(snapshot => {\r\n          if (snapshot.exists()) {\r\n            const data = snapshot.val()\r\n\r\n            categories += data.length\r\n\r\n            calculateTasks(data)\r\n\r\n            setStatistics({\r\n              Categories: categories,\r\n              Created: createdTasks,\r\n              Completed: completedTasks,\r\n            })\r\n          }\r\n        })\r\n      },\r\n      Month: () => {\r\n        const currentMonth = date.split('').splice(2, 2).join('')\r\n\r\n        return get(distanceRef).then(snapshot => {\r\n          if (snapshot.exists()) {\r\n            const data = snapshot.val()\r\n\r\n            for (const day in data) {\r\n              const condition = day.split('').splice(2, 2).join('') === currentMonth\r\n\r\n              if (condition) {\r\n                categories += data[day].length\r\n                calculateTasks(data[day])\r\n              }\r\n            }\r\n\r\n            setStatistics({\r\n              Categories: categories,\r\n              Created: createdTasks,\r\n              Completed: completedTasks,\r\n            })\r\n          }\r\n        })\r\n      },\r\n      Year: () => {\r\n        const currentYear = date.split('').splice(4).join('')\r\n\r\n        return get(distanceRef).then(snapshot => {\r\n          if (snapshot.exists()) {\r\n            const data = snapshot.val()\r\n\r\n            for (const day in data) {\r\n              const condition = day.split('').splice(4).join('') === currentYear\r\n\r\n              if (condition) {\r\n                categories += data[day].length\r\n                calculateTasks(data[day])\r\n              }\r\n            }\r\n\r\n            setStatistics({\r\n              Categories: categories,\r\n              Created: createdTasks,\r\n              Completed: completedTasks,\r\n            })\r\n          }\r\n        })\r\n      },\r\n    }\r\n\r\n    return periods[period]()\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setLogin({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            show: true,\r\n            type: 'Success',\r\n            text: 'Authorization successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.readUserData(\r\n            userCredential.user.uid,\r\n            params.setUserInfo,\r\n            params.tabItems,\r\n            params.setTabItems,\r\n            params.setTab,\r\n            params.setCategory,\r\n          )\r\n\r\n          setTimeout(() => {\r\n            params.openModals({ ...params.modals, authModal: false })\r\n          }, 1500)\r\n        }\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ show: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setRegistration({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            show: true,\r\n            type: 'Success',\r\n            text: 'Registration successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            email: userCredential.user.email,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.createUserData(userCredential.user.uid, params.userInfo, params.tabItems)\r\n\r\n          setTimeout(() => {\r\n            params.openModals({ ...params.modals, authModal: false })\r\n            params.navigate('Profile.jsx')\r\n          }, 1000)\r\n        }\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ show: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Logout\r\n  logOut: ({ ...params }) => {\r\n    return signOut(auth).then(() => {\r\n      params.setUserInfo({\r\n        photo: params.defaultPhoto,\r\n        nick: 'username',\r\n        email: '',\r\n        uid: '',\r\n      })\r\n      params.setCalendarDate(new Date())\r\n      params.setTimeLine({ past: false, future: false })\r\n      params.setTabItems({ ...params.tabItems, tasks: [] })\r\n    })\r\n  },\r\n}\r\n\r\nexport { authentication, database }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}