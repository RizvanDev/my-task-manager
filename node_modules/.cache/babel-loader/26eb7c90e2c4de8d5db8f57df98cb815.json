{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Components\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\CategoriesTab.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './categoriesTab.scss';\nimport MyTitle from '../../../MyTitle/MyTitle';\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig';\nimport Task from '../Task/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoriesTab = props => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n\n  const removeCategory = () => {\n    props.setTab(props.listItems.length > 1 ? (props.listItems[props.idx - 1] || props.listItems[1]).title : '');\n    return props.setListItem(props.listItems.filter(e => e.title !== props.category.title));\n  };\n\n  return useEffect(() => {\n    ;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: props.tab === props.category.title ? 'category__container active' : 'category__container',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category__title\",\n        children: props.category.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category__activeTasks\",\n        children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n          fontSize: \"18px\",\n          lineHeight: \"25px\",\n          letterSpacing: \"0.02em\",\n          children: \"Active tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: props.darkMode ? 'activeTasksContainer darkMode' : 'activeTasksContainer',\n          children: props.category.data.filter(task => !task.completed).map(uncompletedTask => /*#__PURE__*/_jsxDEV(Task, {\n            date: uncompletedTask.date,\n            completed: uncompletedTask.completed,\n            onClick: e => props.deleteTask(e, props.category.title, uncompletedTask),\n            children: uncompletedTask.task\n          }, uncompletedTask.date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category__completedTasks\",\n        children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n          fontSize: \"18px\",\n          lineHeight: \"25px\",\n          letterSpacing: \"0.02em\",\n          children: \"Completed tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: props.darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer',\n          children: props.category.data.filter(task => task.completed).map(completedTask => /*#__PURE__*/_jsxDEV(Task, {\n            date: completedTask.date,\n            completed: completedTask.completed,\n            title: props.category.title,\n            element: completedTask,\n            deleteTask: props.deleteTask,\n            children: completedTask.task\n          }, completedTask.date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category__configBtn\",\n        title: \"configuration\",\n        onClick: () => setModal(!modal),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CategoriesConfig, {\n        modal: modal,\n        removeCategory: removeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this);\n  });\n};\n\n_s(CategoriesTab, \"7scsjOjnW0cQ3GXSP6o+ckxvDZ8=\");\n\n_c = CategoriesTab;\nexport default CategoriesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesTab\");","map":{"version":3,"names":["React","useEffect","useState","MyTitle","CategoriesConfig","Task","CategoriesTab","props","modal","setModal","removeCategory","setTab","listItems","length","idx","title","setListItem","filter","e","category","tab","darkMode","data","task","completed","map","uncompletedTask","date","deleteTask","completedTask"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Components/MainContent/Tasks/CategoriesTab/CategoriesTab.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './categoriesTab.scss'\r\nimport MyTitle from '../../../MyTitle/MyTitle'\r\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig'\r\nimport Task from '../Task/Task'\r\n\r\nconst CategoriesTab = props => {\r\n  const [modal, setModal] = useState(false)\r\n\r\n  const removeCategory = () => {\r\n    props.setTab(\r\n      props.listItems.length > 1\r\n        ? (props.listItems[props.idx - 1] || props.listItems[1]).title\r\n        : '',\r\n    )\r\n    return props.setListItem(props.listItems.filter(e => e.title !== props.category.title))\r\n  }\r\n\r\n  return useEffect(() => {\r\n    ;<div\r\n      className={\r\n        props.tab === props.category.title ? 'category__container active' : 'category__container'\r\n      }>\r\n      <div className='category__title'>{props.category.title}</div>\r\n      <div className='category__activeTasks'>\r\n        <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em'>\r\n          Active tasks\r\n        </MyTitle>\r\n        <div className={props.darkMode ? 'activeTasksContainer darkMode' : 'activeTasksContainer'}>\r\n          {props.category.data\r\n            .filter(task => !task.completed)\r\n            .map(uncompletedTask => (\r\n              <Task\r\n                key={uncompletedTask.date}\r\n                date={uncompletedTask.date}\r\n                completed={uncompletedTask.completed}\r\n                onClick={e => props.deleteTask(e, props.category.title, uncompletedTask)}>\r\n                {uncompletedTask.task}\r\n              </Task>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div className='category__completedTasks'>\r\n        <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em'>\r\n          Completed tasks\r\n        </MyTitle>\r\n        <div\r\n          className={\r\n            props.darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer'\r\n          }>\r\n          {props.category.data\r\n            .filter(task => task.completed)\r\n            .map(completedTask => (\r\n              <Task\r\n                key={completedTask.date}\r\n                date={completedTask.date}\r\n                completed={completedTask.completed}\r\n                title={props.category.title}\r\n                element={completedTask}\r\n                deleteTask={props.deleteTask}>\r\n                {completedTask.task}\r\n              </Task>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <button\r\n        type='button'\r\n        className='category__configBtn'\r\n        title='configuration'\r\n        onClick={() => setModal(!modal)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n      <CategoriesConfig modal={modal} removeCategory={removeCategory} />\r\n    </div>\r\n  })\r\n}\r\n\r\nexport default CategoriesTab\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}