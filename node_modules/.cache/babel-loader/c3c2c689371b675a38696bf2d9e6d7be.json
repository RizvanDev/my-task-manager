{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getDatabase, ref, set, update, get } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getDatabase(app);\n\nconst addEmptyArrays = data => {\n  if (data) {\n    for (const obj of data) {\n      if (!obj.hasOwnProperty('data')) obj.data = [];\n    }\n\n    return data;\n  }\n\n  return [];\n}; // database\n\n\nconst database = {\n  // send user information (email,avatar,nickname,id)\n  writeUserInfoData: userInfo => {\n    const reference = ref(db, `users/${userInfo.uid}/user_info`);\n\n    if (userInfo.uid) {\n      return set(reference, {\n        uid: userInfo.uid,\n        username: userInfo.nick,\n        email: userInfo.email,\n        avatar: userInfo.photo\n      });\n    }\n  },\n  // send user tasks Data\n  writeUserTasksData: (userId, date, tabItems) => {\n    const reference = ref(db, `users/${userId}/user_tasks/${date}`);\n\n    if (userId) {\n      return set(reference, { ...tabItems\n      });\n    }\n  },\n  // create new data for the day\n  writeNewDayData: (userId, date, setTabItem, setCategory, setTab) => {\n    const distanceRef = ref(db, `users/${userId}/user_tasks/${date}`);\n    const reference = ref(db, `users/${userId}/user_tasks/`);\n    get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const tasks = snapshot.val();\n        setCategory(tasks[0].title);\n        setTab(tasks[0].title);\n        setTabItem([...addEmptyArrays(tasks)]);\n      } else {\n        setTabItem([]);\n        update(reference, {\n          [date]: []\n        });\n      }\n    });\n  },\n  // create Data for new user\n  createUserData: (userId, userInfo, tabItems) => {\n    const reference = ref(db, `users/${userId}`);\n    const day = new Date().toLocaleDateString().split('.').join('');\n\n    if (userId) {\n      return set(reference, {\n        user_info: {\n          uid: userInfo.uid,\n          username: userInfo.nick,\n          email: userInfo.email,\n          avatar: userInfo.photo\n        },\n        user_tasks: {\n          [day]: tabItems\n        }\n      });\n    }\n  },\n  // create/read new day data\n  dataToNextDay: (today, userInfo, setDataInStorage) => {\n    const date = today.toLocaleDateString().split('.').join('');\n    const distanceRef = ref(db, `users/${userInfo.uid}/user_tasks/${date}`);\n    return get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const tasks = snapshot.val();\n        setDataInStorage([...addEmptyArrays(tasks)]);\n        return window.location.reload();\n      }\n\n      setDataInStorage([]);\n      return window.location.reload();\n    });\n  },\n  // reade user Data\n  readUserData: (userId, setUserInfo, setTabItem, setTab, setCategory) => {\n    const distanceRef = ref(db, `users/${userId}/`);\n    const date = new Date().toLocaleDateString().split('.').join('');\n    return get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const data = snapshot.val();\n        console.log(data);\n        setUserInfo({\n          photo: data.user_info.avatar,\n          nick: data.user_info.username,\n          email: data.user_info.email,\n          uid: data.user_info.uid\n        });\n        const condition = data.user_tasks && data.user_tasks[date];\n        setTabItem([...addEmptyArrays(condition ? data.user_tasks[date] : [])]);\n        setCategory(condition ? data.user_tasks[date][0].title : '');\n        setTab(condition ? data.user_tasks[date][0].title : '');\n      }\n    });\n  },\n  // reading the data of the selected day\n  readPastData: _ref => {\n    let { ...params\n    } = _ref;\n    const date = params.date.toLocaleDateString().split('.').join('');\n    const distanceRef = ref(db, `users/${params.userInfo.uid}/user_tasks/${date}`);\n    return get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const tasks = snapshot.val();\n        params.setCalendarDate(params.date);\n        setTimeout(() => {\n          params.setTabItem([...addEmptyArrays(tasks)]);\n          params.setCategory(tasks[0].title);\n          params.setTab(tasks[0].title);\n          params.setCalendarModal(false);\n        }, 500);\n        return;\n      }\n\n      return params.createAuthInfoModal({\n        show: true,\n        type: 'Error',\n        text: `You don't have any tasks for this day`\n      });\n    });\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n\n        if (userCredential) {\n          params.setAuthorization(true);\n          params.setLogin({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            show: true,\n            type: 'Success',\n            text: 'Authorization successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            uid: userCredential.user.uid\n          });\n          database.readUserData(userCredential.user.uid, params.setUserInfo, params.setTabItem, params.setTab, params.setCategory);\n          setTimeout(() => params.setAuthModal(false), 1500);\n        }\n      } catch (Error) {\n        params.createAuthInfoModal({\n          show: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref3 => {\n    let { ...params\n    } = _ref3;\n\n    if (params.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n\n        if (userCredential) {\n          params.setAuthorization(true);\n          params.setRegistration({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            modal: true,\n            type: 'Success',\n            text: 'Registration successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            email: userCredential.user.email,\n            uid: userCredential.user.uid\n          });\n          database.createUserData(userCredential.user.uid, params.userInfo, params.tabItems);\n          setTimeout(() => {\n            params.setAuthModal(false);\n            params.navigate('Profile.jsx');\n          }, 1000);\n        }\n      } catch (Error) {\n        console.log(Error);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Logout\n  logOut: _ref4 => {\n    let { ...params\n    } = _ref4;\n    return signOut(auth).then(() => {\n      params.setAuthorization(false);\n      params.setUserInfo({\n        photo: params.defaultPhoto,\n        nick: 'username',\n        email: '',\n        uid: ''\n      });\n      params.setCalendarDate(new Date());\n      params.setTimeLine({\n        past: false,\n        future: false\n      });\n      params.setTabItem([]);\n    });\n  }\n}; // every time the page loads, add data and databases to the local storage\n\nconst pageOnload = (userId, date) => {\n  const distanceRef = ref(db, `users/${userId}/user_tasks/${date}`);\n  return get(distanceRef).then(snapshot => {\n    if (snapshot.exists()) {\n      const tasks = snapshot.val();\n      console.log(tasks);\n      return addEmptyArrays(tasks);\n    }\n  });\n};\n\nexport { authentication, database, pageOnload };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","getDatabase","ref","set","update","get","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","addEmptyArrays","data","obj","hasOwnProperty","database","writeUserInfoData","userInfo","reference","uid","username","nick","email","avatar","photo","writeUserTasksData","userId","date","tabItems","writeNewDayData","setTabItem","setCategory","setTab","distanceRef","then","snapshot","exists","tasks","val","title","createUserData","day","Date","toLocaleDateString","split","join","user_info","user_tasks","dataToNextDay","today","setDataInStorage","window","location","reload","readUserData","setUserInfo","console","log","condition","readPastData","params","setCalendarDate","setTimeout","setCalendarModal","createAuthInfoModal","show","type","text","authentication","loginEmailPassword","login","Password","userCredential","Email","setAuthorization","setLogin","user","setAuthModal","Error","code","registrationEmailPassword","registration","setRegistration","modal","navigate","logOut","defaultPhoto","setTimeLine","past","future","pageOnload"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, ref, set, update, get } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getDatabase(app)\r\n\r\nconst addEmptyArrays = data => {\r\n  if (data) {\r\n    for (const obj of data) {\r\n      if (!obj.hasOwnProperty('data')) obj.data = []\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return []\r\n}\r\n\r\n// database\r\nconst database = {\r\n  // send user information (email,avatar,nickname,id)\r\n  writeUserInfoData: userInfo => {\r\n    const reference = ref(db, `users/${userInfo.uid}/user_info`)\r\n\r\n    if (userInfo.uid) {\r\n      return set(reference, {\r\n        uid: userInfo.uid,\r\n        username: userInfo.nick,\r\n        email: userInfo.email,\r\n        avatar: userInfo.photo,\r\n      })\r\n    }\r\n  },\r\n  // send user tasks Data\r\n  writeUserTasksData: (userId, date, tabItems) => {\r\n    const reference = ref(db, `users/${userId}/user_tasks/${date}`)\r\n\r\n    if (userId) {\r\n      return set(reference, { ...tabItems })\r\n    }\r\n  },\r\n  // create new data for the day\r\n  writeNewDayData: (userId, date, setTabItem, setCategory, setTab) => {\r\n    const distanceRef = ref(db, `users/${userId}/user_tasks/${date}`)\r\n    const reference = ref(db, `users/${userId}/user_tasks/`)\r\n\r\n    get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const tasks = snapshot.val()\r\n\r\n        setCategory(tasks[0].title)\r\n        setTab(tasks[0].title)\r\n        setTabItem([...addEmptyArrays(tasks)])\r\n      } else {\r\n        setTabItem([])\r\n        update(reference, { [date]: [] })\r\n      }\r\n    })\r\n  },\r\n  // create Data for new user\r\n  createUserData: (userId, userInfo, tabItems) => {\r\n    const reference = ref(db, `users/${userId}`)\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    if (userId) {\r\n      return set(reference, {\r\n        user_info: {\r\n          uid: userInfo.uid,\r\n          username: userInfo.nick,\r\n          email: userInfo.email,\r\n          avatar: userInfo.photo,\r\n        },\r\n        user_tasks: { [day]: tabItems },\r\n      })\r\n    }\r\n  },\r\n  // create/read new day data\r\n  dataToNextDay: (today, userInfo, setDataInStorage) => {\r\n    const date = today.toLocaleDateString().split('.').join('')\r\n    const distanceRef = ref(db, `users/${userInfo.uid}/user_tasks/${date}`)\r\n\r\n    return get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const tasks = snapshot.val()\r\n        setDataInStorage([...addEmptyArrays(tasks)])\r\n        return window.location.reload()\r\n      }\r\n\r\n      setDataInStorage([])\r\n      return window.location.reload()\r\n    })\r\n  },\r\n  // reade user Data\r\n  readUserData: (userId, setUserInfo, setTabItem, setTab, setCategory) => {\r\n    const distanceRef = ref(db, `users/${userId}/`)\r\n    const date = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    return get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const data = snapshot.val()\r\n\r\n        console.log(data)\r\n\r\n        setUserInfo({\r\n          photo: data.user_info.avatar,\r\n          nick: data.user_info.username,\r\n          email: data.user_info.email,\r\n          uid: data.user_info.uid,\r\n        })\r\n\r\n        const condition = data.user_tasks && data.user_tasks[date]\r\n\r\n        setTabItem([...addEmptyArrays(condition ? data.user_tasks[date] : [])])\r\n        setCategory(condition ? data.user_tasks[date][0].title : '')\r\n        setTab(condition ? data.user_tasks[date][0].title : '')\r\n      }\r\n    })\r\n  },\r\n  // reading the data of the selected day\r\n  readPastData: ({ ...params }) => {\r\n    const date = params.date.toLocaleDateString().split('.').join('')\r\n    const distanceRef = ref(db, `users/${params.userInfo.uid}/user_tasks/${date}`)\r\n\r\n    return get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const tasks = snapshot.val()\r\n        params.setCalendarDate(params.date)\r\n        setTimeout(() => {\r\n          params.setTabItem([...addEmptyArrays(tasks)])\r\n          params.setCategory(tasks[0].title)\r\n          params.setTab(tasks[0].title)\r\n          params.setCalendarModal(false)\r\n        }, 500)\r\n        return\r\n      }\r\n\r\n      return params.createAuthInfoModal({\r\n        show: true,\r\n        type: 'Error',\r\n        text: `You don't have any tasks for this day`,\r\n      })\r\n    })\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setAuthorization(true)\r\n          params.setLogin({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            show: true,\r\n            type: 'Success',\r\n            text: 'Authorization successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.readUserData(\r\n            userCredential.user.uid,\r\n            params.setUserInfo,\r\n            params.setTabItem,\r\n            params.setTab,\r\n            params.setCategory,\r\n          )\r\n\r\n          setTimeout(() => params.setAuthModal(false), 1500)\r\n        }\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ show: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setAuthorization(true)\r\n          params.setRegistration({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            modal: true,\r\n            type: 'Success',\r\n            text: 'Registration successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            email: userCredential.user.email,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.createUserData(\r\n            userCredential.user.uid,\r\n            params.userInfo,\r\n            params.tabItems,\r\n          )\r\n\r\n          setTimeout(() => {\r\n            params.setAuthModal(false)\r\n            params.navigate('Profile.jsx')\r\n          }, 1000)\r\n        }\r\n      } catch (Error) {\r\n        console.log(Error)\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Logout\r\n  logOut: ({ ...params }) => {\r\n    return signOut(auth).then(() => {\r\n      params.setAuthorization(false)\r\n      params.setUserInfo({\r\n        photo: params.defaultPhoto,\r\n        nick: 'username',\r\n        email: '',\r\n        uid: '',\r\n      })\r\n      params.setCalendarDate(new Date())\r\n      params.setTimeLine({ past: false, future: false })\r\n      params.setTabItem([])\r\n    })\r\n  },\r\n}\r\n\r\n// every time the page loads, add data and databases to the local storage\r\nconst pageOnload = (userId, date) => {\r\n  const distanceRef = ref(db, `users/${userId}/user_tasks/${date}`)\r\n\r\n  return get(distanceRef).then(snapshot => {\r\n    if (snapshot.exists()) {\r\n      const tasks = snapshot.val()\r\n      console.log(tasks)\r\n      return addEmptyArrays(tasks)\r\n    }\r\n  })\r\n}\r\n\r\nexport { authentication, database, pageOnload }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}