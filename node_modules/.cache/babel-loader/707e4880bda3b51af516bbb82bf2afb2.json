{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\hoc\\\\withApp.jsx\";\nimport { createRef } from 'react';\nimport useLocaleStorage from '../hooks/useLocaleStrorage';\nimport useValue from '../hooks/useValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultItems = [{\n  title: 'Home',\n  data: [],\n  nodeRef: /*#__PURE__*/createRef()\n}, {\n  title: 'Work',\n  data: [],\n  nodeRef: /*#__PURE__*/createRef()\n}, {\n  title: 'Sport',\n  data: [],\n  nodeRef: /*#__PURE__*/createRef()\n}];\n\nconst withApp = Component => {\n  var _s = $RefreshSig$();\n\n  return _s(() => {\n    _s();\n\n    const [darkMode, setDarkMode] = useValue(true),\n          [taskModal, setTaskModal] = useValue(false),\n          [tabItems, setTabItem] = useValue(defaultItems),\n          [tab, setTab] = useValue(defaultItems[0].title),\n          [category, setCategory, selectOnChange] = useValue(defaultItems[0].title); //      [data, setData] = useLocaleStorage([], 'data')\n\n    const getDataFromLC = () => JSON.parse(localStorage.getItem('data'));\n\n    const addDataFromLC = (title, value) => {\n      const storage = getDataFromLC() || [];\n      storage.forEach(tab => {\n        if (tab.title === title) {\n          tab.data = [{\n            task: value,\n            date: new Date(),\n            completed: false,\n            nodeRef: /*#__PURE__*/createRef()\n          }, ...tab.data];\n        }\n      });\n    };\n\n    console.log(getDataFromLC());\n    localStorage.setItem('data', JSON.stringify(tabItems));\n    const taskMethods = {\n      createTask: (inputValue, setInputValue) => {\n        setInputValue('');\n        setTaskModal(false);\n        setTab(category);\n        tabItems.forEach(tab => {\n          if (tab.title === category) {\n            tab.data = [{\n              task: inputValue,\n              date: new Date(),\n              completed: false,\n              nodeRef: /*#__PURE__*/createRef()\n            }, ...tab.data];\n          }\n        });\n        addDataFromLC(category, inputValue);\n        return setTabItem([...tabItems]);\n      },\n      deleteTask: (title, currentTask) => {\n        tabItems.forEach(tab => {\n          if (title === tab.title) {\n            tab.data = tab.data.filter(task => task.date !== currentTask.date);\n          }\n        });\n        return setTabItem([...tabItems]);\n      },\n      checkTask: (title, currentTask, complete) => {\n        tabItems.forEach(tab => {\n          if (title === tab.title) {\n            tab.data.forEach(task => {\n              if (currentTask.task === task.task) task.completed = !complete;\n            });\n          }\n        });\n        return setTabItem(tabItems => [...tabItems]);\n      },\n      editTask: (event, title, currentTask, newValue) => {\n        event.target.style.borderBottom = `1px solid ${event.target.value ? 'transparent' : 'red'}`;\n        event.target.readOnly = event.code === 'Enter' && event.target.value;\n        tabItems.forEach(tab => {\n          if (title === tab.title) {\n            tab.data.forEach(task => {\n              if (currentTask.task === task.task) task.task = newValue;\n            });\n          }\n        });\n        return setTabItem(tabItems => [...tabItems]);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Component, {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode,\n      taskModal: taskModal,\n      setTaskModal: setTaskModal,\n      tab: tab,\n      setTab: setTab,\n      tabItems: tabItems,\n      setTabItem: setTabItem,\n      category: category,\n      setCategory: setCategory,\n      selectOnChange: selectOnChange,\n      ...taskMethods\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }, \"1/4B/Fy3UxKDyAHrWLkOx5ofBF4=\", false, function () {\n    return [useValue, useValue, useValue, useValue, useValue];\n  });\n};\n\nexport { withApp };","map":{"version":3,"names":["createRef","useLocaleStorage","useValue","defaultItems","title","data","nodeRef","withApp","Component","darkMode","setDarkMode","taskModal","setTaskModal","tabItems","setTabItem","tab","setTab","category","setCategory","selectOnChange","getDataFromLC","JSON","parse","localStorage","getItem","addDataFromLC","value","storage","forEach","task","date","Date","completed","console","log","setItem","stringify","taskMethods","createTask","inputValue","setInputValue","deleteTask","currentTask","filter","checkTask","complete","editTask","event","newValue","target","style","borderBottom","readOnly","code"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/hoc/withApp.jsx"],"sourcesContent":["import { createRef } from 'react'\r\nimport useLocaleStorage from '../hooks/useLocaleStrorage'\r\nimport useValue from '../hooks/useValue'\r\n\r\nconst defaultItems = [\r\n  { title: 'Home', data: [], nodeRef: createRef() },\r\n  { title: 'Work', data: [], nodeRef: createRef() },\r\n  { title: 'Sport', data: [], nodeRef: createRef() },\r\n]\r\n\r\nconst withApp = Component => {\r\n  return () => {\r\n    const [darkMode, setDarkMode] = useValue(true),\r\n      [taskModal, setTaskModal] = useValue(false),\r\n      [tabItems, setTabItem] = useValue(defaultItems),\r\n      [tab, setTab] = useValue(defaultItems[0].title),\r\n      [category, setCategory, selectOnChange] = useValue(defaultItems[0].title)\r\n    //      [data, setData] = useLocaleStorage([], 'data')\r\n\r\n    const getDataFromLC = () => JSON.parse(localStorage.getItem('data'))\r\n\r\n    const addDataFromLC = (title, value) => {\r\n      const storage = getDataFromLC() || []\r\n\r\n      storage.forEach(tab => {\r\n        if (tab.title === title) {\r\n          tab.data = [\r\n            {\r\n              task: value,\r\n              date: new Date(),\r\n              completed: false,\r\n              nodeRef: createRef(),\r\n            },\r\n            ...tab.data,\r\n          ]\r\n        }\r\n      })\r\n    }\r\n\r\n    console.log(getDataFromLC())\r\n\r\n    localStorage.setItem('data', JSON.stringify(tabItems))\r\n\r\n    const taskMethods = {\r\n      createTask: (inputValue, setInputValue) => {\r\n        setInputValue('')\r\n        setTaskModal(false)\r\n        setTab(category)\r\n\r\n        tabItems.forEach(tab => {\r\n          if (tab.title === category) {\r\n            tab.data = [\r\n              {\r\n                task: inputValue,\r\n                date: new Date(),\r\n                completed: false,\r\n                nodeRef: createRef(),\r\n              },\r\n              ...tab.data,\r\n            ]\r\n          }\r\n        })\r\n\r\n        addDataFromLC(category, inputValue)\r\n        return setTabItem([...tabItems])\r\n      },\r\n\r\n      deleteTask: (title, currentTask) => {\r\n        tabItems.forEach(tab => {\r\n          if (title === tab.title) {\r\n            tab.data = tab.data.filter(task => task.date !== currentTask.date)\r\n          }\r\n        })\r\n\r\n        return setTabItem([...tabItems])\r\n      },\r\n\r\n      checkTask: (title, currentTask, complete) => {\r\n        tabItems.forEach(tab => {\r\n          if (title === tab.title) {\r\n            tab.data.forEach(task => {\r\n              if (currentTask.task === task.task) task.completed = !complete\r\n            })\r\n          }\r\n        })\r\n\r\n        return setTabItem(tabItems => [...tabItems])\r\n      },\r\n\r\n      editTask: (event, title, currentTask, newValue) => {\r\n        event.target.style.borderBottom = `1px solid ${\r\n          event.target.value ? 'transparent' : 'red'\r\n        }`\r\n        event.target.readOnly = event.code === 'Enter' && event.target.value\r\n\r\n        tabItems.forEach(tab => {\r\n          if (title === tab.title) {\r\n            tab.data.forEach(task => {\r\n              if (currentTask.task === task.task) task.task = newValue\r\n            })\r\n          }\r\n        })\r\n\r\n        return setTabItem(tabItems => [...tabItems])\r\n      },\r\n    }\r\n\r\n    return (\r\n      <Component\r\n        darkMode={darkMode}\r\n        setDarkMode={setDarkMode}\r\n        taskModal={taskModal}\r\n        setTaskModal={setTaskModal}\r\n        tab={tab}\r\n        setTab={setTab}\r\n        tabItems={tabItems}\r\n        setTabItem={setTabItem}\r\n        category={category}\r\n        setCategory={setCategory}\r\n        selectOnChange={selectOnChange}\r\n        {...taskMethods}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport { withApp }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}