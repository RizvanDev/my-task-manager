{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Components\\\\TaskModal\\\\TaskModal.jsx\";\nimport React from 'react';\nimport cl from './taskModal.module.scss';\nimport MyTitle from '../MyTitle/MyTitle';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskModal = _ref => {\n  let {\n    darkMode,\n    taskModal,\n    setTaskModal,\n    listItems\n  } = _ref;\n  const classes = {\n    modal: [cl.taskModal],\n    modalContainer: [cl.taskModal__container]\n  };\n  if (taskModal) classes.modal.push(cl.open);\n  if (darkMode) classes.modalContainer.push(cl.darkMode);\n  const inputStyles = {\n    width: '660px',\n    padding: '8px 15px',\n    letterSpacing: '0.02em',\n    fontSize: '14px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.modal.join(' '),\n    onClick: () => setTaskModal(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.modalContainer.join(' '),\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n        fontWeight: \"700\",\n        fontSize: \"20px\",\n        lineHeight: \"27px\",\n        letterSpacing: \"0.02em\",\n        children: \"Add new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cl.taskModal__inputsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: cl.taskModal__helpText,\n            children: \"What should I do?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: inputStyles,\n            placeholder: \"TASK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: cl.taskModal__helpText,\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: cl.taskModal__section,\n            children: listItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskModal;\nexport default TaskModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","cl","MyTitle","Input","TaskModal","darkMode","taskModal","setTaskModal","listItems","classes","modal","modalContainer","taskModal__container","push","open","inputStyles","width","padding","letterSpacing","fontSize","join","e","stopPropagation","taskModal__inputsContainer","taskModal__helpText","taskModal__section","map","item"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Components/TaskModal/TaskModal.jsx"],"sourcesContent":["import React from 'react'\r\nimport cl from './taskModal.module.scss'\r\nimport MyTitle from '../MyTitle/MyTitle'\r\nimport Input from '../UI/Input/Input'\r\n\r\nconst TaskModal = ({ darkMode, taskModal, setTaskModal, listItems }) => {\r\n  const classes = { modal: [cl.taskModal], modalContainer: [cl.taskModal__container] }\r\n\r\n  if (taskModal) classes.modal.push(cl.open)\r\n  if (darkMode) classes.modalContainer.push(cl.darkMode)\r\n\r\n  const inputStyles = {\r\n    width: '660px',\r\n    padding: '8px 15px',\r\n    letterSpacing: '0.02em',\r\n    fontSize: '14px',\r\n  }\r\n\r\n  return (\r\n    <div className={classes.modal.join(' ')} onClick={() => setTaskModal(false)}>\r\n      <div className={classes.modalContainer.join(' ')} onClick={e => e.stopPropagation()}>\r\n        <MyTitle fontWeight='700' fontSize='20px' lineHeight='27px' letterSpacing='0.02em'>\r\n          Add new task\r\n        </MyTitle>\r\n        <div className={cl.taskModal__inputsContainer}>\r\n          <div>\r\n            <span className={cl.taskModal__helpText}>What should I do?</span>\r\n            <Input style={inputStyles} placeholder='TASK' />\r\n          </div>\r\n          <div>\r\n            <span className={cl.taskModal__helpText}>Category</span>\r\n            <select className={cl.taskModal__section}>\r\n              {listItems.map(item => (\r\n                <option key={item}>{item}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskModal\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,MAAMC,SAAS,GAAG,QAAsD;EAAA,IAArD;IAAEC,QAAF;IAAYC,SAAZ;IAAuBC,YAAvB;IAAqCC;EAArC,CAAqD;EACtE,MAAMC,OAAO,GAAG;IAAEC,KAAK,EAAE,CAACT,EAAE,CAACK,SAAJ,CAAT;IAAyBK,cAAc,EAAE,CAACV,EAAE,CAACW,oBAAJ;EAAzC,CAAhB;EAEA,IAAIN,SAAJ,EAAeG,OAAO,CAACC,KAAR,CAAcG,IAAd,CAAmBZ,EAAE,CAACa,IAAtB;EACf,IAAIT,QAAJ,EAAcI,OAAO,CAACE,cAAR,CAAuBE,IAAvB,CAA4BZ,EAAE,CAACI,QAA/B;EAEd,MAAMU,WAAW,GAAG;IAClBC,KAAK,EAAE,OADW;IAElBC,OAAO,EAAE,UAFS;IAGlBC,aAAa,EAAE,QAHG;IAIlBC,QAAQ,EAAE;EAJQ,CAApB;EAOA,oBACE;IAAK,SAAS,EAAEV,OAAO,CAACC,KAAR,CAAcU,IAAd,CAAmB,GAAnB,CAAhB;IAAyC,OAAO,EAAE,MAAMb,YAAY,CAAC,KAAD,CAApE;IAAA,uBACE;MAAK,SAAS,EAAEE,OAAO,CAACE,cAAR,CAAuBS,IAAvB,CAA4B,GAA5B,CAAhB;MAAkD,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACC,eAAF,EAAhE;MAAA,wBACE,QAAC,OAAD;QAAS,UAAU,EAAC,KAApB;QAA0B,QAAQ,EAAC,MAAnC;QAA0C,UAAU,EAAC,MAArD;QAA4D,aAAa,EAAC,QAA1E;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAErB,EAAE,CAACsB,0BAAnB;QAAA,wBACE;UAAA,wBACE;YAAM,SAAS,EAAEtB,EAAE,CAACuB,mBAApB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YAAO,KAAK,EAAET,WAAd;YAA2B,WAAW,EAAC;UAAvC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAA,wBACE;YAAM,SAAS,EAAEd,EAAE,CAACuB,mBAApB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAQ,SAAS,EAAEvB,EAAE,CAACwB,kBAAtB;YAAA,UACGjB,SAAS,CAACkB,GAAV,CAAcC,IAAI,iBACjB;cAAA,UAAoBA;YAApB,GAAaA,IAAb;cAAA;cAAA;cAAA;YAAA,QADD;UADH;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CApCD;;KAAMvB,S;AAsCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}