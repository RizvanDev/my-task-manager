{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getDatabase, ref, set } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getDatabase(auth);\nlet userId = '';\n\nconst writeUserData = () => {\n  set(ref(db, 'users/' + userId), {\n    username: name,\n    email: email,\n    profile_picture: imageUrl\n  });\n}; // Authentication methods\n\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref => {\n    let { ...params\n    } = _ref;\n\n    if (params.login.Password) {\n      try {\n        await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n        params.setLogin({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Authorization successfully'\n        });\n      } catch (Error) {\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.registration.Password) {\n      try {\n        await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n        params.setRegistration({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n          params.navigate('Profile.jsx');\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Registration successfully'\n        });\n      } catch (Error) {\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // State\n  monitorAuthState: (setAuthorization, defaultPhoto, setUserInfo) => {\n    return onAuthStateChanged(auth, user => {\n      if (user) {\n        setAuthorization(true);\n      } else {\n        setAuthorization(false);\n        setUserInfo({\n          photo: defaultPhoto,\n          nick: 'username',\n          email: ''\n        });\n      }\n    });\n  },\n  // Logout\n  logOut: async () => await signOut(auth)\n};\nexport { authentication };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","signOut","getDatabase","ref","set","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","userId","writeUserData","username","name","email","profile_picture","imageUrl","authentication","loginEmailPassword","params","login","Password","Email","setLogin","setTimeout","setAuthModal","createAuthInfoModal","modal","type","text","Error","code","registrationEmailPassword","registration","setRegistration","navigate","monitorAuthState","setAuthorization","defaultPhoto","setUserInfo","user","photo","nick","logOut"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, ref, set } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getDatabase(auth)\r\n\r\nlet userId = ''\r\n\r\nconst writeUserData = () => {\r\n  set(ref(db, 'users/' + userId), {\r\n    username: name,\r\n    email: email,\r\n    profile_picture: imageUrl,\r\n  })\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password)\r\n\r\n        params.setLogin({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Authorization successfully',\r\n        })\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        params.setRegistration({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n          params.navigate('Profile.jsx')\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Registration successfully',\r\n        })\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // State\r\n  monitorAuthState: (setAuthorization, defaultPhoto, setUserInfo) => {\r\n    return onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setAuthorization(true)\r\n      } else {\r\n        setAuthorization(false)\r\n        setUserInfo({ photo: defaultPhoto, nick: 'username', email: '' })\r\n      }\r\n    })\r\n  },\r\n  // Logout\r\n  logOut: async () => await signOut(auth),\r\n}\r\n\r\nexport { authentication }\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,0BAFF,EAGEC,8BAHF,EAIEC,kBAJF,EAKEC,OALF,QAMO,eANP;AAOA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,mBAAtC;AAEA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADC;EAErBC,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFH;EAGrBC,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,+BAHJ;EAIrBC,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,6BAJF;EAKrBC,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,iCALN;EAMrBC,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,sCANV;EAOrBC,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPE,CAAvB;AAUA,MAAMC,GAAG,GAAG1B,aAAa,CAACS,cAAD,CAAzB;AACA,MAAMkB,IAAI,GAAG1B,OAAO,CAACyB,GAAD,CAApB;AACA,MAAME,EAAE,GAAGtB,WAAW,CAACqB,IAAD,CAAtB;AAEA,IAAIE,MAAM,GAAG,EAAb;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAC1BtB,GAAG,CAACD,GAAG,CAACqB,EAAD,EAAK,WAAWC,MAAhB,CAAJ,EAA6B;IAC9BE,QAAQ,EAAEC,IADoB;IAE9BC,KAAK,EAAEA,KAFuB;IAG9BC,eAAe,EAAEC;EAHa,CAA7B,CAAH;AAKD,CAND,C,CAQA;;;AACA,MAAMC,cAAc,GAAG;EACrB;EACAC,kBAAkB,EAAE,cAAyB;IAAA,IAAlB,EAAE,GAAGC;IAAL,CAAkB;;IAC3C,IAAIA,MAAM,CAACC,KAAP,CAAaC,QAAjB,EAA2B;MACzB,IAAI;QACF,MAAMtC,0BAA0B,CAACyB,IAAD,EAAOW,MAAM,CAACC,KAAP,CAAaE,KAApB,EAA2BH,MAAM,CAACC,KAAP,CAAaC,QAAxC,CAAhC;QAEAF,MAAM,CAACI,QAAP,CAAgB;UAAED,KAAK,EAAE,EAAT;UAAaD,QAAQ,EAAE;QAAvB,CAAhB;QAEAG,UAAU,CAAC,MAAM;UACfL,MAAM,CAACM,YAAP,CAAoB,KAApB;QACD,CAFS,EAEP,IAFO,CAAV;QAIAN,MAAM,CAACO,mBAAP,CAA2B;UACzBC,KAAK,EAAE,IADkB;UAEzBC,IAAI,EAAE,SAFmB;UAGzBC,IAAI,EAAE;QAHmB,CAA3B;MAKD,CAdD,CAcE,OAAOC,KAAP,EAAc;QACdX,MAAM,CAACO,mBAAP,CAA2B;UAAEC,KAAK,EAAE,IAAT;UAAeC,IAAI,EAAE,OAArB;UAA8BC,IAAI,EAAEC,KAAK,CAACC;QAA1C,CAA3B;MACD;IACF;EACF,CAtBoB;EAuBrB;EACAC,yBAAyB,EAAE,eAAyB;IAAA,IAAlB,EAAE,GAAGb;IAAL,CAAkB;;IAClD,IAAIA,MAAM,CAACc,YAAP,CAAoBZ,QAAxB,EAAkC;MAChC,IAAI;QACF,MAAMrC,8BAA8B,CAClCwB,IADkC,EAElCW,MAAM,CAACc,YAAP,CAAoBX,KAFc,EAGlCH,MAAM,CAACc,YAAP,CAAoBZ,QAHc,CAApC;QAMAF,MAAM,CAACe,eAAP,CAAuB;UAAEZ,KAAK,EAAE,EAAT;UAAaD,QAAQ,EAAE;QAAvB,CAAvB;QAEAG,UAAU,CAAC,MAAM;UACfL,MAAM,CAACM,YAAP,CAAoB,KAApB;UACAN,MAAM,CAACgB,QAAP,CAAgB,aAAhB;QACD,CAHS,EAGP,IAHO,CAAV;QAKAhB,MAAM,CAACO,mBAAP,CAA2B;UACzBC,KAAK,EAAE,IADkB;UAEzBC,IAAI,EAAE,SAFmB;UAGzBC,IAAI,EAAE;QAHmB,CAA3B;MAKD,CAnBD,CAmBE,OAAOC,KAAP,EAAc;QACdX,MAAM,CAACO,mBAAP,CAA2B;UAAEC,KAAK,EAAE,IAAT;UAAeC,IAAI,EAAE,OAArB;UAA8BC,IAAI,EAAEC,KAAK,CAACC;QAA1C,CAA3B;MACD;IACF;EACF,CAjDoB;EAkDrB;EACAK,gBAAgB,EAAE,CAACC,gBAAD,EAAmBC,YAAnB,EAAiCC,WAAjC,KAAiD;IACjE,OAAOtD,kBAAkB,CAACuB,IAAD,EAAOgC,IAAI,IAAI;MACtC,IAAIA,IAAJ,EAAU;QACRH,gBAAgB,CAAC,IAAD,CAAhB;MACD,CAFD,MAEO;QACLA,gBAAgB,CAAC,KAAD,CAAhB;QACAE,WAAW,CAAC;UAAEE,KAAK,EAAEH,YAAT;UAAuBI,IAAI,EAAE,UAA7B;UAAyC5B,KAAK,EAAE;QAAhD,CAAD,CAAX;MACD;IACF,CAPwB,CAAzB;EAQD,CA5DoB;EA6DrB;EACA6B,MAAM,EAAE,YAAY,MAAMzD,OAAO,CAACsB,IAAD;AA9DZ,CAAvB;AAiEA,SAASS,cAAT"},"metadata":{},"sourceType":"module"}