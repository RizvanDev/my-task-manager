{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getDatabase, onValue, ref, set } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app); //const db = getDatabase(app)\n\nconst database = {\n  writeUserData: (userId, userInfo, tabItems) => {\n    const db = getDatabase(app);\n    const reference = ref(db, 'users/' + userId);\n\n    if (userId) {\n      set(reference, {\n        username: userInfo.nick,\n        email: userInfo.email,\n        profile_picture: userInfo.photo,\n        data: tabItems\n      });\n    }\n  },\n  readUserData: (userId, setUserInfo, setTabItem) => {\n    const db = getDatabase(app);\n    const distanceRef = ref(db, 'users/' + userId);\n    onValue(distanceRef, snapshot => {\n      const userData = snapshot.val();\n      console.log(userData.data);\n      setUserInfo({\n        photo: userData.profile_picture,\n        nick: userData.username,\n        email: userData.email\n      });\n      setTabItem([userData.data]);\n    });\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref => {\n    let { ...params\n    } = _ref;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n        database.readUserData(userCredential.user.uid, params.setUserInfo, params.setTabItem);\n        params.setLogin({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Authorization successfully'\n        });\n      } catch (Error) {\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n        database.writeUserData(userCredential.user.uid, params.userInfo, params.tabItems);\n        params.setRegistration({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n          params.navigate('Profile.jsx');\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Registration successfully'\n        });\n      } catch (Error) {\n        console.log(Error);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // State\n  monitorAuthState: (setAuthorization, defaultPhoto, userInfo, setUserInfo, setUserId, setTabItem, defaultItems) => {\n    return onAuthStateChanged(auth, user => {\n      if (user) {\n        setAuthorization(true);\n        setUserId(user.uid);\n        setUserInfo({ ...userInfo,\n          email: user.email\n        });\n      } else {\n        setAuthorization(false);\n        setUserId('');\n        setUserInfo({\n          photo: defaultPhoto,\n          nick: 'username',\n          email: ''\n        });\n        setTabItem([...defaultItems]);\n      }\n    });\n  },\n  // Logout\n  logOut: async () => await signOut(auth)\n};\nexport { authentication, database };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","signOut","getDatabase","onValue","ref","set","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","database","writeUserData","userId","userInfo","tabItems","db","reference","username","nick","email","profile_picture","photo","data","readUserData","setUserInfo","setTabItem","distanceRef","snapshot","userData","val","console","log","authentication","loginEmailPassword","params","login","Password","userCredential","Email","user","uid","setLogin","setTimeout","setAuthModal","createAuthInfoModal","modal","type","text","Error","code","registrationEmailPassword","registration","setRegistration","navigate","monitorAuthState","setAuthorization","defaultPhoto","setUserId","defaultItems","logOut"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, onValue, ref, set } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\n//const db = getDatabase(app)\r\n\r\nconst database = {\r\n  writeUserData: (userId, userInfo, tabItems) => {\r\n    const db = getDatabase(app)\r\n    const reference = ref(db, 'users/' + userId)\r\n    if (userId) {\r\n      set(reference, {\r\n        username: userInfo.nick,\r\n        email: userInfo.email,\r\n        profile_picture: userInfo.photo,\r\n        data: tabItems,\r\n      })\r\n    }\r\n  },\r\n  readUserData: (userId, setUserInfo, setTabItem) => {\r\n    const db = getDatabase(app)\r\n    const distanceRef = ref(db, 'users/' + userId)\r\n    onValue(distanceRef, snapshot => {\r\n      const userData = snapshot.val()\r\n      console.log(userData.data)\r\n      setUserInfo({\r\n        photo: userData.profile_picture,\r\n        nick: userData.username,\r\n        email: userData.email,\r\n      })\r\n      setTabItem([userData.data])\r\n    })\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        database.readUserData(\r\n          userCredential.user.uid,\r\n          params.setUserInfo,\r\n          params.setTabItem,\r\n        )\r\n\r\n        params.setLogin({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Authorization successfully',\r\n        })\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        database.writeUserData(userCredential.user.uid, params.userInfo, params.tabItems)\r\n\r\n        params.setRegistration({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n          params.navigate('Profile.jsx')\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Registration successfully',\r\n        })\r\n      } catch (Error) {\r\n        console.log(Error)\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // State\r\n  monitorAuthState: (\r\n    setAuthorization,\r\n    defaultPhoto,\r\n    userInfo,\r\n    setUserInfo,\r\n    setUserId,\r\n    setTabItem,\r\n    defaultItems,\r\n  ) => {\r\n    return onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setAuthorization(true)\r\n        setUserId(user.uid)\r\n        setUserInfo({ ...userInfo, email: user.email })\r\n      } else {\r\n        setAuthorization(false)\r\n        setUserId('')\r\n        setUserInfo({ photo: defaultPhoto, nick: 'username', email: '' })\r\n        setTabItem([...defaultItems])\r\n      }\r\n    })\r\n  },\r\n  // Logout\r\n  logOut: async () => await signOut(auth),\r\n}\r\n\r\nexport { authentication, database }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}