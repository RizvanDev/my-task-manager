{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getDatabase, onValue, ref, set, update, child, get } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getDatabase(app);\n\nconst addEmptyArrays = data => {\n  if (data) {\n    for (const obj of data) {\n      if (!obj.hasOwnProperty('data')) obj.data = [];\n    }\n\n    return data;\n  }\n\n  return [];\n}; // database\n\n\nconst database = {\n  // send user information (email,avatar,nickname,id)\n  writeUserInfoData: userInfo => {\n    const reference = ref(db, `users/${userInfo.uid}/user_info`);\n\n    if (userInfo.uid) {\n      return set(reference, {\n        uid: userInfo.uid,\n        username: userInfo.nick,\n        email: userInfo.email,\n        avatar: userInfo.photo\n      });\n    }\n  },\n  // send user tasks Data\n  writeUserTasksData: (userId, date, tabItems) => {\n    const reference = ref(db, `users/${userId}/user_tasks/${date}`);\n\n    if (userId) {\n      return set(reference, { ...tabItems\n      });\n    }\n  },\n  // create new data for the day\n  writeNewDayData: (userId, date, defaultItems, setTabItem, setCategory, setTab) => {\n    const distanceRef = ref(db, `users/${userId}/user_tasks/${date}`);\n    return get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const tasks = snapshot.val();\n\n        if (tasks) {\n          setCategory(tasks[0].title);\n          setTab(tasks[0].title);\n          return setTabItem([...addEmptyArrays(tasks)]);\n        }\n      } else {\n        const reference = ref(db, `users/${userId}/user_tasks/`);\n        setTabItem(defaultItems);\n        setCategory(defaultItems[0].title);\n        setTab(defaultItems[0].title);\n        return update(reference, {\n          [date]: defaultItems\n        });\n      }\n    });\n  },\n  // create Data for new user\n  createUserData: (userId, userInfo, tabItems) => {\n    const reference = ref(db, `users/${userId}`);\n    const day = new Date().toLocaleDateString().split('.').join('');\n\n    if (userId) {\n      return set(reference, {\n        user_info: {\n          uid: userInfo.uid,\n          username: userInfo.nick,\n          email: userInfo.email,\n          avatar: userInfo.photo\n        },\n        user_tasks: {\n          [day]: tabItems\n        }\n      });\n    }\n  },\n  // reade user Data\n  readUserData: (userId, setUserInfo, setTabItem, setTab, setCategory) => {\n    const distanceRef = ref(db, `users/${userId}/`);\n    const date = new Date().toLocaleDateString().split('.').join('');\n    return onValue(distanceRef, snapshot => {\n      const data = snapshot.val();\n      setUserInfo({\n        photo: data.user_info.avatar,\n        nick: data.user_info.username,\n        email: data.user_info.email,\n        uid: data.user_info.uid\n      });\n      const condition = data.user_tasks && data.user_tasks[date];\n      setTabItem([...addEmptyArrays(condition ? data.user_tasks[date] : [])]);\n      setCategory(condition ? data.user_tasks[date][0].title : '');\n      setTab(condition ? data.user_tasks[date][0].title : '');\n    });\n  },\n  // reading the data of the selected day\n  readPastData: _ref => {\n    let { ...params\n    } = _ref;\n    const date = params.date.toLocaleDateString().split('.').join('');\n    const distanceRef = ref(db, `users/${params.userInfo.uid}/user_tasks/${date}`);\n    return onValue(distanceRef, snapshot => {\n      const tasks = snapshot.val();\n\n      if (tasks) {\n        params.setCalendarDate(params.date);\n        setTimeout(() => {\n          params.setTabItem([...addEmptyArrays(tasks)]);\n          params.setCategory(tasks[0].title);\n          params.setTab(tasks[0].title);\n          params.setCalendarModal(false);\n        }, 500);\n        return;\n      }\n\n      return params.createAuthInfoModal({\n        show: true,\n        type: 'Error',\n        text: `You don't have any tasks for this day`\n      });\n    });\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n\n        if (userCredential) {\n          params.setAuthorization(true);\n          params.setLogin({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            show: true,\n            type: 'Success',\n            text: 'Authorization successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            uid: userCredential.user.uid\n          });\n          database.readUserData(userCredential.user.uid, params.setUserInfo, params.setTabItem, params.setTab, params.setCategory);\n          setTimeout(() => params.setAuthModal(false), 1500);\n        }\n      } catch (Error) {\n        params.createAuthInfoModal({\n          show: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref3 => {\n    let { ...params\n    } = _ref3;\n\n    if (params.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n\n        if (userCredential) {\n          params.setAuthorization(true);\n          params.setRegistration({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            modal: true,\n            type: 'Success',\n            text: 'Registration successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            email: userCredential.user.email,\n            uid: userCredential.user.uid\n          });\n          database.createUserData(userCredential.user.uid, params.userInfo, params.tabItems);\n          setTimeout(() => {\n            params.setAuthModal(false);\n            params.navigate('Profile.jsx');\n          }, 1000);\n        }\n      } catch (Error) {\n        console.log(Error);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Logout\n  logOut: _ref4 => {\n    let { ...params\n    } = _ref4;\n    return signOut(auth).then(() => {\n      params.setAuthorization(false);\n      params.setUserInfo({\n        photo: params.defaultPhoto,\n        nick: 'username',\n        email: '',\n        uid: ''\n      });\n      params.setTabItem([...params.defaultItems]);\n      params.setTab(params.defaultItems[0].title);\n      params.setCategory(params.defaultItems[0].title);\n    });\n  }\n};\nexport { authentication, database };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","getDatabase","onValue","ref","set","update","child","get","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","addEmptyArrays","data","obj","hasOwnProperty","database","writeUserInfoData","userInfo","reference","uid","username","nick","email","avatar","photo","writeUserTasksData","userId","date","tabItems","writeNewDayData","defaultItems","setTabItem","setCategory","setTab","distanceRef","then","snapshot","exists","tasks","val","title","createUserData","day","Date","toLocaleDateString","split","join","user_info","user_tasks","readUserData","setUserInfo","condition","readPastData","params","setCalendarDate","setTimeout","setCalendarModal","createAuthInfoModal","show","type","text","authentication","loginEmailPassword","login","Password","userCredential","Email","setAuthorization","setLogin","user","setAuthModal","Error","code","registrationEmailPassword","registration","setRegistration","modal","navigate","console","log","logOut","defaultPhoto"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, onValue, ref, set, update, child, get } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getDatabase(app)\r\n\r\nconst addEmptyArrays = data => {\r\n  if (data) {\r\n    for (const obj of data) {\r\n      if (!obj.hasOwnProperty('data')) obj.data = []\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return []\r\n}\r\n\r\n// database\r\nconst database = {\r\n  // send user information (email,avatar,nickname,id)\r\n  writeUserInfoData: userInfo => {\r\n    const reference = ref(db, `users/${userInfo.uid}/user_info`)\r\n\r\n    if (userInfo.uid) {\r\n      return set(reference, {\r\n        uid: userInfo.uid,\r\n        username: userInfo.nick,\r\n        email: userInfo.email,\r\n        avatar: userInfo.photo,\r\n      })\r\n    }\r\n  },\r\n  // send user tasks Data\r\n  writeUserTasksData: (userId, date, tabItems) => {\r\n    const reference = ref(db, `users/${userId}/user_tasks/${date}`)\r\n\r\n    if (userId) {\r\n      return set(reference, { ...tabItems })\r\n    }\r\n  },\r\n  // create new data for the day\r\n  writeNewDayData: (userId, date, defaultItems, setTabItem, setCategory, setTab) => {\r\n    const distanceRef = ref(db, `users/${userId}/user_tasks/${date}`)\r\n\r\n    return get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const tasks = snapshot.val()\r\n\r\n        if (tasks) {\r\n          setCategory(tasks[0].title)\r\n          setTab(tasks[0].title)\r\n          return setTabItem([...addEmptyArrays(tasks)])\r\n        }\r\n      } else {\r\n        const reference = ref(db, `users/${userId}/user_tasks/`)\r\n        setTabItem(defaultItems)\r\n        setCategory(defaultItems[0].title)\r\n        setTab(defaultItems[0].title)\r\n        return update(reference, { [date]: defaultItems })\r\n      }\r\n    })\r\n  },\r\n  // create Data for new user\r\n  createUserData: (userId, userInfo, tabItems) => {\r\n    const reference = ref(db, `users/${userId}`)\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    if (userId) {\r\n      return set(reference, {\r\n        user_info: {\r\n          uid: userInfo.uid,\r\n          username: userInfo.nick,\r\n          email: userInfo.email,\r\n          avatar: userInfo.photo,\r\n        },\r\n        user_tasks: { [day]: tabItems },\r\n      })\r\n    }\r\n  },\r\n  // reade user Data\r\n  readUserData: (userId, setUserInfo, setTabItem, setTab, setCategory) => {\r\n    const distanceRef = ref(db, `users/${userId}/`)\r\n    const date = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    return onValue(distanceRef, snapshot => {\r\n      const data = snapshot.val()\r\n\r\n      setUserInfo({\r\n        photo: data.user_info.avatar,\r\n        nick: data.user_info.username,\r\n        email: data.user_info.email,\r\n        uid: data.user_info.uid,\r\n      })\r\n\r\n      const condition = data.user_tasks && data.user_tasks[date]\r\n\r\n      setTabItem([...addEmptyArrays(condition ? data.user_tasks[date] : [])])\r\n      setCategory(condition ? data.user_tasks[date][0].title : '')\r\n      setTab(condition ? data.user_tasks[date][0].title : '')\r\n    })\r\n  },\r\n  // reading the data of the selected day\r\n  readPastData: ({ ...params }) => {\r\n    const date = params.date.toLocaleDateString().split('.').join('')\r\n    const distanceRef = ref(db, `users/${params.userInfo.uid}/user_tasks/${date}`)\r\n\r\n    return onValue(distanceRef, snapshot => {\r\n      const tasks = snapshot.val()\r\n\r\n      if (tasks) {\r\n        params.setCalendarDate(params.date)\r\n        setTimeout(() => {\r\n          params.setTabItem([...addEmptyArrays(tasks)])\r\n          params.setCategory(tasks[0].title)\r\n          params.setTab(tasks[0].title)\r\n          params.setCalendarModal(false)\r\n        }, 500)\r\n        return\r\n      }\r\n\r\n      return params.createAuthInfoModal({\r\n        show: true,\r\n        type: 'Error',\r\n        text: `You don't have any tasks for this day`,\r\n      })\r\n    })\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setAuthorization(true)\r\n          params.setLogin({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            show: true,\r\n            type: 'Success',\r\n            text: 'Authorization successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.readUserData(\r\n            userCredential.user.uid,\r\n            params.setUserInfo,\r\n            params.setTabItem,\r\n            params.setTab,\r\n            params.setCategory,\r\n          )\r\n\r\n          setTimeout(() => params.setAuthModal(false), 1500)\r\n        }\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ show: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setAuthorization(true)\r\n          params.setRegistration({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            modal: true,\r\n            type: 'Success',\r\n            text: 'Registration successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            email: userCredential.user.email,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.createUserData(\r\n            userCredential.user.uid,\r\n            params.userInfo,\r\n            params.tabItems,\r\n          )\r\n\r\n          setTimeout(() => {\r\n            params.setAuthModal(false)\r\n            params.navigate('Profile.jsx')\r\n          }, 1000)\r\n        }\r\n      } catch (Error) {\r\n        console.log(Error)\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Logout\r\n  logOut: ({ ...params }) => {\r\n    return signOut(auth).then(() => {\r\n      params.setAuthorization(false)\r\n      params.setUserInfo({\r\n        photo: params.defaultPhoto,\r\n        nick: 'username',\r\n        email: '',\r\n        uid: '',\r\n      })\r\n      params.setTabItem([...params.defaultItems])\r\n      params.setTab(params.defaultItems[0].title)\r\n      params.setCategory(params.defaultItems[0].title)\r\n    })\r\n  },\r\n}\r\n\r\nexport { authentication, database }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}