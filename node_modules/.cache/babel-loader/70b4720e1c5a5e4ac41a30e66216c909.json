{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Pages\\\\main-page\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\TasksContainer.jsx\";\nimport { createRef } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle';\nimport Task from '../Task/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksContainer = _ref => {\n  let {\n    blockTitleStyles,\n    darkMode,\n    tabTitle,\n    tasksData,\n    tasksMethods,\n    timeLine,\n    type\n  } = _ref;\n  const typeCondition = type === 'Active';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeCondition ? 'activeTasks__block' : 'completedTasks__block',\n    children: [/*#__PURE__*/_jsxDEV(MyTitle, { ...blockTitleStyles,\n      children: [type, \" tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      className: typeCondition ? 'activeTasks__container' : 'completedTasks__container',\n      children: tasksData.filter(task => typeCondition ? !task.completed : task.completed).map(task => {\n        const nodeRef = /*#__PURE__*/createRef(null);\n        return /*#__PURE__*/_jsxDEV(CSSTransition, {\n          nodeRef: nodeRef,\n          timeout: 500,\n          classNames: \"task\",\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            time: task.time,\n            currentTask: task,\n            tabTitle: tabTitle,\n            completed: task.completed,\n            deleteTask: tasksMethods.deleteTask,\n            checkTask: tasksMethods.checkTask,\n            editTask: tasksMethods.editTask,\n            timeLine: timeLine,\n            darkMode: darkMode,\n            ref: nodeRef,\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, task.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TasksContainer;\nexport default TasksContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksContainer\");","map":{"version":3,"names":["createRef","TransitionGroup","CSSTransition","MyTitle","Task","TasksContainer","blockTitleStyles","darkMode","tabTitle","tasksData","tasksMethods","timeLine","type","typeCondition","filter","task","completed","map","nodeRef","time","deleteTask","checkTask","editTask"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Pages/main-page/MainContent/Tasks/CategoriesTab/TasksContainer.jsx"],"sourcesContent":["import { createRef } from 'react'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle'\r\nimport Task from '../Task/Task'\r\n\r\nconst TasksContainer = ({\r\n  blockTitleStyles,\r\n  darkMode,\r\n  tabTitle,\r\n  tasksData,\r\n  tasksMethods,\r\n  timeLine,\r\n  type,\r\n}) => {\r\n  const typeCondition = type === 'Active'\r\n\r\n  return (\r\n    <div className={typeCondition ? 'activeTasks__block' : 'completedTasks__block'}>\r\n      <MyTitle {...blockTitleStyles}>{type} tasks</MyTitle>\r\n\r\n      <TransitionGroup\r\n        className={\r\n          typeCondition ? 'activeTasks__container' : 'completedTasks__container'\r\n        }>\r\n        {tasksData\r\n          .filter(task => (typeCondition ? !task.completed : task.completed))\r\n          .map(task => {\r\n            const nodeRef = createRef(null)\r\n            return (\r\n              <CSSTransition\r\n                key={task.time}\r\n                nodeRef={nodeRef}\r\n                timeout={500}\r\n                classNames='task'>\r\n                <Task\r\n                  time={task.time}\r\n                  currentTask={task}\r\n                  tabTitle={tabTitle}\r\n                  completed={task.completed}\r\n                  deleteTask={tasksMethods.deleteTask}\r\n                  checkTask={tasksMethods.checkTask}\r\n                  editTask={tasksMethods.editTask}\r\n                  timeLine={timeLine}\r\n                  darkMode={darkMode}\r\n                  ref={nodeRef}>\r\n                  {task.task}\r\n                </Task>\r\n              </CSSTransition>\r\n            )\r\n          })}\r\n      </TransitionGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TasksContainer\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,cAAc,GAAG,QAQjB;EAAA,IARkB;IACtBC,gBADsB;IAEtBC,QAFsB;IAGtBC,QAHsB;IAItBC,SAJsB;IAKtBC,YALsB;IAMtBC,QANsB;IAOtBC;EAPsB,CAQlB;EACJ,MAAMC,aAAa,GAAGD,IAAI,KAAK,QAA/B;EAEA,oBACE;IAAK,SAAS,EAAEC,aAAa,GAAG,oBAAH,GAA0B,uBAAvD;IAAA,wBACE,QAAC,OAAD,OAAaP,gBAAb;MAAA,WAAgCM,IAAhC;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,eAAD;MACE,SAAS,EACPC,aAAa,GAAG,wBAAH,GAA8B,2BAF/C;MAAA,UAIGJ,SAAS,CACPK,MADF,CACSC,IAAI,IAAKF,aAAa,GAAG,CAACE,IAAI,CAACC,SAAT,GAAqBD,IAAI,CAACC,SADzD,EAEEC,GAFF,CAEMF,IAAI,IAAI;QACX,MAAMG,OAAO,gBAAGlB,SAAS,CAAC,IAAD,CAAzB;QACA,oBACE,QAAC,aAAD;UAEE,OAAO,EAAEkB,OAFX;UAGE,OAAO,EAAE,GAHX;UAIE,UAAU,EAAC,MAJb;UAAA,uBAKE,QAAC,IAAD;YACE,IAAI,EAAEH,IAAI,CAACI,IADb;YAEE,WAAW,EAAEJ,IAFf;YAGE,QAAQ,EAAEP,QAHZ;YAIE,SAAS,EAAEO,IAAI,CAACC,SAJlB;YAKE,UAAU,EAAEN,YAAY,CAACU,UAL3B;YAME,SAAS,EAAEV,YAAY,CAACW,SAN1B;YAOE,QAAQ,EAAEX,YAAY,CAACY,QAPzB;YAQE,QAAQ,EAAEX,QARZ;YASE,QAAQ,EAAEJ,QATZ;YAUE,GAAG,EAAEW,OAVP;YAAA,UAWGH,IAAI,CAACA;UAXR;YAAA;YAAA;YAAA;UAAA;QALF,GACOA,IAAI,CAACI,IADZ;UAAA;UAAA;UAAA;QAAA,QADF;MAqBD,CAzBF;IAJH;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD,CAhDD;;KAAMd,c;AAkDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}