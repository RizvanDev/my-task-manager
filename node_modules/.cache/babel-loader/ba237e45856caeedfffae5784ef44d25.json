{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getDatabase, onValue, ref, set, update } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getDatabase(app);\n\nconst addEmptyArrays = data => {\n  if (data) {\n    for (const obj of data) {\n      if (!obj.hasOwnProperty('data')) obj.data = [];\n    }\n\n    return data;\n  }\n\n  return [];\n}; // database\n\n\nconst database = {\n  writeUserData: (path, userInfo, tabItems) => {\n    const reference = ref(db, `users/${userInfo.uid}/${path}`);\n    const day = new Date().toLocaleDateString().split('.').join('');\n    const dataObj = {\n      user_info: {\n        uid: userInfo.uid,\n        username: userInfo.nick,\n        email: userInfo.email,\n        profile_picture: userInfo.photo\n      },\n      user_tasks: {\n        [day]: tabItems\n      }\n    };\n\n    if (userInfo.uid) {\n      const condition = path ? dataObj[path] : dataObj;\n      set(reference, { ...condition\n      });\n    }\n  },\n  writeNewDay: (userId, day, tabItems) => {\n    const reference = ref(db, `users/${userId}/user_tasks/`);\n\n    if (userId) {\n      return update(reference, {\n        [day]: tabItems\n      });\n    }\n  },\n  readUserData: (userInfo, setUserInfo, setTabItem, setTab, setCategory) => {\n    const distanceRef = ref(db, 'users/' + userInfo.uid);\n    const day = new Date().toLocaleDateString().split('.').join('');\n    onValue(distanceRef, snapshot => {\n      const data = snapshot.val();\n      setUserInfo({\n        photo: data.user_info.profile_picture,\n        nick: data.user_info.username,\n        email: data.user_info.email,\n        uid: data.user_info.uid\n      });\n      setTabItem([...addEmptyArrays(data.user_tasks ? data.user_tasks[day] : [])]);\n      setCategory(data.user_tasks ? data.user_tasks[day][0].title : '');\n      setTab(data.user_tasks ? data.user_tasks[day][0].title : '');\n    });\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref => {\n    let { ...params\n    } = _ref;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n\n        if (userCredential) {\n          params.setLogin({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            modal: true,\n            type: 'Success',\n            text: 'Authorization successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            uid: userCredential.user.uid\n          });\n          database.readUserData(params.userInfo, params.setUserInfo, params.setTabItem, params.setTab, params.setCategory);\n          setTimeout(() => params.setAuthModal(false), 1500);\n        }\n      } catch (Error) {\n        console.log(Error);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n        database.writeUserData(userCredential.user.uid, '', params.userInfo, params.tabItems);\n        params.setRegistration({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n          params.navigate('Profile.jsx');\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Registration successfully'\n        });\n      } catch (Error) {\n        console.log(Error);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // State\n  monitorAuthState: (setAuthorization, defaultPhoto, userInfo, setUserInfo) => {\n    return onAuthStateChanged(auth, user => {\n      if (user) {\n        setAuthorization(true);\n        setUserInfo({ ...userInfo,\n          email: user.email,\n          uid: user.uid\n        });\n      } else {\n        setAuthorization(false);\n        setUserInfo({\n          photo: defaultPhoto,\n          nick: 'username',\n          email: '',\n          uid: ''\n        });\n      }\n    });\n  },\n  // Logout\n  logOut: (defaultItems, setTabItem, setTab, setCategory) => {\n    return signOut(auth).then(() => {\n      setTabItem([...defaultItems]);\n      setTab(defaultItems[0].title);\n      setCategory(defaultItems[0].title);\n    });\n  }\n};\nexport { authentication, database };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","signOut","getDatabase","onValue","ref","set","update","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","addEmptyArrays","data","obj","hasOwnProperty","database","writeUserData","path","userInfo","tabItems","reference","uid","day","Date","toLocaleDateString","split","join","dataObj","user_info","username","nick","email","profile_picture","photo","user_tasks","condition","writeNewDay","userId","readUserData","setUserInfo","setTabItem","setTab","setCategory","distanceRef","snapshot","val","title","authentication","loginEmailPassword","params","login","Password","userCredential","Email","setLogin","createAuthInfoModal","modal","type","text","user","setTimeout","setAuthModal","Error","console","log","code","registrationEmailPassword","registration","setRegistration","navigate","monitorAuthState","setAuthorization","defaultPhoto","logOut","defaultItems","then"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, onValue, ref, set, update } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getDatabase(app)\r\n\r\nconst addEmptyArrays = data => {\r\n  if (data) {\r\n    for (const obj of data) {\r\n      if (!obj.hasOwnProperty('data')) obj.data = []\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return []\r\n}\r\n\r\n// database\r\nconst database = {\r\n  writeUserData: (path, userInfo, tabItems) => {\r\n    const reference = ref(db, `users/${userInfo.uid}/${path}`)\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    const dataObj = {\r\n      user_info: {\r\n        uid: userInfo.uid,\r\n        username: userInfo.nick,\r\n        email: userInfo.email,\r\n        profile_picture: userInfo.photo,\r\n      },\r\n      user_tasks: { [day]: tabItems },\r\n    }\r\n\r\n    if (userInfo.uid) {\r\n      const condition = path ? dataObj[path] : dataObj\r\n\r\n      set(reference, { ...condition })\r\n    }\r\n  },\r\n  writeNewDay: (userId, day, tabItems) => {\r\n    const reference = ref(db, `users/${userId}/user_tasks/`)\r\n\r\n    if (userId) {\r\n      return update(reference, { [day]: tabItems })\r\n    }\r\n  },\r\n  readUserData: (userInfo, setUserInfo, setTabItem, setTab, setCategory) => {\r\n    const distanceRef = ref(db, 'users/' + userInfo.uid)\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    onValue(distanceRef, snapshot => {\r\n      const data = snapshot.val()\r\n\r\n      setUserInfo({\r\n        photo: data.user_info.profile_picture,\r\n        nick: data.user_info.username,\r\n        email: data.user_info.email,\r\n        uid: data.user_info.uid,\r\n      })\r\n\r\n      setTabItem([...addEmptyArrays(data.user_tasks ? data.user_tasks[day] : [])])\r\n      setCategory(data.user_tasks ? data.user_tasks[day][0].title : '')\r\n      setTab(data.user_tasks ? data.user_tasks[day][0].title : '')\r\n    })\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setLogin({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            modal: true,\r\n            type: 'Success',\r\n            text: 'Authorization successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.readUserData(\r\n            params.userInfo,\r\n            params.setUserInfo,\r\n            params.setTabItem,\r\n            params.setTab,\r\n            params.setCategory,\r\n          )\r\n\r\n          setTimeout(() => params.setAuthModal(false), 1500)\r\n        }\r\n      } catch (Error) {\r\n        console.log(Error)\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        database.writeUserData(\r\n          userCredential.user.uid,\r\n          '',\r\n          params.userInfo,\r\n          params.tabItems,\r\n        )\r\n\r\n        params.setRegistration({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n          params.navigate('Profile.jsx')\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Registration successfully',\r\n        })\r\n      } catch (Error) {\r\n        console.log(Error)\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // State\r\n  monitorAuthState: (setAuthorization, defaultPhoto, userInfo, setUserInfo) => {\r\n    return onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setAuthorization(true)\r\n        setUserInfo({ ...userInfo, email: user.email, uid: user.uid })\r\n      } else {\r\n        setAuthorization(false)\r\n        setUserInfo({ photo: defaultPhoto, nick: 'username', email: '', uid: '' })\r\n      }\r\n    })\r\n  },\r\n  // Logout\r\n  logOut: (defaultItems, setTabItem, setTab, setCategory) => {\r\n    return signOut(auth).then(() => {\r\n      setTabItem([...defaultItems])\r\n      setTab(defaultItems[0].title)\r\n      setCategory(defaultItems[0].title)\r\n    })\r\n  },\r\n}\r\n\r\nexport { authentication, database }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}