{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB_MjACGz_BR2HoSjrGos_DWC0eyDtG890',\n  authDomain: 'task-manager-19b7a.firebaseapp.com',\n  databaseURL: 'https://task-manager-19b7a-default-rtdb.firebaseio.com',\n  projectId: 'task-manager-19b7a',\n  storageBucket: 'task-manager-19b7a.appspot.com',\n  messagingSenderId: '697303553114',\n  appId: '1:697303553114:web:3c65db84a8cd1186557463'\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app); // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async function () {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    console.log(params);\n\n    if (params.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.Email, params.Password);\n        props.setLogin({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n          params.setAuthorization(true);\n        }, 1000);\n        props.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Authorization successfully'\n        });\n      } catch (Error) {\n        props.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async props => {\n    if (props.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, props.registration.Email, props.registration.Password);\n        props.setRegistration({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          props.setAuthModal(false);\n          props.setAuthorization(true);\n        }, 1000);\n        props.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Registration successfully'\n        });\n      } catch (Error) {\n        props.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  monitorAuthState: async () => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        console.log(user);\n      } else {\n        console.log(`You'are not logged in...`);\n      }\n    });\n  }\n};\nexport { authentication };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","auth","authentication","loginEmailPassword","params","console","log","Password","userCredential","Email","props","setLogin","setTimeout","setAuthModal","setAuthorization","createAuthInfoModal","modal","type","text","Error","code","registrationEmailPassword","registration","setRegistration","monitorAuthState","user"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n} from 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyB_MjACGz_BR2HoSjrGos_DWC0eyDtG890',\r\n  authDomain: 'task-manager-19b7a.firebaseapp.com',\r\n  databaseURL: 'https://task-manager-19b7a-default-rtdb.firebaseio.com',\r\n  projectId: 'task-manager-19b7a',\r\n  storageBucket: 'task-manager-19b7a.appspot.com',\r\n  messagingSenderId: '697303553114',\r\n  appId: '1:697303553114:web:3c65db84a8cd1186557463',\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async (...params) => {\r\n    console.log(params)\r\n    if (params.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.Email,\r\n          params.Password,\r\n        )\r\n\r\n        props.setLogin({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n          params.setAuthorization(true)\r\n        }, 1000)\r\n\r\n        props.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Authorization successfully',\r\n        })\r\n      } catch (Error) {\r\n        props.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async props => {\r\n    if (props.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          props.registration.Email,\r\n          props.registration.Password,\r\n        )\r\n\r\n        props.setRegistration({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          props.setAuthModal(false)\r\n          props.setAuthorization(true)\r\n        }, 1000)\r\n\r\n        props.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Registration successfully',\r\n        })\r\n      } catch (Error) {\r\n        props.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  monitorAuthState: async () => {\r\n    onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        console.log(user)\r\n      } else {\r\n        console.log(`You'are not logged in...`)\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport { authentication }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}