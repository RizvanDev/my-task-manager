{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Pages\\\\main-page\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\CategoriesTab.jsx\",\n    _s = $RefreshSig$();\n\nimport { createRef, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Context } from '../../../../../context';\nimport { database } from '../../../../../firebase/firebaseConfig';\nimport useValue from '../../../../../hooks/useValue';\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle';\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig';\nimport DeleteModal from '../../../modalWindows/DeletModal/DeleteModal';\nimport Task from '../Task/Task';\nimport './categoriesTab.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoriesTab = props => {\n  _s();\n\n  const [modal, setModal] = useValue(false);\n  const {\n    darkMode,\n    tab,\n    setTab,\n    setCategory,\n    tabItems,\n    setTabItem,\n    editTask,\n    checkTask,\n    deleteTask,\n    setSortType,\n    timeLine,\n    userInfo,\n    calendarDate,\n    modals,\n    openModals\n  } = useContext(Context);\n\n  const removeCategory = () => {\n    const checkingTabs = tabItems.tasks[props.idx - 1] || tabItems.tasks[1];\n    setTab(tabItems.tasks.length > 1 && checkingTabs.title);\n    setCategory(tabItems.tasks.length > 1 && checkingTabs.title);\n    setTabItem({ ...tabItems,\n      tasks: tabItems.tasks.filter(e => e.title !== props.category.title)\n    });\n    return database.writeUserTasksData(userInfo.uid, calendarDate.toLocaleDateString().split('.').join(''), { ...tabItems,\n      tasks: tabItems.tasks.filter(e => e.title !== props.category.title)\n    });\n  };\n\n  const askDeleteCategory = () => {\n    console.log(true);\n    openModals({ ...modals,\n      deleteCategoryModal: false\n    });\n  };\n\n  console.log(modals.deleteCategoryModal);\n  const titleStyles = {\n    fontSize: '18px',\n    lineHeight: '25px',\n    letterSpacing: '0.02em'\n  };\n\n  if (window.innerWidth <= 1400) {\n    titleStyles.fontSize = '16px';\n    titleStyles.lineHeight = '20px';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tab === props.category.title ? 'category__container active' : 'category__container',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__title\",\n      children: props.category.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__activeTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, { ...titleStyles,\n        children: \"Active tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CategoriesConfig, {\n        modal: modal,\n        timeLine: timeLine,\n        category: props.category,\n        setSortType: setSortType,\n        askDeleteCategory: askDeleteCategory,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        className: darkMode ? 'activeTasksContainer darkMode' : 'activeTasksContainer',\n        children: props.category.data.filter(task => !task.completed).map(uncompletedTask => {\n          const nodeRef = /*#__PURE__*/createRef(null);\n          return /*#__PURE__*/_jsxDEV(CSSTransition, {\n            nodeRef: nodeRef,\n            timeout: 500,\n            classNames: \"task\",\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              time: uncompletedTask.time,\n              currentTask: uncompletedTask,\n              tabTitle: props.category.title,\n              deleteTask: deleteTask,\n              completed: uncompletedTask.completed,\n              checkTask: checkTask,\n              editTask: editTask,\n              timeLine: timeLine,\n              ref: nodeRef,\n              children: uncompletedTask.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, uncompletedTask.time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), !timeLine.future && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__completedTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, { ...titleStyles,\n        children: \"Completed tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        className: darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer',\n        children: props.category.data.filter(task => task.completed).map(completedTask => {\n          const nodeRef = /*#__PURE__*/createRef(null);\n          return /*#__PURE__*/_jsxDEV(CSSTransition, {\n            nodeRef: nodeRef,\n            timeout: 500,\n            classNames: \"task\",\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              time: completedTask.time,\n              currentTask: completedTask,\n              tabTitle: props.category.title,\n              deleteTask: deleteTask,\n              completed: completedTask.completed,\n              checkTask: checkTask,\n              timeLine: timeLine,\n              ref: nodeRef,\n              children: completedTask.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this)\n          }, completedTask.time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"category__configBtn\",\n      title: \"configuration\",\n      onClick: () => setModal(!modal),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteModal, {\n      removeCategory: removeCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoriesTab, \"SH0rjHtMPFIvPGmdnFpejWJ5XDU=\", false, function () {\n  return [useValue];\n});\n\n_c = CategoriesTab;\nexport default CategoriesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesTab\");","map":{"version":3,"names":["createRef","useContext","CSSTransition","TransitionGroup","Context","database","useValue","MyTitle","CategoriesConfig","DeleteModal","Task","CategoriesTab","props","modal","setModal","darkMode","tab","setTab","setCategory","tabItems","setTabItem","editTask","checkTask","deleteTask","setSortType","timeLine","userInfo","calendarDate","modals","openModals","removeCategory","checkingTabs","tasks","idx","length","title","filter","e","category","writeUserTasksData","uid","toLocaleDateString","split","join","askDeleteCategory","console","log","deleteCategoryModal","titleStyles","fontSize","lineHeight","letterSpacing","window","innerWidth","data","task","completed","map","uncompletedTask","nodeRef","time","future","completedTask"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Pages/main-page/MainContent/Tasks/CategoriesTab/CategoriesTab.jsx"],"sourcesContent":["import { createRef, useContext } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Context } from '../../../../../context'\r\nimport { database } from '../../../../../firebase/firebaseConfig'\r\nimport useValue from '../../../../../hooks/useValue'\r\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle'\r\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig'\r\nimport DeleteModal from '../../../modalWindows/DeletModal/DeleteModal'\r\nimport Task from '../Task/Task'\r\nimport './categoriesTab.scss'\r\n\r\nconst CategoriesTab = props => {\r\n  const [modal, setModal] = useValue(false)\r\n\r\n  const {\r\n    darkMode,\r\n    tab,\r\n    setTab,\r\n    setCategory,\r\n    tabItems,\r\n    setTabItem,\r\n    editTask,\r\n    checkTask,\r\n    deleteTask,\r\n    setSortType,\r\n    timeLine,\r\n    userInfo,\r\n    calendarDate,\r\n    modals,\r\n    openModals,\r\n  } = useContext(Context)\r\n\r\n  const removeCategory = () => {\r\n    const checkingTabs = tabItems.tasks[props.idx - 1] || tabItems.tasks[1]\r\n\r\n    setTab(tabItems.tasks.length > 1 && checkingTabs.title)\r\n    setCategory(tabItems.tasks.length > 1 && checkingTabs.title)\r\n\r\n    setTabItem({\r\n      ...tabItems,\r\n      tasks: tabItems.tasks.filter(e => e.title !== props.category.title),\r\n    })\r\n\r\n    return database.writeUserTasksData(\r\n      userInfo.uid,\r\n      calendarDate.toLocaleDateString().split('.').join(''),\r\n      {\r\n        ...tabItems,\r\n        tasks: tabItems.tasks.filter(e => e.title !== props.category.title),\r\n      },\r\n    )\r\n  }\r\n\r\n  const askDeleteCategory = () => {\r\n    console.log(true)\r\n    openModals({ ...modals, deleteCategoryModal: false })\r\n  }\r\n\r\n  console.log(modals.deleteCategoryModal)\r\n  const titleStyles = {\r\n    fontSize: '18px',\r\n    lineHeight: '25px',\r\n    letterSpacing: '0.02em',\r\n  }\r\n\r\n  if (window.innerWidth <= 1400) {\r\n    titleStyles.fontSize = '16px'\r\n    titleStyles.lineHeight = '20px'\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        tab === props.category.title\r\n          ? 'category__container active'\r\n          : 'category__container'\r\n      }>\r\n      <div className='category__title'>{props.category.title}</div>\r\n      <div className='category__activeTasks'>\r\n        <MyTitle {...titleStyles}>Active tasks</MyTitle>\r\n\r\n        <CategoriesConfig\r\n          modal={modal}\r\n          timeLine={timeLine}\r\n          category={props.category}\r\n          setSortType={setSortType}\r\n          askDeleteCategory={askDeleteCategory}\r\n          darkMode={darkMode}\r\n        />\r\n\r\n        <TransitionGroup\r\n          className={darkMode ? 'activeTasksContainer darkMode' : 'activeTasksContainer'}>\r\n          {props.category.data\r\n            .filter(task => !task.completed)\r\n            .map(uncompletedTask => {\r\n              const nodeRef = createRef(null)\r\n              return (\r\n                <CSSTransition\r\n                  key={uncompletedTask.time}\r\n                  nodeRef={nodeRef}\r\n                  timeout={500}\r\n                  classNames='task'>\r\n                  <Task\r\n                    time={uncompletedTask.time}\r\n                    currentTask={uncompletedTask}\r\n                    tabTitle={props.category.title}\r\n                    deleteTask={deleteTask}\r\n                    completed={uncompletedTask.completed}\r\n                    checkTask={checkTask}\r\n                    editTask={editTask}\r\n                    timeLine={timeLine}\r\n                    ref={nodeRef}>\r\n                    {uncompletedTask.task}\r\n                  </Task>\r\n                </CSSTransition>\r\n              )\r\n            })}\r\n        </TransitionGroup>\r\n      </div>\r\n      {!timeLine.future && (\r\n        <div className='category__completedTasks'>\r\n          <MyTitle {...titleStyles}>Completed tasks</MyTitle>\r\n          <TransitionGroup\r\n            className={\r\n              darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer'\r\n            }>\r\n            {props.category.data\r\n              .filter(task => task.completed)\r\n              .map(completedTask => {\r\n                const nodeRef = createRef(null)\r\n                return (\r\n                  <CSSTransition\r\n                    key={completedTask.time}\r\n                    nodeRef={nodeRef}\r\n                    timeout={500}\r\n                    classNames='task'>\r\n                    <Task\r\n                      time={completedTask.time}\r\n                      currentTask={completedTask}\r\n                      tabTitle={props.category.title}\r\n                      deleteTask={deleteTask}\r\n                      completed={completedTask.completed}\r\n                      checkTask={checkTask}\r\n                      timeLine={timeLine}\r\n                      ref={nodeRef}>\r\n                      {completedTask.task}\r\n                    </Task>\r\n                  </CSSTransition>\r\n                )\r\n              })}\r\n          </TransitionGroup>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        type='button'\r\n        className='category__configBtn'\r\n        title='configuration'\r\n        onClick={() => setModal(!modal)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n\r\n      <DeleteModal removeCategory={removeCategory} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesTab\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}