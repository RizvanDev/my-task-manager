{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Components\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\CategoriesTab.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './categoriesTab.scss';\nimport MyTitle from '../../../MyTitle/MyTitle';\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig';\nimport Task from '../Task/Task';\nimport useValue from '../../../../hooks/useValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoriesTab = props => {\n  _s();\n\n  const [modal, setModal] = useValue(false);\n  const nodeRef = useRef(null);\n\n  const removeCategory = () => {\n    const checkingTabs = props.tabItems[props.idx - 1] || props.tabItems[1];\n    props.setTab(props.tabItems.length > 1 ? checkingTabs.title : false);\n    return props.setTabItem(props.tabItems.filter(e => e.title !== props.category.title));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.tab === props.category.title ? 'category__container active' : 'category__container',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__title\",\n      children: props.category.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__activeTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n        fontSize: \"18px\",\n        lineHeight: \"25px\",\n        letterSpacing: \"0.02em\",\n        children: \"Active tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          children: props.category.data.filter(task => !task.completed).map(uncompletedTask => /*#__PURE__*/_jsxDEV(CSSTransition, {\n            nodeRef: nodeRef,\n            timeout: 500,\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              ref: nodeRef,\n              date: uncompletedTask.date,\n              currentTask: uncompletedTask,\n              tabTitle: props.category.title,\n              deleteTask: props.deleteTask,\n              completed: uncompletedTask.completed,\n              checkTask: props.checkTask,\n              editTask: props.editTask,\n              children: uncompletedTask.task\n            }, uncompletedTask.date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)\n          }, uncompletedTask.date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__completedTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n        fontSize: \"18px\",\n        lineHeight: \"25px\",\n        letterSpacing: \"0.02em\",\n        children: \"Completed tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: props.darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer',\n        children: props.category.data.filter(task => task.completed).map(completedTask => /*#__PURE__*/_jsxDEV(Task, {\n          date: completedTask.date,\n          currentTask: completedTask,\n          tabTitle: props.category.title,\n          deleteTask: props.deleteTask,\n          completed: completedTask.completed,\n          checkTask: props.checkTask,\n          children: completedTask.task\n        }, completedTask.date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"category__configBtn\",\n      title: \"configuration\",\n      onClick: () => setModal(!modal),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoriesConfig, {\n      modal: modal,\n      removeCategory: removeCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoriesTab, \"Y+9mVkd25ZpogHVl7epLVVfSBbs=\", false, function () {\n  return [useValue];\n});\n\n_c = CategoriesTab;\nexport default CategoriesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesTab\");","map":{"version":3,"names":["React","useRef","CSSTransition","TransitionGroup","MyTitle","CategoriesConfig","Task","useValue","CategoriesTab","props","modal","setModal","nodeRef","removeCategory","checkingTabs","tabItems","idx","setTab","length","title","setTabItem","filter","e","category","tab","data","task","completed","map","uncompletedTask","date","deleteTask","checkTask","editTask","darkMode","completedTask"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Components/MainContent/Tasks/CategoriesTab/CategoriesTab.jsx"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport './categoriesTab.scss'\r\nimport MyTitle from '../../../MyTitle/MyTitle'\r\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig'\r\nimport Task from '../Task/Task'\r\nimport useValue from '../../../../hooks/useValue'\r\n\r\nconst CategoriesTab = props => {\r\n  const [modal, setModal] = useValue(false)\r\n  const nodeRef = useRef(null)\r\n\r\n  const removeCategory = () => {\r\n    const checkingTabs = props.tabItems[props.idx - 1] || props.tabItems[1]\r\n\r\n    props.setTab(props.tabItems.length > 1 ? checkingTabs.title : false)\r\n\r\n    return props.setTabItem(props.tabItems.filter(e => e.title !== props.category.title))\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.tab === props.category.title\r\n          ? 'category__container active'\r\n          : 'category__container'\r\n      }>\r\n      <div className='category__title'>{props.category.title}</div>\r\n      <div className='category__activeTasks'>\r\n        <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em'>\r\n          Active tasks\r\n        </MyTitle>\r\n        <div>\r\n          <TransitionGroup>\r\n            {props.category.data\r\n              .filter(task => !task.completed)\r\n              .map(uncompletedTask => (\r\n                <CSSTransition key={uncompletedTask.date} nodeRef={nodeRef} timeout={500}>\r\n                  <Task\r\n                    ref={nodeRef}\r\n                    key={uncompletedTask.date}\r\n                    date={uncompletedTask.date}\r\n                    currentTask={uncompletedTask}\r\n                    tabTitle={props.category.title}\r\n                    deleteTask={props.deleteTask}\r\n                    completed={uncompletedTask.completed}\r\n                    checkTask={props.checkTask}\r\n                    editTask={props.editTask}>\r\n                    {uncompletedTask.task}\r\n                  </Task>\r\n                </CSSTransition>\r\n              ))}\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n      <div className='category__completedTasks'>\r\n        <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em'>\r\n          Completed tasks\r\n        </MyTitle>\r\n        <div\r\n          className={\r\n            props.darkMode\r\n              ? 'completedTasksContainer darkMode'\r\n              : 'completedTasksContainer'\r\n          }>\r\n          {props.category.data\r\n            .filter(task => task.completed)\r\n            .map(completedTask => (\r\n              <Task\r\n                key={completedTask.date}\r\n                date={completedTask.date}\r\n                currentTask={completedTask}\r\n                tabTitle={props.category.title}\r\n                deleteTask={props.deleteTask}\r\n                completed={completedTask.completed}\r\n                checkTask={props.checkTask}>\r\n                {completedTask.task}\r\n              </Task>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <button\r\n        type='button'\r\n        className='category__configBtn'\r\n        title='configuration'\r\n        onClick={() => setModal(!modal)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n      <CategoriesConfig modal={modal} removeCategory={removeCategory} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesTab\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}