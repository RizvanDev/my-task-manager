{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getDatabase, ref, set, get } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getDatabase(app);\n\nconst addEmptyArrays = data => {\n  return Array.isArray(data) ? data.map(obj => obj.hasOwnProperty('data') ? obj : { ...obj,\n    data: []\n  }) : data;\n}; // database\n\n\nconst database = {\n  // send user information (email,avatar,nickname,id)\n  writeUserInfoData: userInfo => {\n    const reference = ref(db, `users/${userInfo.uid}/user_info`);\n    const data = {\n      uid: userInfo.uid,\n      username: userInfo.nick,\n      email: userInfo.email,\n      avatar: userInfo.photo\n    };\n    return userInfo.uid && set(reference, data);\n  },\n  // send user tasks Data\n  writeUserTasksData: (userId, date, tabItems) => {\n    const reference = ref(db, `users/${userId}/user_tasks/${date}`);\n    return userId && set(reference, { ...tabItems.tasks\n    });\n  },\n  // create/read new day\n  writeNewDayData: (userId, date, setTabItem, setCategory, setTab) => {\n    const distanceRef = ref(db, `users/${userId}/user_tasks/${date}`);\n    return get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const tasks = snapshot.val();\n        setCategory(tasks[0].title);\n        setTab(tasks[0].title);\n        setTabItem({\n          date: new Date().toLocaleDateString().split('.').reverse().join(''),\n          tasks: [...addEmptyArrays(tasks)]\n        });\n      } else {\n        setTabItem({\n          date: new Date().toLocaleDateString().split('.').reverse().join(''),\n          tasks: []\n        });\n      }\n    });\n  },\n  // create Data for new user\n  createUserData: (userId, userInfo, tabItems) => {\n    const reference = ref(db, `users/${userId}`);\n    const day = new Date().toLocaleDateString().split('.').join('');\n    const data = {\n      user_info: {\n        uid: userInfo.uid,\n        username: userInfo.nick,\n        email: userInfo.email,\n        avatar: userInfo.photo\n      },\n      user_tasks: {\n        [day]: tabItems.tasks\n      }\n    };\n    return userId && set(reference, data);\n  },\n  // reade user Data\n  readUserData: (userId, setUserInfo, tabItems, setTabItems, setTab, setCategory) => {\n    const distanceRef = ref(db, `users/${userId}/`);\n    const date = new Date().toLocaleDateString().split('.').join('');\n    return get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const data = snapshot.val();\n        setUserInfo({\n          photo: data.user_info.avatar,\n          nick: data.user_info.username,\n          email: data.user_info.email,\n          uid: data.user_info.uid\n        });\n        const condition = data.user_tasks && data.user_tasks[date];\n        setTabItems({ ...tabItems,\n          tasks: [...addEmptyArrays(condition ? data.user_tasks[date] : [])]\n        });\n        setCategory(condition ? data.user_tasks[date][0].title : '');\n        setTab(condition ? data.user_tasks[date][0].title : '');\n      }\n    });\n  },\n  // reading the data of the selected day\n  readPastData: _ref => {\n    let { ...params\n    } = _ref;\n    const date = params.date.toLocaleDateString().split('.').join('');\n    const distanceRef = ref(db, `users/${params.userInfo.uid}/user_tasks/${date}`);\n    return get(distanceRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const tasks = snapshot.val();\n        params.setCalendarDate(params.date);\n        setTimeout(() => {\n          params.setTabItems({ ...params.tabItems,\n            tasks: [...addEmptyArrays(tasks)]\n          });\n          params.setCategory(tasks[0].title);\n          params.setTab(tasks[0].title);\n          params.openModals({ ...params.modals,\n            calendarModal: false\n          });\n        }, 500);\n        return;\n      }\n\n      return params.createAuthInfoModal({\n        show: true,\n        type: 'Error',\n        text: `You don't have any tasks for this day`\n      });\n    });\n  },\n  // Statistics\n  createStatistics: (userId, period, setStatistics) => {\n    const distanceRef = ref(db, `users/${userId}/user_tasks/`);\n    const date = new Date().toLocaleDateString().split('.').join('');\n    let categories = 0;\n    let createdTasks = 0;\n    let completedTasks = 0;\n\n    const calculateTasks = data => {\n      return data.forEach(category => {\n        if (category.hasOwnProperty('data')) {\n          createdTasks += category.data.length;\n          category.data.forEach(task => task.completed && completedTasks++);\n        }\n      });\n    };\n\n    const periods = {\n      Day: () => {\n        const distanceRefDay = ref(db, `users/${userId}/user_tasks/${date}`);\n        return get(distanceRefDay).then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            categories += data.length;\n            calculateTasks(data);\n            setStatistics({\n              Categories: categories,\n              Created: createdTasks,\n              Completed: completedTasks\n            });\n          }\n        });\n      },\n      Month: () => {\n        const currentMonth = date.split('').splice(2, 2).join('');\n        return get(distanceRef).then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n\n            for (const day in data) {\n              const condition = day.split('').splice(2, 2).join('') === currentMonth;\n\n              if (condition) {\n                categories += data[day].length;\n                calculateTasks(data[day]);\n              }\n            }\n\n            setStatistics({\n              Categories: categories,\n              Created: createdTasks,\n              Completed: completedTasks\n            });\n          }\n        });\n      },\n      Year: () => {\n        const currentYear = date.split('').splice(4).join('');\n        return get(distanceRef).then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n\n            for (const day in data) {\n              const condition = day.split('').splice(4).join('') === currentYear;\n\n              if (condition) {\n                categories += data[day].length;\n                calculateTasks(data[day]);\n              }\n            }\n\n            setStatistics({\n              Categories: categories,\n              Created: createdTasks,\n              Completed: completedTasks\n            });\n          }\n        });\n      }\n    };\n    return periods[period]();\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n\n        if (userCredential) {\n          params.setLogin({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            show: true,\n            type: 'Success',\n            text: 'Authorization successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            uid: userCredential.user.uid\n          });\n          database.readUserData(userCredential.user.uid, params.setUserInfo, params.tabItems, params.setTabItem, params.setTab, params.setCategory);\n          setTimeout(() => {\n            params.openModals({ ...params.modals,\n              authModal: false\n            });\n          }, 1500);\n        }\n      } catch (Error) {\n        params.createAuthInfoModal({\n          show: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref3 => {\n    let { ...params\n    } = _ref3;\n\n    if (params.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n\n        if (userCredential) {\n          params.setRegistration({\n            Email: '',\n            Password: ''\n          });\n          params.createAuthInfoModal({\n            show: true,\n            type: 'Success',\n            text: 'Registration successfully'\n          });\n          params.setUserInfo({ ...params.userInfo,\n            email: userCredential.user.email,\n            uid: userCredential.user.uid\n          });\n          database.createUserData(userCredential.user.uid, params.userInfo, params.tabItems);\n          setTimeout(() => {\n            params.openModals({ ...params.modals,\n              authModal: false\n            });\n            params.navigate('Profile.jsx');\n          }, 1000);\n        }\n      } catch (Error) {\n        params.createAuthInfoModal({\n          show: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Logout\n  logOut: _ref4 => {\n    let { ...params\n    } = _ref4;\n    return signOut(auth).then(() => {\n      params.setUserInfo({\n        photo: params.defaultPhoto,\n        nick: 'username',\n        email: '',\n        uid: ''\n      });\n      params.setCalendarDate(new Date());\n      params.setTimeLine({\n        past: false,\n        future: false\n      });\n      params.setTabItem({ ...params.tabItems,\n        tasks: []\n      });\n    });\n  }\n};\nexport { authentication, database };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","getDatabase","ref","set","get","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","addEmptyArrays","data","Array","isArray","map","obj","hasOwnProperty","database","writeUserInfoData","userInfo","reference","uid","username","nick","email","avatar","photo","writeUserTasksData","userId","date","tabItems","tasks","writeNewDayData","setTabItem","setCategory","setTab","distanceRef","then","snapshot","exists","val","title","Date","toLocaleDateString","split","reverse","join","createUserData","day","user_info","user_tasks","readUserData","setUserInfo","setTabItems","condition","readPastData","params","setCalendarDate","setTimeout","openModals","modals","calendarModal","createAuthInfoModal","show","type","text","createStatistics","period","setStatistics","categories","createdTasks","completedTasks","calculateTasks","forEach","category","length","task","completed","periods","Day","distanceRefDay","Categories","Created","Completed","Month","currentMonth","splice","Year","currentYear","authentication","loginEmailPassword","login","Password","userCredential","Email","setLogin","user","authModal","Error","code","registrationEmailPassword","registration","setRegistration","navigate","logOut","defaultPhoto","setTimeLine","past","future"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, ref, set, get } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getDatabase(app)\r\n\r\nconst addEmptyArrays = data => {\r\n  return Array.isArray(data)\r\n    ? data.map(obj => (obj.hasOwnProperty('data') ? obj : { ...obj, data: [] }))\r\n    : data\r\n}\r\n\r\n// database\r\nconst database = {\r\n  // send user information (email,avatar,nickname,id)\r\n  writeUserInfoData: userInfo => {\r\n    const reference = ref(db, `users/${userInfo.uid}/user_info`)\r\n\r\n    const data = {\r\n      uid: userInfo.uid,\r\n      username: userInfo.nick,\r\n      email: userInfo.email,\r\n      avatar: userInfo.photo,\r\n    }\r\n\r\n    return userInfo.uid && set(reference, data)\r\n  },\r\n  // send user tasks Data\r\n  writeUserTasksData: (userId, date, tabItems) => {\r\n    const reference = ref(db, `users/${userId}/user_tasks/${date}`)\r\n\r\n    return userId && set(reference, { ...tabItems.tasks })\r\n  },\r\n  // create/read new day\r\n  writeNewDayData: (userId, date, setTabItem, setCategory, setTab) => {\r\n    const distanceRef = ref(db, `users/${userId}/user_tasks/${date}`)\r\n\r\n    return get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const tasks = snapshot.val()\r\n\r\n        setCategory(tasks[0].title)\r\n        setTab(tasks[0].title)\r\n        setTabItem({\r\n          date: new Date().toLocaleDateString().split('.').reverse().join(''),\r\n          tasks: [...addEmptyArrays(tasks)],\r\n        })\r\n      } else {\r\n        setTabItem({\r\n          date: new Date().toLocaleDateString().split('.').reverse().join(''),\r\n          tasks: [],\r\n        })\r\n      }\r\n    })\r\n  },\r\n  // create Data for new user\r\n  createUserData: (userId, userInfo, tabItems) => {\r\n    const reference = ref(db, `users/${userId}`)\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    const data = {\r\n      user_info: {\r\n        uid: userInfo.uid,\r\n        username: userInfo.nick,\r\n        email: userInfo.email,\r\n        avatar: userInfo.photo,\r\n      },\r\n      user_tasks: { [day]: tabItems.tasks },\r\n    }\r\n\r\n    return userId && set(reference, data)\r\n  },\r\n  // reade user Data\r\n  readUserData: (userId, setUserInfo, tabItems, setTabItems, setTab, setCategory) => {\r\n    const distanceRef = ref(db, `users/${userId}/`)\r\n    const date = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    return get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const data = snapshot.val()\r\n\r\n        setUserInfo({\r\n          photo: data.user_info.avatar,\r\n          nick: data.user_info.username,\r\n          email: data.user_info.email,\r\n          uid: data.user_info.uid,\r\n        })\r\n\r\n        const condition = data.user_tasks && data.user_tasks[date]\r\n\r\n        setTabItems({\r\n          ...tabItems,\r\n          tasks: [...addEmptyArrays(condition ? data.user_tasks[date] : [])],\r\n        })\r\n        setCategory(condition ? data.user_tasks[date][0].title : '')\r\n        setTab(condition ? data.user_tasks[date][0].title : '')\r\n      }\r\n    })\r\n  },\r\n  // reading the data of the selected day\r\n  readPastData: ({ ...params }) => {\r\n    const date = params.date.toLocaleDateString().split('.').join('')\r\n    const distanceRef = ref(db, `users/${params.userInfo.uid}/user_tasks/${date}`)\r\n\r\n    return get(distanceRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const tasks = snapshot.val()\r\n        params.setCalendarDate(params.date)\r\n        setTimeout(() => {\r\n          params.setTabItems({ ...params.tabItems, tasks: [...addEmptyArrays(tasks)] })\r\n          params.setCategory(tasks[0].title)\r\n          params.setTab(tasks[0].title)\r\n          params.openModals({ ...params.modals, calendarModal: false })\r\n        }, 500)\r\n        return\r\n      }\r\n\r\n      return params.createAuthInfoModal({\r\n        show: true,\r\n        type: 'Error',\r\n        text: `You don't have any tasks for this day`,\r\n      })\r\n    })\r\n  },\r\n  // Statistics\r\n  createStatistics: (userId, period, setStatistics) => {\r\n    const distanceRef = ref(db, `users/${userId}/user_tasks/`)\r\n    const date = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    let categories = 0\r\n    let createdTasks = 0\r\n    let completedTasks = 0\r\n\r\n    const calculateTasks = data => {\r\n      return data.forEach(category => {\r\n        if (category.hasOwnProperty('data')) {\r\n          createdTasks += category.data.length\r\n\r\n          category.data.forEach(task => task.completed && completedTasks++)\r\n        }\r\n      })\r\n    }\r\n\r\n    const periods = {\r\n      Day: () => {\r\n        const distanceRefDay = ref(db, `users/${userId}/user_tasks/${date}`)\r\n\r\n        return get(distanceRefDay).then(snapshot => {\r\n          if (snapshot.exists()) {\r\n            const data = snapshot.val()\r\n\r\n            categories += data.length\r\n\r\n            calculateTasks(data)\r\n\r\n            setStatistics({\r\n              Categories: categories,\r\n              Created: createdTasks,\r\n              Completed: completedTasks,\r\n            })\r\n          }\r\n        })\r\n      },\r\n      Month: () => {\r\n        const currentMonth = date.split('').splice(2, 2).join('')\r\n\r\n        return get(distanceRef).then(snapshot => {\r\n          if (snapshot.exists()) {\r\n            const data = snapshot.val()\r\n\r\n            for (const day in data) {\r\n              const condition = day.split('').splice(2, 2).join('') === currentMonth\r\n\r\n              if (condition) {\r\n                categories += data[day].length\r\n                calculateTasks(data[day])\r\n              }\r\n            }\r\n\r\n            setStatistics({\r\n              Categories: categories,\r\n              Created: createdTasks,\r\n              Completed: completedTasks,\r\n            })\r\n          }\r\n        })\r\n      },\r\n      Year: () => {\r\n        const currentYear = date.split('').splice(4).join('')\r\n\r\n        return get(distanceRef).then(snapshot => {\r\n          if (snapshot.exists()) {\r\n            const data = snapshot.val()\r\n\r\n            for (const day in data) {\r\n              const condition = day.split('').splice(4).join('') === currentYear\r\n\r\n              if (condition) {\r\n                categories += data[day].length\r\n                calculateTasks(data[day])\r\n              }\r\n            }\r\n\r\n            setStatistics({\r\n              Categories: categories,\r\n              Created: createdTasks,\r\n              Completed: completedTasks,\r\n            })\r\n          }\r\n        })\r\n      },\r\n    }\r\n\r\n    return periods[period]()\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setLogin({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            show: true,\r\n            type: 'Success',\r\n            text: 'Authorization successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.readUserData(\r\n            userCredential.user.uid,\r\n            params.setUserInfo,\r\n            params.tabItems,\r\n            params.setTabItem,\r\n            params.setTab,\r\n            params.setCategory,\r\n          )\r\n\r\n          setTimeout(() => {\r\n            params.openModals({ ...params.modals, authModal: false })\r\n          }, 1500)\r\n        }\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ show: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          params.setRegistration({ Email: '', Password: '' })\r\n          params.createAuthInfoModal({\r\n            show: true,\r\n            type: 'Success',\r\n            text: 'Registration successfully',\r\n          })\r\n\r\n          params.setUserInfo({\r\n            ...params.userInfo,\r\n            email: userCredential.user.email,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.createUserData(\r\n            userCredential.user.uid,\r\n            params.userInfo,\r\n            params.tabItems,\r\n          )\r\n\r\n          setTimeout(() => {\r\n            params.openModals({ ...params.modals, authModal: false })\r\n            params.navigate('Profile.jsx')\r\n          }, 1000)\r\n        }\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ show: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Logout\r\n  logOut: ({ ...params }) => {\r\n    return signOut(auth).then(() => {\r\n      params.setUserInfo({\r\n        photo: params.defaultPhoto,\r\n        nick: 'username',\r\n        email: '',\r\n        uid: '',\r\n      })\r\n      params.setCalendarDate(new Date())\r\n      params.setTimeLine({ past: false, future: false })\r\n      params.setTabItem({ ...params.tabItems, tasks: [] })\r\n    })\r\n  },\r\n}\r\n\r\nexport { authentication, database }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}