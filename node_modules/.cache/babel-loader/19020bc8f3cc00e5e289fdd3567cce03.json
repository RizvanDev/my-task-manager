{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getDatabase, onValue, ref, set, update } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getDatabase(app);\n\nconst addEmptyArrays = data => {\n  if (data) {\n    for (const obj of data) {\n      if (!obj.hasOwnProperty('data')) obj.data = [];\n    }\n\n    return data;\n  }\n\n  return [];\n}; // database\n\n\nconst database = {\n  writeUserData: (userId, path, userInfo, tabItems) => {\n    const reference = ref(db, `users/${userId}/${path}`);\n    const day = new Date().toLocaleDateString().split('.').join('');\n    const dataObj = {\n      user_info: {\n        username: userInfo.nick,\n        email: userInfo.email,\n        profile_picture: userInfo.photo\n      },\n      user_tasks: {\n        [day]: tabItems\n      }\n    };\n\n    if (userId) {\n      const condition = path ? dataObj[path] : dataObj;\n      set(reference, { ...condition\n      });\n    }\n  },\n  writeNewDay: (userId, tabItems) => {\n    const day = new Date().toLocaleDateString().split('.').join('');\n    const reference = ref(db, `users/${uid}/user_tasks/`);\n    console.log(uid);\n    return update(reference, {\n      [day]: tabItems\n    });\n  },\n  readUserData: (userId, setUserInfo, setTabItem, setTab, setCategory) => {\n    const distanceRef = ref(db, 'users/' + userId);\n    const day = new Date().toLocaleDateString().split('.').join('');\n    onValue(distanceRef, snapshot => {\n      const data = snapshot.val();\n      setUserInfo({\n        photo: data.user_info.profile_picture,\n        nick: data.user_info.username,\n        email: data.user_info.email\n      });\n      setTabItem([...addEmptyArrays(data.user_tasks ? data.user_tasks[day] : [])]);\n      setCategory(data.user_tasks ? data.user_tasks[day][0].title : '');\n      setTab(data.user_tasks ? data.user_tasks[day][0].title : '');\n    });\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref => {\n    let { ...params\n    } = _ref;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n        database.readUserData(userCredential.user.uid, params.setUserInfo, params.setTabItem, params.setTab, params.setCategory);\n        params.setLogin({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Authorization successfully'\n        });\n      } catch (Error) {\n        console.log(Error);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n        database.writeUserData(userCredential.user.uid, '', params.userInfo, params.tabItems);\n        params.setRegistration({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n          params.navigate('Profile.jsx');\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Registration successfully'\n        });\n      } catch (Error) {\n        console.log(Error);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // State\n  monitorAuthState: (setAuthorization, defaultPhoto, userInfo, setUserInfo, setUserId) => {\n    return onAuthStateChanged(auth, user => {\n      if (user) {\n        setAuthorization(true);\n        setUserId(user.uid);\n        uid = user.uid;\n        setUserInfo({ ...userInfo,\n          email: user.email\n        });\n      } else {\n        setAuthorization(false);\n        setUserId('');\n        uid = '';\n        setUserInfo({\n          photo: defaultPhoto,\n          nick: 'username',\n          email: ''\n        });\n      }\n    });\n  },\n  // Logout\n  logOut: (defaultItems, setTabItem, setTab, setCategory) => {\n    return signOut(auth).then(() => {\n      setTabItem([...defaultItems]);\n      setTab(defaultItems[0].title);\n      setCategory(defaultItems[0].title);\n    });\n  }\n};\nexport { authentication, database };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","signOut","getDatabase","onValue","ref","set","update","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","addEmptyArrays","data","obj","hasOwnProperty","database","writeUserData","userId","path","userInfo","tabItems","reference","day","Date","toLocaleDateString","split","join","dataObj","user_info","username","nick","email","profile_picture","photo","user_tasks","condition","writeNewDay","uid","console","log","readUserData","setUserInfo","setTabItem","setTab","setCategory","distanceRef","snapshot","val","title","authentication","loginEmailPassword","params","login","Password","userCredential","Email","user","setLogin","setTimeout","setAuthModal","createAuthInfoModal","modal","type","text","Error","code","registrationEmailPassword","registration","setRegistration","navigate","monitorAuthState","setAuthorization","defaultPhoto","setUserId","logOut","defaultItems","then"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, onValue, ref, set, update } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getDatabase(app)\r\n\r\nconst addEmptyArrays = data => {\r\n  if (data) {\r\n    for (const obj of data) {\r\n      if (!obj.hasOwnProperty('data')) obj.data = []\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return []\r\n}\r\n\r\n// database\r\nconst database = {\r\n  writeUserData: (userId, path, userInfo, tabItems) => {\r\n    const reference = ref(db, `users/${userId}/${path}`)\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    const dataObj = {\r\n      user_info: {\r\n        username: userInfo.nick,\r\n        email: userInfo.email,\r\n        profile_picture: userInfo.photo,\r\n      },\r\n      user_tasks: { [day]: tabItems },\r\n    }\r\n\r\n    if (userId) {\r\n      const condition = path ? dataObj[path] : dataObj\r\n\r\n      set(reference, { ...condition })\r\n    }\r\n  },\r\n  writeNewDay: (userId, tabItems) => {\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    const reference = ref(db, `users/${uid}/user_tasks/`)\r\n\r\n    console.log(uid)\r\n    return update(reference, { [day]: tabItems })\r\n  },\r\n  readUserData: (userId, setUserInfo, setTabItem, setTab, setCategory) => {\r\n    const distanceRef = ref(db, 'users/' + userId)\r\n    const day = new Date().toLocaleDateString().split('.').join('')\r\n\r\n    onValue(distanceRef, snapshot => {\r\n      const data = snapshot.val()\r\n      setUserInfo({\r\n        photo: data.user_info.profile_picture,\r\n        nick: data.user_info.username,\r\n        email: data.user_info.email,\r\n      })\r\n\r\n      setTabItem([...addEmptyArrays(data.user_tasks ? data.user_tasks[day] : [])])\r\n      setCategory(data.user_tasks ? data.user_tasks[day][0].title : '')\r\n      setTab(data.user_tasks ? data.user_tasks[day][0].title : '')\r\n    })\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        database.readUserData(\r\n          userCredential.user.uid,\r\n          params.setUserInfo,\r\n          params.setTabItem,\r\n          params.setTab,\r\n          params.setCategory,\r\n        )\r\n\r\n        params.setLogin({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Authorization successfully',\r\n        })\r\n      } catch (Error) {\r\n        console.log(Error)\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        database.writeUserData(\r\n          userCredential.user.uid,\r\n          '',\r\n          params.userInfo,\r\n          params.tabItems,\r\n        )\r\n\r\n        params.setRegistration({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n          params.navigate('Profile.jsx')\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Registration successfully',\r\n        })\r\n      } catch (Error) {\r\n        console.log(Error)\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // State\r\n  monitorAuthState: (\r\n    setAuthorization,\r\n    defaultPhoto,\r\n    userInfo,\r\n    setUserInfo,\r\n    setUserId,\r\n  ) => {\r\n    return onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setAuthorization(true)\r\n        setUserId(user.uid)\r\n        uid = user.uid\r\n        setUserInfo({ ...userInfo, email: user.email })\r\n      } else {\r\n        setAuthorization(false)\r\n        setUserId('')\r\n        uid = ''\r\n        setUserInfo({ photo: defaultPhoto, nick: 'username', email: '' })\r\n      }\r\n    })\r\n  },\r\n  // Logout\r\n  logOut: (defaultItems, setTabItem, setTab, setCategory) => {\r\n    return signOut(auth).then(() => {\r\n      setTabItem([...defaultItems])\r\n      setTab(defaultItems[0].title)\r\n      setCategory(defaultItems[0].title)\r\n    })\r\n  },\r\n}\r\n\r\nexport { authentication, database }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}