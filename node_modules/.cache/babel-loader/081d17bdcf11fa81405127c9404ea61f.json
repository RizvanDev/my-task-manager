{"ast":null,"code":"import _slicedToArray from\"C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';var useLocaleStorage=function useLocaleStorage(key,initialValue){var getValue=function getValue(){var storage=localStorage.getItem(key);return storage?JSON.parse(storage):initialValue;};var _useState=useState(getValue),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];localStorage.setItem(key,JSON.stringify(value));return[value,setValue];};export default useLocaleStorage;","map":{"version":3,"names":["useState","useLocaleStorage","key","initialValue","getValue","storage","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/hooks/useLocaleStorage.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\nconst useLocaleStorage = (key, initialValue) => {\r\n  const getValue = () => {\r\n    const storage = localStorage.getItem(key)\r\n\r\n    return storage ? JSON.parse(storage) : initialValue\r\n  }\r\n\r\n  const [value, setValue] = useState(getValue)\r\n\r\n  localStorage.setItem(key, JSON.stringify(value))\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default useLocaleStorage\r\n"],"mappings":"wIAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,GAAD,CAAMC,YAAN,CAAuB,CAC9C,GAAMC,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACrB,GAAMC,QAAO,CAAGC,YAAY,CAACC,OAAb,CAAqBL,GAArB,CAAhB,CAEA,MAAOG,QAAO,CAAGG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAH,CAAyBF,YAAvC,CACD,CAJD,CAMA,cAA0BH,QAAQ,CAACI,QAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eAEAL,YAAY,CAACM,OAAb,CAAqBV,GAArB,CAA0BM,IAAI,CAACK,SAAL,CAAeH,KAAf,CAA1B,EAEA,MAAO,CAACA,KAAD,CAAQC,QAAR,CAAP,CACD,CAZD,CAcA,cAAeV,iBAAf"},"metadata":{},"sourceType":"module"}