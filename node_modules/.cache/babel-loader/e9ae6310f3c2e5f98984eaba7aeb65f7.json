{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Pages\\\\main-page\\\\MainContent\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { Context } from '../../../../context';\nimport MyTitle from '../../../../Components/MyTitle/MyTitle';\nimport CustomTooltip from './CustomTooltip';\nimport './chart.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(Context);\n  const data = [{\n    day: 'Mon',\n    completed: 200\n  }, {\n    day: 'Tue',\n    completed: 7\n  }, {\n    day: 'Wed',\n    completed: 13\n  }, {\n    day: 'Thu',\n    completed: 4\n  }, {\n    day: 'Fri',\n    completed: 5\n  }, {\n    day: 'Sat',\n    completed: 15\n  }, {\n    day: 'Sun',\n    completed: 9\n  }];\n  const chartNotify = {\n    ResponsiveContainer: {\n      width: '100%',\n      height: 200,\n      ariaLabel: 'Progress chart'\n    },\n    CartesianGrid: {\n      strokeDasharray: 1,\n      stroke: '#6669'\n    },\n    LineChart: {\n      data: data,\n      margin: {\n        top: 10,\n        right: 12\n      }\n    },\n    XAxis: {\n      dataKey: 'day',\n      tickSize: 0,\n      axisLine: false,\n      tickMargin: 15,\n      stroke: darkMode ? '#e5e5e5' : '#283846'\n    },\n    YAxis: {\n      width: 34,\n      tickSize: 0,\n      axisLine: false,\n      tickMargin: 10,\n      stroke: darkMode ? '#e5e5e5' : '#282846'\n    },\n    Tooltip: {\n      content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this),\n      cursor: {\n        stroke: darkMode ? 'lightgreen' : 'green',\n        strokeWidth: 1\n      },\n      active: true\n    },\n    Line: {\n      type: 'natural',\n      dataKey: 'completed',\n      strokeWidth: 3,\n      activeDot: {\n        strokeWidth: 0,\n        r: 10\n      },\n      isAnimationActive: true,\n      stroke: '#29A19C'\n    }\n  };\n\n  if (window.matchMedia('(max-width: 1600px)').matches) {\n    chartNotify.ResponsiveContainer.height = 170;\n    chartNotify.Line.strokeWidth = 2;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? 'chart darkMode' : 'chart',\n    children: [/*#__PURE__*/_jsxDEV(MyTitle, {\n      fontSize: \"18px\",\n      lineHeight: \"25px\",\n      letterSpacing: \"0.02em\",\n      margin: \"0 0 15px 10px\",\n      children: \"Progress chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, { ...chartNotify.ResponsiveContainer,\n      children: /*#__PURE__*/_jsxDEV(LineChart, { ...chartNotify.LineChart,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, { ...chartNotify.CartesianGrid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, { ...chartNotify.XAxis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, { ...chartNotify.YAxis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, { ...chartNotify.Tooltip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, { ...chartNotify.Line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useContext","ResponsiveContainer","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Context","MyTitle","CustomTooltip","Chart","darkMode","data","day","completed","chartNotify","width","height","ariaLabel","strokeDasharray","stroke","margin","top","right","dataKey","tickSize","axisLine","tickMargin","content","cursor","strokeWidth","active","type","activeDot","r","isAnimationActive","window","matchMedia","matches"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Pages/main-page/MainContent/Chart/Chart.jsx"],"sourcesContent":["import { useContext } from 'react'\r\nimport {\r\n  ResponsiveContainer,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from 'recharts'\r\nimport { Context } from '../../../../context'\r\nimport MyTitle from '../../../../Components/MyTitle/MyTitle'\r\nimport CustomTooltip from './CustomTooltip'\r\nimport './chart.scss'\r\n\r\nconst Chart = () => {\r\n  const { darkMode } = useContext(Context)\r\n\r\n  const data = [\r\n    { day: 'Mon', completed: 200 },\r\n    { day: 'Tue', completed: 7 },\r\n    { day: 'Wed', completed: 13 },\r\n    { day: 'Thu', completed: 4 },\r\n    { day: 'Fri', completed: 5 },\r\n    { day: 'Sat', completed: 15 },\r\n    { day: 'Sun', completed: 9 },\r\n  ]\r\n\r\n  const chartNotify = {\r\n    ResponsiveContainer: { width: '100%', height: 200, ariaLabel: 'Progress chart' },\r\n    CartesianGrid: { strokeDasharray: 1, stroke: '#6669' },\r\n    LineChart: { data: data, margin: { top: 10, right: 12 } },\r\n    XAxis: {\r\n      dataKey: 'day',\r\n      tickSize: 0,\r\n      axisLine: false,\r\n      tickMargin: 15,\r\n      stroke: darkMode ? '#e5e5e5' : '#283846',\r\n    },\r\n    YAxis: {\r\n      width: 34,\r\n      tickSize: 0,\r\n      axisLine: false,\r\n      tickMargin: 10,\r\n      stroke: darkMode ? '#e5e5e5' : '#282846',\r\n    },\r\n    Tooltip: {\r\n      content: <CustomTooltip />,\r\n      cursor: { stroke: darkMode ? 'lightgreen' : 'green', strokeWidth: 1 },\r\n      active: true,\r\n    },\r\n    Line: {\r\n      type: 'natural',\r\n      dataKey: 'completed',\r\n      strokeWidth: 3,\r\n      activeDot: {\r\n        strokeWidth: 0,\r\n        r: 10,\r\n      },\r\n      isAnimationActive: true,\r\n      stroke: '#29A19C',\r\n    },\r\n  }\r\n\r\n  if (window.matchMedia('(max-width: 1600px)').matches) {\r\n    chartNotify.ResponsiveContainer.height = 170\r\n    chartNotify.Line.strokeWidth = 2\r\n  }\r\n\r\n  return (\r\n    <div className={darkMode ? 'chart darkMode' : 'chart'}>\r\n      <MyTitle fontSize='18px' lineHeight='25px' letterSpacing='0.02em' margin='0 0 15px 10px'>\r\n        Progress chart\r\n      </MyTitle>\r\n      <ResponsiveContainer {...chartNotify.ResponsiveContainer}>\r\n        <LineChart {...chartNotify.LineChart}>\r\n          <CartesianGrid {...chartNotify.CartesianGrid} />\r\n          <XAxis {...chartNotify.XAxis} />\r\n          <YAxis {...chartNotify.YAxis} />\r\n          <Tooltip {...chartNotify.Tooltip} />\r\n          <Line {...chartNotify.Line} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}