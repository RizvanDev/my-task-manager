{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut } from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\nconst dbUrl = 'https://task-manager-19b7a-default-rtdb.firebaseio.com/users.json';\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst database = {\n  writeUserData: async (userInfo, tabItems) => {\n    const promise = await fetch(`${dbUrl}`, {\n      method: 'Post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userInfo.email,\n        nickName: userInfo.nick,\n        profilePhoto: userInfo.photo,\n        userData: tabItems\n      })\n    });\n    console.log(promise.json().json());\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref => {\n    let { ...params\n    } = _ref;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n        params.setLogin({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Authorization successfully'\n        });\n      } catch (Error) {\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.registration.Password) {\n      try {\n        await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n        params.setRegistration({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n          params.navigate('Profile.jsx');\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Registration successfully'\n        });\n      } catch (Error) {\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // State\n  monitorAuthState: (setAuthorization, defaultPhoto, setUserInfo, setUserId) => {\n    return onAuthStateChanged(auth, user => {\n      if (user) {\n        setAuthorization(true);\n        setUserId(user.uid);\n      } else {\n        setAuthorization(false);\n        setUserInfo({\n          photo: defaultPhoto,\n          nick: 'username',\n          email: ''\n        });\n        setUserId('');\n      }\n    });\n  },\n  // Logout\n  logOut: async () => await signOut(auth)\n};\nexport { authentication, database };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","signOut","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","dbUrl","app","auth","database","writeUserData","userInfo","tabItems","promise","fetch","method","headers","body","JSON","stringify","email","nickName","nick","profilePhoto","photo","userData","console","log","json","authentication","loginEmailPassword","params","login","Password","userCredential","Email","setLogin","setTimeout","setAuthModal","createAuthInfoModal","modal","type","text","Error","code","registrationEmailPassword","registration","setRegistration","navigate","monitorAuthState","setAuthorization","defaultPhoto","setUserInfo","setUserId","user","uid","logOut"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n}\r\n\r\nconst dbUrl = 'https://task-manager-19b7a-default-rtdb.firebaseio.com/users.json'\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\n\r\nconst database = {\r\n  writeUserData: async (userInfo, tabItems) => {\r\n    const promise = await fetch(`${dbUrl}`, {\r\n      method: 'Post',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: userInfo.email,\r\n        nickName: userInfo.nick,\r\n        profilePhoto: userInfo.photo,\r\n        userData: tabItems,\r\n      }),\r\n    })\r\n    console.log(promise.json().json())\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        params.setLogin({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Authorization successfully',\r\n        })\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        params.setRegistration({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n          params.navigate('Profile.jsx')\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Registration successfully',\r\n        })\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // State\r\n  monitorAuthState: (setAuthorization, defaultPhoto, setUserInfo, setUserId) => {\r\n    return onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setAuthorization(true)\r\n        setUserId(user.uid)\r\n      } else {\r\n        setAuthorization(false)\r\n        setUserInfo({ photo: defaultPhoto, nick: 'username', email: '' })\r\n        setUserId('')\r\n      }\r\n    })\r\n  },\r\n  // Logout\r\n  logOut: async () => await signOut(auth),\r\n}\r\n\r\nexport { authentication, database }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}