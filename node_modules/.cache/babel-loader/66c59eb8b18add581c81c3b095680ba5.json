{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getDatabase, ref, set } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst database = {\n  writeUserData: (userId, email, nick, tabItems) => {\n    const db = getDatabase();\n    const reference = ref(db, 'users/' + userId);\n    set(reference, {\n      username: userInfo.nick,\n      email: userInfo.email,\n      profile_picture: userInfo.photo,\n      data: tabItems\n    });\n  }\n}; // Authentication methods\n\nconst authentication = {\n  // Login\n  loginEmailPassword: async _ref => {\n    let { ...params\n    } = _ref;\n\n    if (params.login.Password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, params.login.Email, params.login.Password);\n        params.setLogin({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Authorization successfully'\n        });\n      } catch (Error) {\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // Registration\n  registrationEmailPassword: async _ref2 => {\n    let { ...params\n    } = _ref2;\n\n    if (params.registration.Password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, params.registration.Email, params.registration.Password);\n        database.writeUserData(userCredential.user.uid, params.tabItems);\n        params.setRegistration({\n          Email: '',\n          Password: ''\n        });\n        setTimeout(() => {\n          params.setAuthModal(false);\n          params.navigate('Profile.jsx');\n        }, 1000);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Success',\n          text: 'Registration successfully'\n        });\n      } catch (Error) {\n        console.log(Error);\n        params.createAuthInfoModal({\n          modal: true,\n          type: 'Error',\n          text: Error.code\n        });\n      }\n    }\n  },\n  // State\n  monitorAuthState: (setAuthorization, defaultPhoto, setUserInfo, userId, setUserId) => {\n    return onAuthStateChanged(auth, user => {\n      if (user) {\n        setAuthorization(true);\n        setUserId(user.uid);\n        setUserInfo({ ...userInfo,\n          email: user.email\n        });\n      } else {\n        setAuthorization(false);\n        setUserInfo({\n          photo: defaultPhoto,\n          nick: 'username',\n          email: ''\n        });\n        setUserId('');\n      }\n    });\n  },\n  // Logout\n  logOut: async () => await signOut(auth)\n};\nexport { authentication, database };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","signOut","getDatabase","ref","set","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","database","writeUserData","userId","email","nick","tabItems","db","reference","username","userInfo","profile_picture","photo","data","authentication","loginEmailPassword","params","login","Password","userCredential","Email","setLogin","setTimeout","setAuthModal","createAuthInfoModal","modal","type","text","Error","code","registrationEmailPassword","registration","user","uid","setRegistration","navigate","console","log","monitorAuthState","setAuthorization","defaultPhoto","setUserInfo","setUserId","logOut"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/firebase/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getDatabase, ref, set } from 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\n\r\nconst database = {\r\n  writeUserData: (userId, email, nick, tabItems) => {\r\n    const db = getDatabase()\r\n    const reference = ref(db, 'users/' + userId)\r\n\r\n    set(reference, {\r\n      username: userInfo.nick,\r\n      email: userInfo.email,\r\n      profile_picture: userInfo.photo,\r\n      data: tabItems,\r\n    })\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async ({ ...params }) => {\r\n    if (params.login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          params.login.Email,\r\n          params.login.Password,\r\n        )\r\n\r\n        params.setLogin({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Authorization successfully',\r\n        })\r\n      } catch (Error) {\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async ({ ...params }) => {\r\n    if (params.registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          params.registration.Email,\r\n          params.registration.Password,\r\n        )\r\n\r\n        database.writeUserData(\r\n          userCredential.user.uid,\r\n\r\n          params.tabItems,\r\n        )\r\n\r\n        params.setRegistration({ Email: '', Password: '' })\r\n\r\n        setTimeout(() => {\r\n          params.setAuthModal(false)\r\n          params.navigate('Profile.jsx')\r\n        }, 1000)\r\n\r\n        params.createAuthInfoModal({\r\n          modal: true,\r\n          type: 'Success',\r\n          text: 'Registration successfully',\r\n        })\r\n      } catch (Error) {\r\n        console.log(Error)\r\n        params.createAuthInfoModal({ modal: true, type: 'Error', text: Error.code })\r\n      }\r\n    }\r\n  },\r\n  // State\r\n  monitorAuthState: (setAuthorization, defaultPhoto, setUserInfo, userId, setUserId) => {\r\n    return onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setAuthorization(true)\r\n        setUserId(user.uid)\r\n        setUserInfo({ ...userInfo, email: user.email })\r\n      } else {\r\n        setAuthorization(false)\r\n        setUserInfo({ photo: defaultPhoto, nick: 'username', email: '' })\r\n        setUserId('')\r\n      }\r\n    })\r\n  },\r\n  // Logout\r\n  logOut: async () => await signOut(auth),\r\n}\r\n\r\nexport { authentication, database }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}