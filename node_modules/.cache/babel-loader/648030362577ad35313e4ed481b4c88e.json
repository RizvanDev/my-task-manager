{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Pages\\\\main-page\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\TasksContainer.jsx\";\nimport { createRef } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle';\nimport Task from '../Task/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksContainer = _ref => {\n  let {\n    blockTitleStyles,\n    darkMode,\n    tabTitle,\n    tasksData,\n    tasksMethods,\n    timeLine\n  } = _ref;\n  const typeCondition = props.type === 'Active';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeCondition ? 'activeTasks__block' : 'completedTasks__block',\n    children: [/*#__PURE__*/_jsxDEV(MyTitle, { ...props.blockTitleStyles,\n      children: [props.type, \" tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      className: typeCondition ? 'activeTasks__container' : 'completedTasks__container',\n      children: props.tasksData.filter(task => typeCondition ? !task.completed : task.completed).map(task => {\n        const nodeRef = /*#__PURE__*/createRef(null);\n        return /*#__PURE__*/_jsxDEV(CSSTransition, {\n          nodeRef: nodeRef,\n          timeout: 500,\n          classNames: \"task\",\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            time: task.time,\n            currentTask: task,\n            tabTitle: props.tabTitle,\n            completed: task.completed,\n            deleteTask: props.tasksMethods.deleteTask,\n            checkTask: props.tasksMethods.checkTask,\n            editTask: props.tasksMethods.editTask,\n            timeLine: props.timeLine,\n            darkMode: props.darkMode,\n            ref: nodeRef,\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, task.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TasksContainer;\nexport default TasksContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksContainer\");","map":{"version":3,"names":["createRef","TransitionGroup","CSSTransition","MyTitle","Task","TasksContainer","blockTitleStyles","darkMode","tabTitle","tasksData","tasksMethods","timeLine","typeCondition","props","type","filter","task","completed","map","nodeRef","time","deleteTask","checkTask","editTask"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Pages/main-page/MainContent/Tasks/CategoriesTab/TasksContainer.jsx"],"sourcesContent":["import { createRef } from 'react'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle'\r\nimport Task from '../Task/Task'\r\n\r\nconst TasksContainer = ({\r\n  blockTitleStyles,\r\n  darkMode,\r\n  tabTitle,\r\n  tasksData,\r\n  tasksMethods,\r\n  timeLine,\r\n}) => {\r\n  const typeCondition = props.type === 'Active'\r\n\r\n  return (\r\n    <div className={typeCondition ? 'activeTasks__block' : 'completedTasks__block'}>\r\n      <MyTitle {...props.blockTitleStyles}>{props.type} tasks</MyTitle>\r\n\r\n      <TransitionGroup\r\n        className={\r\n          typeCondition ? 'activeTasks__container' : 'completedTasks__container'\r\n        }>\r\n        {props.tasksData\r\n          .filter(task => (typeCondition ? !task.completed : task.completed))\r\n          .map(task => {\r\n            const nodeRef = createRef(null)\r\n            return (\r\n              <CSSTransition\r\n                key={task.time}\r\n                nodeRef={nodeRef}\r\n                timeout={500}\r\n                classNames='task'>\r\n                <Task\r\n                  time={task.time}\r\n                  currentTask={task}\r\n                  tabTitle={props.tabTitle}\r\n                  completed={task.completed}\r\n                  deleteTask={props.tasksMethods.deleteTask}\r\n                  checkTask={props.tasksMethods.checkTask}\r\n                  editTask={props.tasksMethods.editTask}\r\n                  timeLine={props.timeLine}\r\n                  darkMode={props.darkMode}\r\n                  ref={nodeRef}>\r\n                  {task.task}\r\n                </Task>\r\n              </CSSTransition>\r\n            )\r\n          })}\r\n      </TransitionGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TasksContainer\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,cAAc,GAAG,QAOjB;EAAA,IAPkB;IACtBC,gBADsB;IAEtBC,QAFsB;IAGtBC,QAHsB;IAItBC,SAJsB;IAKtBC,YALsB;IAMtBC;EANsB,CAOlB;EACJ,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAN,KAAe,QAArC;EAEA,oBACE;IAAK,SAAS,EAAEF,aAAa,GAAG,oBAAH,GAA0B,uBAAvD;IAAA,wBACE,QAAC,OAAD,OAAaC,KAAK,CAACP,gBAAnB;MAAA,WAAsCO,KAAK,CAACC,IAA5C;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,eAAD;MACE,SAAS,EACPF,aAAa,GAAG,wBAAH,GAA8B,2BAF/C;MAAA,UAIGC,KAAK,CAACJ,SAAN,CACEM,MADF,CACSC,IAAI,IAAKJ,aAAa,GAAG,CAACI,IAAI,CAACC,SAAT,GAAqBD,IAAI,CAACC,SADzD,EAEEC,GAFF,CAEMF,IAAI,IAAI;QACX,MAAMG,OAAO,gBAAGnB,SAAS,CAAC,IAAD,CAAzB;QACA,oBACE,QAAC,aAAD;UAEE,OAAO,EAAEmB,OAFX;UAGE,OAAO,EAAE,GAHX;UAIE,UAAU,EAAC,MAJb;UAAA,uBAKE,QAAC,IAAD;YACE,IAAI,EAAEH,IAAI,CAACI,IADb;YAEE,WAAW,EAAEJ,IAFf;YAGE,QAAQ,EAAEH,KAAK,CAACL,QAHlB;YAIE,SAAS,EAAEQ,IAAI,CAACC,SAJlB;YAKE,UAAU,EAAEJ,KAAK,CAACH,YAAN,CAAmBW,UALjC;YAME,SAAS,EAAER,KAAK,CAACH,YAAN,CAAmBY,SANhC;YAOE,QAAQ,EAAET,KAAK,CAACH,YAAN,CAAmBa,QAP/B;YAQE,QAAQ,EAAEV,KAAK,CAACF,QARlB;YASE,QAAQ,EAAEE,KAAK,CAACN,QATlB;YAUE,GAAG,EAAEY,OAVP;YAAA,UAWGH,IAAI,CAACA;UAXR;YAAA;YAAA;YAAA;UAAA;QALF,GACOA,IAAI,CAACI,IADZ;UAAA;UAAA;UAAA;QAAA,QADF;MAqBD,CAzBF;IAJH;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD,CA/CD;;KAAMf,c;AAiDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}