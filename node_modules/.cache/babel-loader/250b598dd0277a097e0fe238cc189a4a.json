{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DarkFlyingCat\\\\Desktop\\\\dev\\\\my-task-manager\\\\src\\\\Pages\\\\main-page\\\\MainContent\\\\Tasks\\\\CategoriesTab\\\\CategoriesTab.jsx\",\n    _s = $RefreshSig$();\n\nimport { createRef, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Context } from '../../../../../context';\nimport { database } from '../../../../../firebase/firebaseConfig';\nimport useValue from '../../../../../hooks/useValue';\nimport CategoryHeader from './CategoryHeader';\nimport ActiveTasks from './ActiveTasks';\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig';\nimport DeleteModal from '../../../modalWindows/DeletModal/DeleteModal';\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle';\nimport Task from '../Task/Task';\nimport './categoriesTab.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoriesTab = props => {\n  _s();\n\n  const [modal, setModal] = useValue(false);\n  const {\n    darkMode,\n    tab,\n    setTab,\n    setCategory,\n    tabItems,\n    setTabItem,\n    editTask,\n    checkTask,\n    deleteTask,\n    setSortType,\n    timeLine,\n    userInfo,\n    calendarDate,\n    modals,\n    openModals\n  } = useContext(Context);\n\n  const removeCategory = () => {\n    const checkingTabs = tabItems.tasks[props.idx - 1] || tabItems.tasks[1];\n    setTab(tabItems.tasks.length > 1 && checkingTabs.title);\n    setCategory(tabItems.tasks.length > 1 && checkingTabs.title);\n    setTabItem({ ...tabItems,\n      tasks: tabItems.tasks.filter(e => e.title !== props.category.title)\n    });\n    return database.writeUserTasksData(userInfo.uid, calendarDate.toLocaleDateString().split('.').join(''), { ...tabItems,\n      tasks: tabItems.tasks.filter(e => e.title !== props.category.title)\n    });\n  };\n\n  const askDeleteCategory = () => openModals({ ...modals,\n    deleteCategoryModal: true\n  });\n\n  const categoryTitleStyles = {\n    fontSize: '18px',\n    lineHeight: '25px',\n    letterSpacing: '0.02em'\n  };\n\n  if (window.matchMedia('(max-width: 1400px)').matches) {\n    categoryTitleStyles.fontSize = '16px';\n    categoryTitleStyles.lineHeight = '20px';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tab === props.category.title ? 'category__container active' : 'category__container',\n    children: [/*#__PURE__*/_jsxDEV(CategoryHeader, {\n      categoryTitle: props.category.title,\n      modal: modal,\n      setModal: setModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoriesConfig, {\n      modal: modal,\n      timeLine: timeLine,\n      category: props.category,\n      setSortType: setSortType,\n      askDeleteCategory: askDeleteCategory,\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteModal, {\n      removeCategory: removeCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActiveTasks, {\n      MyTitle: MyTitle,\n      TransitionGroup: TransitionGroup,\n      CSSTransition: CSSTransition,\n      Task: Task,\n      categoryTitleStyles: categoryTitleStyles,\n      darkMode: darkMode,\n      editTask: editTask,\n      checkTask: checkTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), !timeLine.future && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category__completedTasks\",\n      children: [/*#__PURE__*/_jsxDEV(MyTitle, { ...categoryTitleStyles,\n        children: \"Completed tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        className: darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer',\n        children: props.category.data.filter(task => task.completed).map(completedTask => {\n          const nodeRef = /*#__PURE__*/createRef(null);\n          return /*#__PURE__*/_jsxDEV(CSSTransition, {\n            nodeRef: nodeRef,\n            timeout: 500,\n            classNames: \"task\",\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              time: completedTask.time,\n              currentTask: completedTask,\n              tabTitle: props.category.title,\n              deleteTask: deleteTask,\n              completed: completedTask.completed,\n              checkTask: checkTask,\n              timeLine: timeLine,\n              ref: nodeRef,\n              children: completedTask.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)\n          }, completedTask.time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoriesTab, \"SH0rjHtMPFIvPGmdnFpejWJ5XDU=\", false, function () {\n  return [useValue];\n});\n\n_c = CategoriesTab;\nexport default CategoriesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesTab\");","map":{"version":3,"names":["createRef","useContext","CSSTransition","TransitionGroup","Context","database","useValue","CategoryHeader","ActiveTasks","CategoriesConfig","DeleteModal","MyTitle","Task","CategoriesTab","props","modal","setModal","darkMode","tab","setTab","setCategory","tabItems","setTabItem","editTask","checkTask","deleteTask","setSortType","timeLine","userInfo","calendarDate","modals","openModals","removeCategory","checkingTabs","tasks","idx","length","title","filter","e","category","writeUserTasksData","uid","toLocaleDateString","split","join","askDeleteCategory","deleteCategoryModal","categoryTitleStyles","fontSize","lineHeight","letterSpacing","window","matchMedia","matches","future","data","task","completed","map","completedTask","nodeRef","time"],"sources":["C:/Users/DarkFlyingCat/Desktop/dev/my-task-manager/src/Pages/main-page/MainContent/Tasks/CategoriesTab/CategoriesTab.jsx"],"sourcesContent":["import { createRef, useContext } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Context } from '../../../../../context'\r\nimport { database } from '../../../../../firebase/firebaseConfig'\r\nimport useValue from '../../../../../hooks/useValue'\r\nimport CategoryHeader from './CategoryHeader'\r\nimport ActiveTasks from './ActiveTasks'\r\nimport CategoriesConfig from '../CategoriesConfig/CategoriesConfig'\r\nimport DeleteModal from '../../../modalWindows/DeletModal/DeleteModal'\r\nimport MyTitle from '../../../../../Components/MyTitle/MyTitle'\r\nimport Task from '../Task/Task'\r\nimport './categoriesTab.scss'\r\n\r\nconst CategoriesTab = props => {\r\n  const [modal, setModal] = useValue(false)\r\n\r\n  const {\r\n    darkMode,\r\n    tab,\r\n    setTab,\r\n    setCategory,\r\n    tabItems,\r\n    setTabItem,\r\n    editTask,\r\n    checkTask,\r\n    deleteTask,\r\n    setSortType,\r\n    timeLine,\r\n    userInfo,\r\n    calendarDate,\r\n    modals,\r\n    openModals,\r\n  } = useContext(Context)\r\n\r\n  const removeCategory = () => {\r\n    const checkingTabs = tabItems.tasks[props.idx - 1] || tabItems.tasks[1]\r\n\r\n    setTab(tabItems.tasks.length > 1 && checkingTabs.title)\r\n    setCategory(tabItems.tasks.length > 1 && checkingTabs.title)\r\n\r\n    setTabItem({\r\n      ...tabItems,\r\n      tasks: tabItems.tasks.filter(e => e.title !== props.category.title),\r\n    })\r\n\r\n    return database.writeUserTasksData(\r\n      userInfo.uid,\r\n      calendarDate.toLocaleDateString().split('.').join(''),\r\n      {\r\n        ...tabItems,\r\n        tasks: tabItems.tasks.filter(e => e.title !== props.category.title),\r\n      },\r\n    )\r\n  }\r\n\r\n  const askDeleteCategory = () => openModals({ ...modals, deleteCategoryModal: true })\r\n\r\n  const categoryTitleStyles = {\r\n    fontSize: '18px',\r\n    lineHeight: '25px',\r\n    letterSpacing: '0.02em',\r\n  }\r\n\r\n  if (window.matchMedia('(max-width: 1400px)').matches) {\r\n    categoryTitleStyles.fontSize = '16px'\r\n    categoryTitleStyles.lineHeight = '20px'\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        tab === props.category.title\r\n          ? 'category__container active'\r\n          : 'category__container'\r\n      }>\r\n      <CategoryHeader\r\n        categoryTitle={props.category.title}\r\n        modal={modal}\r\n        setModal={setModal}\r\n      />\r\n\r\n      <CategoriesConfig\r\n        modal={modal}\r\n        timeLine={timeLine}\r\n        category={props.category}\r\n        setSortType={setSortType}\r\n        askDeleteCategory={askDeleteCategory}\r\n        darkMode={darkMode}\r\n      />\r\n\r\n      <DeleteModal removeCategory={removeCategory} />\r\n\r\n      <ActiveTasks\r\n        MyTitle={MyTitle}\r\n        TransitionGroup={TransitionGroup}\r\n        CSSTransition={CSSTransition}\r\n        Task={Task}\r\n        categoryTitleStyles={categoryTitleStyles}\r\n        darkMode={darkMode}\r\n        editTask={editTask}\r\n        checkTask={checkTask}\r\n        deleteTask={deleteTask}\r\n      />\r\n\r\n      {!timeLine.future && (\r\n        <div className='category__completedTasks'>\r\n          <MyTitle {...categoryTitleStyles}>Completed tasks</MyTitle>\r\n          <TransitionGroup\r\n            className={\r\n              darkMode ? 'completedTasksContainer darkMode' : 'completedTasksContainer'\r\n            }>\r\n            {props.category.data\r\n              .filter(task => task.completed)\r\n              .map(completedTask => {\r\n                const nodeRef = createRef(null)\r\n                return (\r\n                  <CSSTransition\r\n                    key={completedTask.time}\r\n                    nodeRef={nodeRef}\r\n                    timeout={500}\r\n                    classNames='task'>\r\n                    <Task\r\n                      time={completedTask.time}\r\n                      currentTask={completedTask}\r\n                      tabTitle={props.category.title}\r\n                      deleteTask={deleteTask}\r\n                      completed={completedTask.completed}\r\n                      checkTask={checkTask}\r\n                      timeLine={timeLine}\r\n                      ref={nodeRef}>\r\n                      {completedTask.task}\r\n                    </Task>\r\n                  </CSSTransition>\r\n                )\r\n              })}\r\n          </TransitionGroup>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesTab\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}