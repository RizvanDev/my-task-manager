[{"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\index.js":"1","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\hooks\\useValue.js":"2","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\hoc\\withApp.jsx":"3","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\hooks\\useLocaleStorage.js":"4","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\context.js":"5","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\App\\App.jsx":"6","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\MyModal\\MyModal.jsx":"7","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\MainBtn\\MainBtn.jsx":"8","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\Input\\Input.jsx":"9","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\LogOut\\LogOut.jsx":"10","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\Select\\Select.jsx":"11","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\MyTitle\\MyTitle.jsx":"12","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\Main.jsx":"13","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\profile-page\\Profile.jsx":"14","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\MainContent.jsx":"15","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Authorization\\Authorization.jsx":"16","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Calendar\\Calendar.jsx":"17","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\TaskModal\\TaskModal.jsx":"18","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\MainTop\\Main.top.jsx":"19","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\DateContainer\\DateContainer.jsx":"20","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\Tasks.jsx":"21","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\DateContainer\\Time.jsx":"22","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\MainTop\\UserModal\\UserModal.jsx":"23","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\CategoriesTab\\CategoriesTab.jsx":"24","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\MainTop\\UserMenu\\UserMenu.jsx":"25","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\CategoriesConfig\\CategoriesConfig.jsx":"26","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\Task\\Task.jsx":"27","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\InfoAuthModal\\InfoAuthModal.jsx":"28","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\firebase\\firebaseConfig.js":"29","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\Layout.jsx":"30","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\AsideBar.jsx":"31","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\CategoryList\\CategoryList.jsx":"32","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\Info\\Info.jsx":"33","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\Logo\\Logo.jsx":"34","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\ListItem\\ListItem.jsx":"35","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\DateContainer\\DateButton.jsx":"36","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Statistics\\Statistics.jsx":"37","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Statistics\\StatisticsItem.jsx":"38","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\CategoriesTab\\CategoryHeader.jsx":"39","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\CategoriesTab\\TasksContainer.jsx":"40","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Authorization\\LoginForm.jsx":"41","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Authorization\\RegistrationForm.jsx":"42","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\CategoryList\\AddCategory\\AddCategory.jsx":"43","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\CategoryList\\AddCategory\\InputContainer.jsx":"44","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\DeleteCategoryModal\\DeleteCategoryModal.jsx":"45"},{"size":353,"mtime":1671358482225,"results":"46","hashOfConfig":"47"},{"size":246,"mtime":1668124585557,"results":"48","hashOfConfig":"47"},{"size":8227,"mtime":1677975730777,"results":"49","hashOfConfig":"47"},{"size":399,"mtime":1676537939308,"results":"50","hashOfConfig":"47"},{"size":75,"mtime":1668792718818,"results":"51","hashOfConfig":"47"},{"size":561,"mtime":1676354102097,"results":"52","hashOfConfig":"47"},{"size":396,"mtime":1676168382949,"results":"53","hashOfConfig":"47"},{"size":363,"mtime":1676914671404,"results":"54","hashOfConfig":"47"},{"size":256,"mtime":1676172059464,"results":"55","hashOfConfig":"47"},{"size":1943,"mtime":1677065982482,"results":"56","hashOfConfig":"47"},{"size":330,"mtime":1677949003338,"results":"57","hashOfConfig":"47"},{"size":197,"mtime":1676354059391,"results":"58","hashOfConfig":"47"},{"size":911,"mtime":1676350497994,"results":"59","hashOfConfig":"47"},{"size":2547,"mtime":1676843422746,"results":"60","hashOfConfig":"47"},{"size":417,"mtime":1676350540869,"results":"61","hashOfConfig":"47"},{"size":2317,"mtime":1676750601554,"results":"62","hashOfConfig":"47"},{"size":1050,"mtime":1676532881185,"results":"63","hashOfConfig":"47"},{"size":2686,"mtime":1677948981574,"results":"64","hashOfConfig":"47"},{"size":5279,"mtime":1677949547092,"results":"65","hashOfConfig":"47"},{"size":1150,"mtime":1676577650016,"results":"66","hashOfConfig":"47"},{"size":651,"mtime":1677948750933,"results":"67","hashOfConfig":"47"},{"size":1566,"mtime":1676537770777,"results":"68","hashOfConfig":"47"},{"size":7842,"mtime":1677140904534,"results":"69","hashOfConfig":"47"},{"size":2491,"mtime":1677950252314,"results":"70","hashOfConfig":"47"},{"size":945,"mtime":1677068787497,"results":"71","hashOfConfig":"47"},{"size":1369,"mtime":1677069204479,"results":"72","hashOfConfig":"47"},{"size":5869,"mtime":1677961502047,"results":"73","hashOfConfig":"47"},{"size":570,"mtime":1676351891031,"results":"74","hashOfConfig":"47"},{"size":9780,"mtime":1677972544092,"results":"75","hashOfConfig":"47"},{"size":407,"mtime":1676353825778,"results":"76","hashOfConfig":"47"},{"size":1704,"mtime":1677157416256,"results":"77","hashOfConfig":"47"},{"size":1525,"mtime":1677948675512,"results":"78","hashOfConfig":"47"},{"size":1711,"mtime":1676353675045,"results":"79","hashOfConfig":"47"},{"size":471,"mtime":1677586382893,"results":"80","hashOfConfig":"47"},{"size":778,"mtime":1677963785441,"results":"81","hashOfConfig":"47"},{"size":1673,"mtime":1676467555840,"results":"82","hashOfConfig":"47"},{"size":2453,"mtime":1677964466001,"results":"83","hashOfConfig":"47"},{"size":643,"mtime":1676537693933,"results":"84","hashOfConfig":"47"},{"size":501,"mtime":1676466439200,"results":"85","hashOfConfig":"47"},{"size":1718,"mtime":1677961592693,"results":"86","hashOfConfig":"47"},{"size":1641,"mtime":1676752168615,"results":"87","hashOfConfig":"47"},{"size":1925,"mtime":1676837940661,"results":"88","hashOfConfig":"47"},{"size":3656,"mtime":1677949995573,"results":"89","hashOfConfig":"47"},{"size":1151,"mtime":1677156267924,"results":"90","hashOfConfig":"47"},{"size":1135,"mtime":1677070064009,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ic4zvz",{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\index.js",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\hooks\\useValue.js",[],[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\hoc\\withApp.jsx",["235","236"],[],"import { useEffect } from 'react'\r\nimport { Context } from '../context'\r\nimport { database } from '../firebase/firebaseConfig'\r\nimport useValue from '../hooks/useValue'\r\nimport useLocaleStorage from '../hooks/useLocaleStorage'\r\nimport defaultPhoto from '../assets/img/default-profile-picture.jpg'\r\n\r\nconst withApp = Component => {\r\n  return () => {\r\n    // dark mode\r\n    const [darkMode, setDarkMode] = useLocaleStorage('darkMode', false)\r\n    // side menu viewport < 1280\r\n    const [sideMenu, openSideMenu] = useValue(false)\r\n    // container for adding categories\r\n    const [containerAddCategory, showContainerAddCategory] = useValue(false)\r\n    // modal windows\r\n    const [modals, openModals] = useValue({\r\n      authModal: false,\r\n      taskModal: false,\r\n      calendarModal: false,\r\n      statisticsModal: false,\r\n      deleteCategoryModal: false,\r\n    })\r\n    const [authInfoModal, createAuthInfoModal] = useValue({\r\n      show: false,\r\n      type: '',\r\n      text: '',\r\n    })\r\n    // date\r\n    const [calendarDate, setCalendarDate] = useValue(new Date())\r\n    const [timeLine, setTimeLine] = useValue({ past: false, future: false })\r\n    // user information\r\n    const [userInfo, setUserInfo] = useLocaleStorage('userInfo', {\r\n      photo: defaultPhoto,\r\n      nick: 'username',\r\n      email: '',\r\n      uid: '',\r\n    })\r\n    // data\r\n    const [tabsStorage, setDataInStorage] = useLocaleStorage('data', {\r\n      date: new Date().toLocaleDateString().split('.').reverse().join(''),\r\n      tabs: [],\r\n    })\r\n    const [tabItems, setTabItems] = useValue(tabsStorage)\r\n    // select tabs and category\r\n    const [tab, setTab] = useValue(tabItems.tabs.length ? tabItems.tabs[0].title : '')\r\n    const [category, setCategory, categorySelectOnChange] = useValue(\r\n      tabItems.tabs.length ? tabItems.tabs[0].title : '',\r\n    )\r\n\r\n    useEffect(() => {\r\n      const date = new Date().toLocaleDateString().split('.').reverse().join('')\r\n\r\n      if (userInfo.uid && date !== tabItems.date) {\r\n        database.writeNewDayData(\r\n          userInfo.uid,\r\n          calendarDate.toLocaleDateString().replaceAll('.', ''),\r\n          setTabItems,\r\n          setCategory,\r\n          setTab,\r\n        )\r\n      }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      timeLine.past === timeLine.future && setDataInStorage(tabItems)\r\n    }, [tabItems])\r\n\r\n    // select calendar value\r\n    const selectData = date => {\r\n      const selectedDate = +date.toLocaleDateString().split('.').reverse().join('')\r\n      const present = +new Date().toLocaleDateString().split('.').reverse().join('')\r\n\r\n      if (selectedDate < present) {\r\n        setTimeLine({ past: selectedDate < present, future: selectedDate > present })\r\n        return database.readPastData({\r\n          userInfo,\r\n          date,\r\n          tabItems,\r\n          setTabItems,\r\n          setCategory,\r\n          setTab,\r\n          modals,\r\n          openModals,\r\n          setCalendarDate,\r\n          createAuthInfoModal,\r\n        })\r\n      } else if (selectedDate > present) {\r\n        setTimeLine({ past: selectedDate < present, future: selectedDate > present })\r\n        setCalendarDate(date)\r\n        openModals({ ...modals, calendarModal: false })\r\n        return database.writeNewDayData(\r\n          userInfo.uid,\r\n          date.toLocaleDateString().replaceAll('.', ''),\r\n          setTabItems,\r\n          setCategory,\r\n          setTab,\r\n        )\r\n      }\r\n\r\n      setTimeLine({ past: false, future: false })\r\n      setCalendarDate(date)\r\n      setTabItems(tabsStorage)\r\n      setCategory(tabsStorage.tabs.length && tabsStorage.tabs[0].title)\r\n      setTab(tabsStorage.tabs.length && tabsStorage.tabs[0].title)\r\n      openModals({ ...modals, calendarModal: false })\r\n    }\r\n\r\n    const tasksMethods = {\r\n      createTask: (inputValue, setInputValue) => {\r\n        setInputValue('')\r\n        openModals({ ...modals, taskModal: false })\r\n        setTab(category)\r\n\r\n        const newTask = {\r\n          task: inputValue,\r\n          time: new Date().toLocaleTimeString(),\r\n          completed: false,\r\n        }\r\n\r\n        const updatedTabItems = tabItems.tabs.map(tab => {\r\n          return tab.title === category ? { ...tab, data: [...tab.data, newTask] } : tab\r\n        })\r\n\r\n        database.writeUserTasksData(\r\n          userInfo.uid,\r\n          calendarDate.toLocaleDateString().replaceAll('.', ''),\r\n          updatedTabItems,\r\n        )\r\n\r\n        return setTabItems({ ...tabItems, tabs: updatedTabItems })\r\n      },\r\n      deleteTask: (title, currentTask) => {\r\n        const filteredTasks = tasks => tasks.filter(task => task.time !== currentTask.time)\r\n\r\n        const updatedTabItems = tabItems.tabs.map(tab => {\r\n          return title === tab.title ? { ...tab, data: filteredTasks(tab.data) } : tab\r\n        })\r\n\r\n        database.writeUserTasksData(\r\n          userInfo.uid,\r\n          calendarDate.toLocaleDateString().replaceAll('.', ''),\r\n          updatedTabItems,\r\n        )\r\n\r\n        return setTabItems({ ...tabItems, tabs: updatedTabItems })\r\n      },\r\n      completeTask: (title, currentTask, complete) => {\r\n        const updatedTabItems = { ...tabItems }\r\n\r\n        let updated = false\r\n\r\n        for (const tab of updatedTabItems.tabs) {\r\n          if (title === tab.title) {\r\n            for (const task of tab.data) {\r\n              if (currentTask.time === task.time) {\r\n                task.completed = !complete\r\n                updated = true\r\n                break\r\n              }\r\n            }\r\n\r\n            if (updated) break\r\n          }\r\n        }\r\n\r\n        database.writeUserTasksData(\r\n          userInfo.uid,\r\n          calendarDate.toLocaleDateString().replaceAll('.', ''),\r\n          updatedTabItems.tabs,\r\n        )\r\n\r\n        return setTabItems(updatedTabItems)\r\n      },\r\n      editTask: (e, title, currentTask, newValue) => {\r\n        e.target.style.borderBottom = `1px solid ${e.target.value ? 'transparent' : 'red'}`\r\n        e.target.readOnly = e.code === 'Enter' && e.target.value\r\n\r\n        const updatedTabItems = { ...tabItems }\r\n\r\n        let updated = false\r\n\r\n        for (const tab of updatedTabItems.tabs) {\r\n          if (title === tab.title) {\r\n            for (const task of tab.data) {\r\n              if (currentTask.time === task.time) {\r\n                task.task = newValue\r\n                updated = true\r\n                break\r\n              }\r\n            }\r\n            if (updated) break\r\n          }\r\n        }\r\n\r\n        database.writeUserTasksData(\r\n          userInfo.uid,\r\n          calendarDate.toLocaleDateString().replaceAll('.', ''),\r\n          updatedTabItems.tabs,\r\n        )\r\n\r\n        return setTabItems(updatedTabItems)\r\n      },\r\n      setSortType: value => {\r\n        const updatedTabItems = { ...tabItems }\r\n\r\n        updatedTabItems.tabs.forEach(category => {\r\n          if (category.title === tab) {\r\n            category.sortingType = value\r\n\r\n            category.data.sort((a, b) => {\r\n              const first = a.time.replaceAll(':', '')\r\n              const second = b.time.replaceAll(':', '')\r\n\r\n              return category.sortingType === 'newest first' ? second - first : first - second\r\n            })\r\n          }\r\n        })\r\n\r\n        database.writeUserTasksData(\r\n          userInfo.uid,\r\n          calendarDate.toLocaleDateString().replaceAll('.', ''),\r\n          updatedTabItems.tabs,\r\n        )\r\n\r\n        return setTabItems({ ...updatedTabItems })\r\n      },\r\n    }\r\n\r\n    // global context\r\n    const contextValues = {\r\n      darkMode,\r\n      setDarkMode,\r\n      containerAddCategory,\r\n      showContainerAddCategory,\r\n      modals,\r\n      openModals,\r\n      authInfoModal,\r\n      createAuthInfoModal,\r\n      sideMenu,\r\n      openSideMenu,\r\n      calendarDate,\r\n      setCalendarDate,\r\n      timeLine,\r\n      setTimeLine,\r\n      selectData,\r\n      setDataInStorage,\r\n      userInfo,\r\n      setUserInfo,\r\n      tab,\r\n      setTab,\r\n      tabItems,\r\n      setTabItems,\r\n      defaultPhoto,\r\n      category,\r\n      setCategory,\r\n      categorySelectOnChange,\r\n      tasksMethods,\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={contextValues}>\r\n        <Component darkMode={darkMode} />\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport { withApp }\r\n","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\hooks\\useLocaleStorage.js",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\context.js",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\App\\App.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\MyModal\\MyModal.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\MainBtn\\MainBtn.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\Input\\Input.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\LogOut\\LogOut.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\UI\\Select\\Select.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\MyTitle\\MyTitle.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\Main.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\profile-page\\Profile.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\MainContent.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Authorization\\Authorization.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Calendar\\Calendar.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\TaskModal\\TaskModal.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\MainTop\\Main.top.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\DateContainer\\DateContainer.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\Tasks.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\DateContainer\\Time.jsx",["237"],[],"import { useEffect } from 'react'\r\nimport { database } from '../../../../firebase/firebaseConfig'\r\nimport useValue from '../../../../hooks/useValue'\r\n\r\nconst Time = ({ userInfo, setTabItems, setCategory, setTab, setCalendarDate }) => {\r\n  const [today, setToday] = useValue(new Date())\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setToday(new Date()), 999)\r\n    today.toLocaleTimeString() === '00:00:00' && setCalendarDate(today)\r\n    return () => clearInterval(interval)\r\n  }, [today])\r\n\r\n  if (userInfo.uid && today.toLocaleTimeString() === '00:00:00') {\r\n    database.writeNewDayData(\r\n      userInfo.uid,\r\n      today.toLocaleDateString().replaceAll('.', ''),\r\n      setTabItems,\r\n      setTab,\r\n      setCategory,\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='time__block'>\r\n      <span className='time__helpTitle'>Now on the clock</span>\r\n      <div className='time__block-data'>\r\n        <svg width='24' height='24' fill='none'>\r\n          <path\r\n            d='M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z'\r\n            stroke='#282846'\r\n            strokeWidth='2'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n          />\r\n          <path\r\n            d='M12 6V12L16 14'\r\n            stroke='#282846'\r\n            strokeWidth='2'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n          />\r\n        </svg>\r\n        <span>{today.toLocaleTimeString()}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Time\r\n","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\MainTop\\UserModal\\UserModal.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\CategoriesTab\\CategoriesTab.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\MainTop\\UserMenu\\UserMenu.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\CategoriesConfig\\CategoriesConfig.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\Task\\Task.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\InfoAuthModal\\InfoAuthModal.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\firebase\\firebaseConfig.js",["238"],[],"import { initializeApp } from 'firebase/app'\r\nimport { getDatabase, ref, set, get } from 'firebase/database'\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getDatabase(app)\r\n\r\n/* \r\n This is an auxiliary function that adds an empty array to the object for rendering,\r\n since empty arrays cannot be stored in the database.\r\n*/\r\nconst addEmptyArrays = data => {\r\n  return data.map(obj => (obj.hasOwnProperty('data') ? obj : { ...obj, data: [] }))\r\n}\r\n// Helper function for writing data in the database\r\nconst writeToDataBase = (path, data) => set(ref(db, path), data)\r\n// Helper function for reading data from the database\r\nconst readFromDatabase = path => get(ref(db, path))\r\n\r\n// database\r\nconst database = {\r\n  // send user information (email,avatar,nickname,id)\r\n  writeUserInfoData: async userInfo => {\r\n    const path = `users/${userInfo.uid}/user_info`\r\n\r\n    const data = {\r\n      uid: userInfo.uid,\r\n      username: userInfo.nick,\r\n      email: userInfo.email,\r\n      avatar: userInfo.photo,\r\n    }\r\n\r\n    return userInfo.uid && (await writeToDataBase(path, data))\r\n  },\r\n  // send user tasks Data\r\n  writeUserTasksData: async (userId, date, updatedTabItems) => {\r\n    const path = `users/${userId}/user_tasks/${date}`\r\n    return userId && (await writeToDataBase(path, { ...updatedTabItems }))\r\n  },\r\n  // create/read new day\r\n  writeNewDayData: async (userId, date, setTabItems, setCategory, setTab) => {\r\n    const path = `users/${userId}/user_tasks/${date}`\r\n    const snapshot = await readFromDatabase(path)\r\n\r\n    const dataTabItems = {\r\n      date: new Date().toLocaleDateString().split('.').reverse().join(''),\r\n      tabs: [],\r\n    }\r\n\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.val()\r\n\r\n      setCategory(data[0].title)\r\n      setTab(data[0].title)\r\n      dataTabItems.tabs = addEmptyArrays(data)\r\n    }\r\n\r\n    return setTabItems(dataTabItems)\r\n  },\r\n  // create Data for new user\r\n  createUserData: async (userId, userInfo, tabItems) => {\r\n    const day = new Date().toLocaleDateString().replaceAll('.', '')\r\n    const path = `users/${userId}`\r\n\r\n    const data = {\r\n      user_info: {\r\n        uid: userInfo.uid,\r\n        username: userInfo.nick,\r\n        email: userInfo.email,\r\n        avatar: userInfo.photo,\r\n      },\r\n      user_tasks: { [day]: tabItems.tabs },\r\n    }\r\n\r\n    return userId && (await writeToDataBase(path, data))\r\n  },\r\n  // reade user Data\r\n  readUserData: async (userId, setUserInfo, tabItems, setTabItems, setTab, setCategory) => {\r\n    const date = new Date().toLocaleDateString().replaceAll('.', '')\r\n    const path = `users/${userId}/`\r\n    const snapshot = await readFromDatabase(path)\r\n\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.val()\r\n\r\n      const condition = data.user_tasks && data.user_tasks[date]\r\n\r\n      const userData = {\r\n        info: {\r\n          photo: data.user_info.avatar,\r\n          nick: data.user_info.username,\r\n          email: data.user_info.email,\r\n          uid: data.user_info.uid,\r\n        },\r\n        tabs: {\r\n          ...tabItems,\r\n          tabs: addEmptyArrays(condition ? data.user_tasks[date] : []),\r\n        },\r\n      }\r\n\r\n      setUserInfo(userData.info)\r\n      setTabItems(userData.tabs)\r\n      setCategory(condition ? data.user_tasks[date][0].title : '')\r\n      setTab(condition ? data.user_tasks[date][0].title : '')\r\n    }\r\n  },\r\n  // reading the data of the selected day\r\n  readPastData: async params => {\r\n    const {\r\n      date,\r\n      userInfo,\r\n      setCalendarDate,\r\n      setCategory,\r\n      setTab,\r\n      tabItems,\r\n      setTabItems,\r\n      modals,\r\n      openModals,\r\n      createAuthInfoModal,\r\n    } = params\r\n\r\n    const pastDate = date.toLocaleDateString().replaceAll('.', '')\r\n    const path = `users/${userInfo.uid}/user_tasks/${pastDate}`\r\n    const snapshot = await readFromDatabase(path)\r\n\r\n    if (snapshot.exists()) {\r\n      const tasks = snapshot.val()\r\n\r\n      setCalendarDate(date)\r\n      setCategory(tasks[0].title)\r\n      setTab(tasks[0].title)\r\n      setTabItems({ ...tabItems, tabs: addEmptyArrays(tasks) })\r\n      openModals({ ...modals, calendarModal: false })\r\n    } else {\r\n      createAuthInfoModal({\r\n        show: true,\r\n        type: 'Error',\r\n        text: `You don't have any tasks for this day`,\r\n      })\r\n    }\r\n  },\r\n  // Statistics\r\n  createStatistics: async (userId, period, setStatistics, tabItems) => {\r\n    const date = new Date().toLocaleDateString().replaceAll('.', '')\r\n    const path = `users/${userId}/user_tasks/`\r\n\r\n    const statistics = { Categories: 0, Created: 0, Completed: 0 }\r\n\r\n    const updateStatistics = data => {\r\n      data.forEach(category => {\r\n        if (category.hasOwnProperty('data')) {\r\n          statistics.Created += category.data.length\r\n          statistics.Completed += category.data.filter(task => task.completed).length\r\n        }\r\n      })\r\n    }\r\n\r\n    const selectPeriod = data => {\r\n      const periods = {\r\n        Month: () => {\r\n          const currentMonth = date.substring(2, 4)\r\n\r\n          for (const day in data) {\r\n            if (day.substring(2, 4) === currentMonth) {\r\n              statistics.Categories += data[day].length\r\n              updateStatistics(data[day])\r\n            }\r\n          }\r\n        },\r\n        Year: () => {\r\n          const currentYear = date.substring(4)\r\n\r\n          for (const day in data) {\r\n            if (day.substring(4) === currentYear) {\r\n              statistics.Categories += data[day].length\r\n              updateStatistics(data[day])\r\n            }\r\n          }\r\n        },\r\n      }\r\n\r\n      return periods[period]()\r\n    }\r\n\r\n    if (period === 'Day') {\r\n      statistics.Categories = tabItems.tabs.length\r\n      updateStatistics(tabItems.tabs)\r\n    } else {\r\n      const snapshot = await readFromDatabase(path)\r\n      snapshot.exists() && selectPeriod(snapshot.val())\r\n    }\r\n\r\n    return setStatistics(statistics)\r\n  },\r\n}\r\n\r\n// Authentication methods\r\nconst authentication = {\r\n  // Login\r\n  loginEmailPassword: async params => {\r\n    const {\r\n      login,\r\n      setLogin,\r\n      createAuthInfoModal,\r\n      userInfo,\r\n      setUserInfo,\r\n      tabItems,\r\n      setTabItems,\r\n      setTab,\r\n      setCategory,\r\n      modals,\r\n      openModals,\r\n    } = params\r\n\r\n    if (login.Password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, login.Email, login.Password)\r\n\r\n        if (userCredential) {\r\n          setLogin({ Email: '', Password: '' })\r\n          createAuthInfoModal({\r\n            show: true,\r\n            type: 'Success',\r\n            text: 'Authorization successfully',\r\n          })\r\n\r\n          setUserInfo({\r\n            ...userInfo,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.readUserData(\r\n            userCredential.user.uid,\r\n            setUserInfo,\r\n            tabItems,\r\n            setTabItems,\r\n            setTab,\r\n            setCategory,\r\n          )\r\n\r\n          setTimeout(() => openModals({ ...modals, authModal: false }), 1500)\r\n        }\r\n      } catch (Error) {\r\n        createAuthInfoModal({\r\n          show: true,\r\n          type: 'Error',\r\n          text: Error.code.substring(5).replaceAll('-', ' '),\r\n        })\r\n      }\r\n    }\r\n  },\r\n  // Registration\r\n  registrationEmailPassword: async params => {\r\n    const {\r\n      registration,\r\n      setRegistration,\r\n      navigate,\r\n      createAuthInfoModal,\r\n      userInfo,\r\n      setUserInfo,\r\n      tabItems,\r\n      modals,\r\n      openModals,\r\n    } = params\r\n\r\n    if (registration.Password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          registration.Email,\r\n          registration.Password,\r\n        )\r\n\r\n        if (userCredential) {\r\n          setRegistration({ Email: '', Password: '' })\r\n          createAuthInfoModal({\r\n            show: true,\r\n            type: 'Success',\r\n            text: 'Registration successfully',\r\n          })\r\n\r\n          setUserInfo({\r\n            ...userInfo,\r\n            email: userCredential.user.email,\r\n            uid: userCredential.user.uid,\r\n          })\r\n\r\n          database.createUserData(userCredential.user.uid, userInfo, tabItems)\r\n\r\n          setTimeout(() => {\r\n            openModals({ ...modals, authModal: false })\r\n            navigate('Profile.jsx')\r\n          }, 1000)\r\n        }\r\n      } catch (Error) {\r\n        createAuthInfoModal({\r\n          show: true,\r\n          type: 'Error',\r\n          text: Error.code.substring(5).replaceAll('-', ' '),\r\n        })\r\n      }\r\n    }\r\n  },\r\n  // Logout\r\n  logOut: async params => {\r\n    const { defaultPhoto, setCalendarDate, setTimeLine, setUserInfo, tabItems, setTabItems } =\r\n      params\r\n\r\n    const userData = {\r\n      info: {\r\n        photo: defaultPhoto,\r\n        nick: 'username',\r\n        email: '',\r\n        uid: '',\r\n      },\r\n      tabs: { ...tabItems, tabs: [] },\r\n    }\r\n\r\n    setCalendarDate(new Date())\r\n    setTimeLine({ past: false, future: false })\r\n    setUserInfo(userData.info)\r\n    setTabItems(userData.tabs)\r\n\r\n    return await signOut(auth)\r\n  },\r\n}\r\n\r\nexport { authentication, database }\r\n","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\Layout.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\AsideBar.jsx",["239"],[],"import { useContext, useEffect, useRef } from 'react'\r\nimport { Context } from '../../../context'\r\nimport Logo from './Logo/Logo'\r\nimport CategoryList from './CategoryList/CategoryList'\r\nimport Info from './Info/Info'\r\nimport LogOut from '../../../Components/UI/LogOut/LogOut'\r\nimport MainBtn from '../../UI/MainBtn/MainBtn'\r\nimport './asideBar.scss'\r\n\r\nconst AsideBar = ({ darkMode }) => {\r\n  const { sideMenu, openSideMenu, userInfo } = useContext(Context)\r\n  const ref = useRef(null)\r\n\r\n  const handleClickOutside = e => !ref.current.contains(e.target) && openSideMenu(false)\r\n\r\n  useEffect(() => {\r\n    if (window.matchMedia('(max-width: 1280px)').matches) {\r\n      document.addEventListener('click', handleClickOutside, { passive: true })\r\n      return () => document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  const sideMenuCl = ['asideBar']\r\n\r\n  darkMode && sideMenuCl.push('darkMode')\r\n  sideMenu && sideMenuCl.push('open')\r\n\r\n  const conditionLogOut = userInfo.uid && window.matchMedia('(min-width: 768px)').matches\r\n\r\n  return (\r\n    <aside className={sideMenuCl.join(' ')} ref={ref}>\r\n      <div className='asideBar__container'>\r\n        <Logo />\r\n        <CategoryList />\r\n        <Info darkMode={darkMode} />\r\n        {conditionLogOut && (\r\n          <div className='asideBar__logOut'>\r\n            <LogOut />\r\n          </div>\r\n        )}\r\n        {window.matchMedia('(max-width: 1280px)').matches && (\r\n          <MainBtn className='asideBar__menu' type='button' onClick={() => openSideMenu(!sideMenu)}>\r\n            <span className='asideBar__menu-item'></span>\r\n          </MainBtn>\r\n        )}\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default AsideBar\r\n","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\CategoryList\\CategoryList.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\Info\\Info.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\Logo\\Logo.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\ListItem\\ListItem.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\DateContainer\\DateButton.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Statistics\\Statistics.jsx",["240"],[],"import { useContext, useEffect } from 'react'\r\nimport { Context } from '../../../../context'\r\nimport { database } from '../../../../firebase/firebaseConfig'\r\nimport useValue from '../../../../hooks/useValue'\r\nimport MyModal from '../../../../Components/UI/MyModal/MyModal'\r\nimport MyTitle from '../../../../Components/MyTitle/MyTitle'\r\nimport Select from '../../../../Components/UI/Select/Select'\r\nimport StatisticsItem from './StatisticsItem'\r\nimport './statistics.scss'\r\n\r\nconst Statistics = () => {\r\n  const [selected, , selectOnchange] = useValue('Day')\r\n  const [statistics, setStatistics] = useValue({\r\n    Categories: '',\r\n    Created: '',\r\n    Completed: '',\r\n  })\r\n  const { darkMode, modals, openModals, userInfo, tabItems } = useContext(Context)\r\n\r\n  const changePeriod = e => {\r\n    selectOnchange(e)\r\n    database.createStatistics(userInfo.uid, e.target.value, setStatistics, tabItems)\r\n  }\r\n\r\n  useEffect(() => {\r\n    userInfo.uid && database.createStatistics(userInfo.uid, selected, setStatistics, tabItems)\r\n  }, [modals.statisticsModal])\r\n\r\n  const styleObj = {\r\n    titleStyles: {\r\n      fontWeight: '700',\r\n      fontSize: '22px',\r\n      lineHeight: '27px',\r\n      letterSpacing: '0.02em',\r\n    },\r\n    selectStyles: {\r\n      width: '110px',\r\n      padding: '4px 5px',\r\n      border: '1px solid rgba(40, 40, 70, 0.3)',\r\n      borderRadius: '8px',\r\n      fontWeight: '400',\r\n      fontSize: '16px',\r\n      cursor: 'pointer',\r\n      option: {\r\n        fontSize: '16px',\r\n        color: '#666',\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <MyModal\r\n      darkMode={darkMode}\r\n      opened={modals.statisticsModal}\r\n      closeModal={() => openModals({ ...modals, statisticsModal: false })}>\r\n      <MyTitle {...styleObj.titleStyles}>Statistics</MyTitle>\r\n\r\n      <div className='statistics__select'>\r\n        <span className='statistics__select-text'>Successes of the:</span>\r\n        <Select\r\n          styles={styleObj.selectStyles}\r\n          options={[{ title: 'Day' }, { title: 'Month' }, { title: 'Year' }]}\r\n          value={selected}\r\n          onChange={changePeriod}\r\n        />\r\n      </div>\r\n\r\n      <div className='statistics__container'>\r\n        <StatisticsItem quantity={statistics.Categories} />\r\n        <StatisticsItem itemName='Created' quantity={statistics.Created} />\r\n        <StatisticsItem itemName='Completed' quantity={statistics.Completed} />\r\n      </div>\r\n    </MyModal>\r\n  )\r\n}\r\n\r\nexport default Statistics\r\n","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Statistics\\StatisticsItem.jsx",["241"],[],"import { useEffect } from 'react'\r\nimport useValue from '../../../../hooks/useValue'\r\n\r\nconst StatisticsItem = ({ itemName, quantity }) => {\r\n  let [count, setCount] = useValue(0)\r\n\r\n  useEffect(() => {\r\n    count < quantity && setTimeout(() => setCount(count + 1), 30)\r\n  })\r\n\r\n  useEffect(() => setCount(0), [quantity])\r\n\r\n  return (\r\n    <div className='statistics__item'>\r\n      <span>{itemName}</span>\r\n      <div className='statistics__item-info'>\r\n        <div className='statistics__item-count'>{count}</div>\r\n        <span>{itemName ? 'Tasks' : 'Categories'}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatisticsItem\r\n","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\CategoriesTab\\CategoryHeader.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\MainContent\\Tasks\\CategoriesTab\\TasksContainer.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Authorization\\LoginForm.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\Authorization\\RegistrationForm.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\CategoryList\\AddCategory\\AddCategory.jsx",["242"],[],"import { useRef, useContext, useEffect } from 'react'\r\nimport InputContainer from './InputContainer'\r\nimport useValue from '../../../../../hooks/useValue'\r\nimport MainBtn from '../../../../UI/MainBtn/MainBtn'\r\nimport { Context } from '../../../../../context'\r\nimport { database } from '../../../../../firebase/firebaseConfig'\r\nimport './addCategory.scss'\r\n\r\nconst AddCategory = () => {\r\n  const [inputValue, setInputValue, onChange] = useValue('')\r\n  const inputRef = useRef(null)\r\n  const containerRef = useRef(null)\r\n\r\n  const {\r\n    tabItems,\r\n    setTabItems,\r\n    setCategory,\r\n    containerAddCategory,\r\n    showContainerAddCategory,\r\n    setTab,\r\n    userInfo,\r\n    calendarDate,\r\n    openSideMenu,\r\n  } = useContext(Context)\r\n\r\n  const toggleInputContainer = () => {\r\n    inputValue && setInputValue('')\r\n    setTimeout(() => inputRef.current.focus(), 300)\r\n    showContainerAddCategory(!containerAddCategory)\r\n  }\r\n\r\n  const desiredElement = tabItems.tabs.find(tab => tab.title === inputValue)\r\n\r\n  const addNewCategory = () => {\r\n    if (inputValue && !desiredElement) {\r\n      setInputValue('')\r\n\r\n      const newTab = { title: inputValue, sortingType: 'newest first', data: [] }\r\n      const newTabItems = [...tabItems.tabs, newTab]\r\n\r\n      setTabItems({ ...tabItems, tabs: newTabItems })\r\n      showContainerAddCategory(!containerAddCategory)\r\n      setCategory(inputValue)\r\n      setTab(inputValue)\r\n      openSideMenu(false)\r\n\r\n      return database.writeUserTasksData(\r\n        userInfo.uid,\r\n        calendarDate.toLocaleDateString().replaceAll('.', ''),\r\n        newTabItems,\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleClickOutside = e => {\r\n    const mainTopBtnEl = e.target.className !== 'mainContent__top-btn',\r\n      mainTopBtnChildEl = e.target.parentElement.className !== 'mainContent__top-btn'\r\n\r\n    const anotherOutsideEl = mainTopBtnChildEl && mainTopBtnEl\r\n\r\n    if (!containerRef.current.contains(e.target) && anotherOutsideEl) {\r\n      showContainerAddCategory(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, { passive: true })\r\n    return () => document.removeEventListener('click', handleClickOutside)\r\n  }, [containerAddCategory])\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      <InputContainer\r\n        addNewCategory={addNewCategory}\r\n        toggleInputContainer={toggleInputContainer}\r\n        inputValue={inputValue}\r\n        setInputValue={onChange}\r\n        visibleContainer={containerAddCategory}\r\n        desiredElement={desiredElement}\r\n        ref={inputRef}\r\n      />\r\n\r\n      <MainBtn\r\n        className={containerAddCategory ? 'addCategory__btn invisible' : 'addCategory__btn'}\r\n        type='button'\r\n        onClick={toggleInputContainer}>\r\n        <svg width='18' height='18' fill='none'>\r\n          <path\r\n            d='M14.25 2.25H3.75C2.92157 2.25 2.25 2.92157 2.25 3.75V14.25C2.25 15.0784 2.92157 15.75 3.75 15.75H14.25C15.0784 15.75 15.75 15.0784 15.75 14.25V3.75C15.75 2.92157 15.0784 2.25 14.25 2.25Z'\r\n            stroke='#29A19C'\r\n            strokeWidth='1.5'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n          />\r\n          <path\r\n            d='M9 6V12'\r\n            stroke='#29A19C'\r\n            strokeWidth='1.5'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n          />\r\n          <path\r\n            d='M6 9H12'\r\n            stroke='#29A19C'\r\n            strokeWidth='1.5'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n          />\r\n        </svg>\r\n        <span>new category</span>\r\n      </MainBtn>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCategory\r\n","C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Components\\Layout\\AsideBar\\CategoryList\\AddCategory\\InputContainer.jsx",[],[],"C:\\Users\\DarkFlyingCat\\Desktop\\dev\\my-task-manager\\src\\Pages\\main-page\\modalWindows\\DeleteCategoryModal\\DeleteCategoryModal.jsx",[],[],{"ruleId":"243","severity":1,"message":"244","line":63,"column":8,"nodeType":"245","endLine":63,"endColumn":10,"suggestions":"246"},{"ruleId":"243","severity":1,"message":"247","line":67,"column":8,"nodeType":"245","endLine":67,"endColumn":18,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"249","line":12,"column":6,"nodeType":"245","endLine":12,"endColumn":13,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":18,"column":3,"nodeType":"253","messageId":"254","endLine":18,"endColumn":14},{"ruleId":"243","severity":1,"message":"255","line":21,"column":6,"nodeType":"245","endLine":21,"endColumn":8,"suggestions":"256"},{"ruleId":"243","severity":1,"message":"257","line":27,"column":6,"nodeType":"245","endLine":27,"endColumn":30,"suggestions":"258"},{"ruleId":"243","severity":1,"message":"259","line":11,"column":32,"nodeType":"245","endLine":11,"endColumn":42,"suggestions":"260"},{"ruleId":"243","severity":1,"message":"255","line":69,"column":6,"nodeType":"245","endLine":69,"endColumn":28,"suggestions":"261"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'calendarDate', 'setCategory', 'setTab', 'setTabItems', 'tabItems.date', and 'userInfo.uid'. Either include them or remove the dependency array.","ArrayExpression",["262"],"React Hook useEffect has missing dependencies: 'setDataInStorage', 'timeLine.future', and 'timeLine.past'. Either include them or remove the dependency array.",["263"],"React Hook useEffect has missing dependencies: 'setCalendarDate' and 'setToday'. Either include them or remove the dependency array. If 'setCalendarDate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"no-dupe-keys","Duplicate key 'databaseURL'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'selected', 'setStatistics', 'tabItems', and 'userInfo.uid'. Either include them or remove the dependency array.",["266"],"React Hook useEffect has a missing dependency: 'setCount'. Either include it or remove the dependency array.",["267"],["268"],{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [calendarDate, setCategory, setTab, setTabItems, tabItems.date, userInfo.uid]",{"range":"283","text":"284"},"Update the dependencies array to be: [setDataInStorage, tabItems, timeLine.future, timeLine.past]",{"range":"285","text":"286"},"Update the dependencies array to be: [setCalendarDate, setToday, today]",{"range":"287","text":"288"},"Update the dependencies array to be: [handleClickOutside]",{"range":"289","text":"290"},"Update the dependencies array to be: [modals.statisticsModal, selected, setStatistics, tabItems, userInfo.uid]",{"range":"291","text":"292"},"Update the dependencies array to be: [quantity, setCount]",{"range":"293","text":"294"},"Update the dependencies array to be: [containerAddCategory, handleClickOutside]",{"range":"295","text":"296"},[2220,2222],"[calendarDate, setCategory, setTab, setTabItems, tabItems.date, userInfo.uid]",[2328,2338],"[setDataInStorage, tabItems, timeLine.future, timeLine.past]",[497,504],"[setCalendarDate, setToday, today]",[835,837],"[handleClickOutside]",[1029,1053],"[modals.statisticsModal, selected, setStatistics, tabItems, userInfo.uid]",[310,320],"[quantity, setCount]",[2191,2213],"[containerAddCategory, handleClickOutside]"]